
Lab3_2.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000060  00800100  00000c7a  00000d0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c7a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800160  00800160  00000d6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dcc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009a0  00000000  00000000  00000e64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007bc  00000000  00000000  00001804  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003be  00000000  00000000  00001fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000154  00000000  00000000  00002380  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047e  00000000  00000000  000024d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000373  00000000  00000000  00002952  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002cc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__vector_10>
  2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e7       	ldi	r30, 0x7A	; 122
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 36       	cpi	r26, 0x60	; 96
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e6       	ldi	r26, 0x60	; 96
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 37       	cpi	r26, 0x72	; 114
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <main>
  9e:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	ec e6       	ldi	r30, 0x6C	; 108
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <timer1_init>:
bool edges_detected = 0, ready_for_next_response = 0;
int num_overflows = 0;

void timer1_init()
{
	TCCR1B |= (1 << CS10);      // Enable the timer with no prescaling
 112:	e1 e8       	ldi	r30, 0x81	; 129
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	81 60       	ori	r24, 0x01	; 1
 11a:	80 83       	st	Z, r24
	
	TCNT1 = 0;	// Initialize the timer count value to 0
 11c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 120:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	TCCR1A |= (1 << COM1A0);	// Set Compare output mode - Toggle OC1A on Compare Match
 124:	e0 e8       	ldi	r30, 0x80	; 128
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	80 64       	ori	r24, 0x40	; 64
 12c:	80 83       	st	Z, r24
	
	TIMSK1 |= (1 << OCIE1A);		// Enable output compare A match interrupt enable
 12e:	ef e6       	ldi	r30, 0x6F	; 111
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	82 60       	ori	r24, 0x02	; 2
 136:	80 83       	st	Z, r24

	OCR1A = 80;					// Initialize the output compare value for 5us
 138:	80 e5       	ldi	r24, 0x50	; 80
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 140:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	sei();						// Enable global interrupts
 144:	78 94       	sei
 146:	08 95       	ret

00000148 <__vector_11>:
}

ISR(TIMER1_COMPA_vect)
{	
 148:	1f 92       	push	r1
 14a:	0f 92       	push	r0
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	0f 92       	push	r0
 150:	11 24       	eor	r1, r1
 152:	8f 93       	push	r24
 154:	af 93       	push	r26
 156:	bf 93       	push	r27
 158:	ef 93       	push	r30
 15a:	ff 93       	push	r31
	TCNT1 = 0;		// Initialize the timer count value to 0
 15c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 160:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>

	TCCR1A &= ~(1 << COM1A0);	// Disable the output compare on timer1
 164:	e0 e8       	ldi	r30, 0x80	; 128
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	8f 7b       	andi	r24, 0xBF	; 191
 16c:	80 83       	st	Z, r24
	
	TIMSK1 &= ~(1 << OCIE1A);	// Disable the output compare match interrupt
 16e:	ef e6       	ldi	r30, 0x6F	; 111
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	8d 7f       	andi	r24, 0xFD	; 253
 176:	80 83       	st	Z, r24
	
    //if (OCR1A == 80)
	{
		TCCR1B |= (1 << ICES1);	// Enable the input capture trigger on rising edge
 178:	a1 e8       	ldi	r26, 0x81	; 129
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	8c 91       	ld	r24, X
 17e:	80 64       	ori	r24, 0x40	; 64
 180:	8c 93       	st	X, r24
		
		TIMSK1 |= (1 << ICIE1);	// Enable the input capture interrupt
 182:	80 81       	ld	r24, Z
 184:	80 62       	ori	r24, 0x20	; 32
 186:	80 83       	st	Z, r24
	}
	//else
	{
		//ready_for_next_response = 1;
	}
}
 188:	ff 91       	pop	r31
 18a:	ef 91       	pop	r30
 18c:	bf 91       	pop	r27
 18e:	af 91       	pop	r26
 190:	8f 91       	pop	r24
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__vector_13>:

ISR(TIMER1_OVF_vect)
{
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	8f 93       	push	r24
 1a8:	9f 93       	push	r25
	num_overflows++;
 1aa:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <__data_end>
 1ae:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <__data_end+0x1>
 1b2:	01 96       	adiw	r24, 0x01	; 1
 1b4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <__data_end+0x1>
 1b8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__data_end>
}
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

000001ca <__vector_10>:

ISR(TIMER1_CAPT_vect)
{
 1ca:	1f 92       	push	r1
 1cc:	0f 92       	push	r0
 1ce:	0f b6       	in	r0, 0x3f	; 63
 1d0:	0f 92       	push	r0
 1d2:	11 24       	eor	r1, r1
 1d4:	2f 93       	push	r18
 1d6:	3f 93       	push	r19
 1d8:	4f 93       	push	r20
 1da:	5f 93       	push	r21
 1dc:	6f 93       	push	r22
 1de:	7f 93       	push	r23
 1e0:	8f 93       	push	r24
 1e2:	9f 93       	push	r25
 1e4:	af 93       	push	r26
 1e6:	bf 93       	push	r27
 1e8:	ef 93       	push	r30
 1ea:	ff 93       	push	r31
	// Check if trigger is set on rising edge
	if (TCCR1B & (1 << ICIE1))
 1ec:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1f0:	85 ff       	sbrs	r24, 5
 1f2:	24 c0       	rjmp	.+72     	; 0x23c <__vector_10+0x72>
	{
		rising_edge_time = ICR1;	// Get the time at which rising edge is received
 1f4:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1f8:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1fc:	a0 e0       	ldi	r26, 0x00	; 0
 1fe:	b0 e0       	ldi	r27, 0x00	; 0
 200:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <rising_edge_time>
 204:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <rising_edge_time+0x1>
 208:	a0 93 66 01 	sts	0x0166, r26	; 0x800166 <rising_edge_time+0x2>
 20c:	b0 93 67 01 	sts	0x0167, r27	; 0x800167 <rising_edge_time+0x3>
		printf("rising edge time - %l\n", rising_edge_time);
 210:	1f 92       	push	r1
 212:	1f 92       	push	r1
 214:	9f 93       	push	r25
 216:	8f 93       	push	r24
 218:	8c e1       	ldi	r24, 0x1C	; 28
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	9f 93       	push	r25
 21e:	8f 93       	push	r24
 220:	0e 94 2d 03 	call	0x65a	; 0x65a <printf>
		TCCR1B |= ~(1 << ICES1);	// Enable the input capture trigger on falling edge
 224:	e1 e8       	ldi	r30, 0x81	; 129
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	8f 6b       	ori	r24, 0xBF	; 191
 22c:	80 83       	st	Z, r24
 22e:	0f 90       	pop	r0
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	21 c0       	rjmp	.+66     	; 0x27e <__vector_10+0xb4>
	}
	else
	{
		falling_edge_time = ICR1;	// Get the time at which falling edge is received
 23c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 240:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 244:	a0 e0       	ldi	r26, 0x00	; 0
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <falling_edge_time>
 24c:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <falling_edge_time+0x1>
 250:	a0 93 6a 01 	sts	0x016A, r26	; 0x80016a <falling_edge_time+0x2>
 254:	b0 93 6b 01 	sts	0x016B, r27	; 0x80016b <falling_edge_time+0x3>
		edges_detected = 1;
 258:	21 e0       	ldi	r18, 0x01	; 1
 25a:	20 93 63 01 	sts	0x0163, r18	; 0x800163 <edges_detected>
		printf("falling edge time - %l\n", falling_edge_time);
 25e:	1f 92       	push	r1
 260:	1f 92       	push	r1
 262:	9f 93       	push	r25
 264:	8f 93       	push	r24
 266:	83 e3       	ldi	r24, 0x33	; 51
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	9f 93       	push	r25
 26c:	8f 93       	push	r24
 26e:	0e 94 2d 03 	call	0x65a	; 0x65a <printf>
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	0f 90       	pop	r0
 278:	0f 90       	pop	r0
 27a:	0f 90       	pop	r0
 27c:	0f 90       	pop	r0
	
		TCNT1 = 0;		
		OCR1A = 3200;	// Wait for 200us
		*/
	}
}
 27e:	ff 91       	pop	r31
 280:	ef 91       	pop	r30
 282:	bf 91       	pop	r27
 284:	af 91       	pop	r26
 286:	9f 91       	pop	r25
 288:	8f 91       	pop	r24
 28a:	7f 91       	pop	r23
 28c:	6f 91       	pop	r22
 28e:	5f 91       	pop	r21
 290:	4f 91       	pop	r20
 292:	3f 91       	pop	r19
 294:	2f 91       	pop	r18
 296:	0f 90       	pop	r0
 298:	0f be       	out	0x3f, r0	; 63
 29a:	0f 90       	pop	r0
 29c:	1f 90       	pop	r1
 29e:	18 95       	reti

000002a0 <main>:


int main(void)
{
 2a0:	cf 93       	push	r28
 2a2:	df 93       	push	r29
 2a4:	cd b7       	in	r28, 0x3d	; 61
 2a6:	de b7       	in	r29, 0x3e	; 62
 2a8:	c0 54       	subi	r28, 0x40	; 64
 2aa:	d1 09       	sbc	r29, r1
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0x02;		// Set PB1 to be output pin and PB0 as input pin
 2b6:	82 e0       	ldi	r24, 0x02	; 2
 2b8:	84 b9       	out	0x04, r24	; 4
	
	// Initialize the uart
	uart_init();
 2ba:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>
		{
			num_clock_ticks = falling_edge_time - rising_edge_time;
		}
		else
		{
			num_clock_ticks = (NUM_TOTAL_TICKS - rising_edge_time) + (num_overflows * NUM_TOTAL_TICKS) + falling_edge_time;
 2be:	88 24       	eor	r8, r8
 2c0:	8a 94       	dec	r8
 2c2:	98 2c       	mov	r9, r8
 2c4:	a1 2c       	mov	r10, r1
 2c6:	b1 2c       	mov	r11, r1
		}
		pulse_width = num_clock_ticks * CLOCK_TIME_PERIOD_US;
		
		// Print the width on terminal
		char result[64];
		snprintf(result, 64, "Pulse width is %ld\n", pulse_width);
 2c8:	0f 2e       	mov	r0, r31
 2ca:	fb e4       	ldi	r31, 0x4B	; 75
 2cc:	ef 2e       	mov	r14, r31
 2ce:	f1 e0       	ldi	r31, 0x01	; 1
 2d0:	ff 2e       	mov	r15, r31
 2d2:	f0 2d       	mov	r31, r0
 2d4:	68 94       	set
 2d6:	dd 24       	eor	r13, r13
 2d8:	d6 f8       	bld	r13, 6
 2da:	8e 01       	movw	r16, r28
 2dc:	0f 5f       	subi	r16, 0xFF	; 255
 2de:	1f 4f       	sbci	r17, 0xFF	; 255
	uart_init();
		
	while(1)
	{
		
		num_overflows = 0;
 2e0:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <__data_end+0x1>
 2e4:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <__data_end>
		
		PORTB |= (1 << 1);	// Set output pin to high	
 2e8:	29 9a       	sbi	0x05, 1	; 5
		
		// Initialize the timer with output compare configuration
		timer1_init();
 2ea:	0e 94 89 00 	call	0x112	; 0x112 <timer1_init>
			
		while (!edges_detected)
 2ee:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <edges_detected>
 2f2:	88 23       	and	r24, r24
 2f4:	f1 f3       	breq	.-4      	; 0x2f2 <main+0x52>
		;

		edges_detected = 0;
 2f6:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <edges_detected>
		
		long int pulse_width, num_clock_ticks;
		
		// Get the pulse width
		if (num_overflows == 0)
 2fa:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <__data_end>
 2fe:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <__data_end+0x1>
 302:	10 97       	sbiw	r26, 0x00	; 0
 304:	b9 f4       	brne	.+46     	; 0x334 <main+0x94>
		{
			num_clock_ticks = falling_edge_time - rising_edge_time;
 306:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <falling_edge_time>
 30a:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <falling_edge_time+0x1>
 30e:	a0 91 6a 01 	lds	r26, 0x016A	; 0x80016a <falling_edge_time+0x2>
 312:	b0 91 6b 01 	lds	r27, 0x016B	; 0x80016b <falling_edge_time+0x3>
 316:	40 90 64 01 	lds	r4, 0x0164	; 0x800164 <rising_edge_time>
 31a:	50 90 65 01 	lds	r5, 0x0165	; 0x800165 <rising_edge_time+0x1>
 31e:	60 90 66 01 	lds	r6, 0x0166	; 0x800166 <rising_edge_time+0x2>
 322:	70 90 67 01 	lds	r7, 0x0167	; 0x800167 <rising_edge_time+0x3>
 326:	bc 01       	movw	r22, r24
 328:	cd 01       	movw	r24, r26
 32a:	64 19       	sub	r22, r4
 32c:	75 09       	sbc	r23, r5
 32e:	86 09       	sbc	r24, r6
 330:	97 09       	sbc	r25, r7
 332:	28 c0       	rjmp	.+80     	; 0x384 <main+0xe4>
		}
		else
		{
			num_clock_ticks = (NUM_TOTAL_TICKS - rising_edge_time) + (num_overflows * NUM_TOTAL_TICKS) + falling_edge_time;
 334:	40 91 64 01 	lds	r20, 0x0164	; 0x800164 <rising_edge_time>
 338:	50 91 65 01 	lds	r21, 0x0165	; 0x800165 <rising_edge_time+0x1>
 33c:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <rising_edge_time+0x2>
 340:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <rising_edge_time+0x3>
 344:	24 01       	movw	r4, r8
 346:	35 01       	movw	r6, r10
 348:	44 1a       	sub	r4, r20
 34a:	55 0a       	sbc	r5, r21
 34c:	66 0a       	sbc	r6, r22
 34e:	77 0a       	sbc	r7, r23
 350:	2f ef       	ldi	r18, 0xFF	; 255
 352:	3f ef       	ldi	r19, 0xFF	; 255
 354:	0e 94 17 03 	call	0x62e	; 0x62e <__usmulhisi3>
 358:	ab 01       	movw	r20, r22
 35a:	bc 01       	movw	r22, r24
 35c:	44 0d       	add	r20, r4
 35e:	55 1d       	adc	r21, r5
 360:	66 1d       	adc	r22, r6
 362:	77 1d       	adc	r23, r7
 364:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <falling_edge_time>
 368:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <falling_edge_time+0x1>
 36c:	a0 91 6a 01 	lds	r26, 0x016A	; 0x80016a <falling_edge_time+0x2>
 370:	b0 91 6b 01 	lds	r27, 0x016B	; 0x80016b <falling_edge_time+0x3>
 374:	2a 01       	movw	r4, r20
 376:	3b 01       	movw	r6, r22
 378:	48 0e       	add	r4, r24
 37a:	59 1e       	adc	r5, r25
 37c:	6a 1e       	adc	r6, r26
 37e:	7b 1e       	adc	r7, r27
 380:	c3 01       	movw	r24, r6
 382:	b2 01       	movw	r22, r4
		}
		pulse_width = num_clock_ticks * CLOCK_TIME_PERIOD_US;
		
		// Print the width on terminal
		char result[64];
		snprintf(result, 64, "Pulse width is %ld\n", pulse_width);
 384:	0e 94 1e 02 	call	0x43c	; 0x43c <__floatsisf>
 388:	20 e0       	ldi	r18, 0x00	; 0
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	40 e8       	ldi	r20, 0x80	; 128
 38e:	5d e3       	ldi	r21, 0x3D	; 61
 390:	0e 94 82 02 	call	0x504	; 0x504 <__mulsf3>
 394:	0e 94 e6 01 	call	0x3cc	; 0x3cc <__fixsfsi>
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	7f 93       	push	r23
 39e:	6f 93       	push	r22
 3a0:	ff 92       	push	r15
 3a2:	ef 92       	push	r14
 3a4:	1f 92       	push	r1
 3a6:	df 92       	push	r13
 3a8:	1f 93       	push	r17
 3aa:	0f 93       	push	r16
 3ac:	0e 94 43 03 	call	0x686	; 0x686 <snprintf>
		printf(result);
 3b0:	1f 93       	push	r17
 3b2:	0f 93       	push	r16
 3b4:	0e 94 2d 03 	call	0x65a	; 0x65a <printf>
		
		while(!ready_for_next_response)
 3b8:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <ready_for_next_response>
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	de bf       	out	0x3e, r29	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	cd bf       	out	0x3d, r28	; 61
 3c6:	88 23       	and	r24, r24
 3c8:	f1 f3       	breq	.-4      	; 0x3c6 <main+0x126>
 3ca:	8a cf       	rjmp	.-236    	; 0x2e0 <main+0x40>

000003cc <__fixsfsi>:
 3cc:	0e 94 ed 01 	call	0x3da	; 0x3da <__fixunssfsi>
 3d0:	68 94       	set
 3d2:	b1 11       	cpse	r27, r1
 3d4:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_szero>
 3d8:	08 95       	ret

000003da <__fixunssfsi>:
 3da:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__fp_splitA>
 3de:	88 f0       	brcs	.+34     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e0:	9f 57       	subi	r25, 0x7F	; 127
 3e2:	98 f0       	brcs	.+38     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e4:	b9 2f       	mov	r27, r25
 3e6:	99 27       	eor	r25, r25
 3e8:	b7 51       	subi	r27, 0x17	; 23
 3ea:	b0 f0       	brcs	.+44     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ec:	e1 f0       	breq	.+56     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3ee:	66 0f       	add	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	99 1f       	adc	r25, r25
 3f6:	1a f0       	brmi	.+6      	; 0x3fe <__fixunssfsi+0x24>
 3f8:	ba 95       	dec	r27
 3fa:	c9 f7       	brne	.-14     	; 0x3ee <__fixunssfsi+0x14>
 3fc:	14 c0       	rjmp	.+40     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3fe:	b1 30       	cpi	r27, 0x01	; 1
 400:	91 f0       	breq	.+36     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 402:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_zero>
 406:	b1 e0       	ldi	r27, 0x01	; 1
 408:	08 95       	ret
 40a:	0c 94 7b 02 	jmp	0x4f6	; 0x4f6 <__fp_zero>
 40e:	67 2f       	mov	r22, r23
 410:	78 2f       	mov	r23, r24
 412:	88 27       	eor	r24, r24
 414:	b8 5f       	subi	r27, 0xF8	; 248
 416:	39 f0       	breq	.+14     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 418:	b9 3f       	cpi	r27, 0xF9	; 249
 41a:	cc f3       	brlt	.-14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 41c:	86 95       	lsr	r24
 41e:	77 95       	ror	r23
 420:	67 95       	ror	r22
 422:	b3 95       	inc	r27
 424:	d9 f7       	brne	.-10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 426:	3e f4       	brtc	.+14     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 428:	90 95       	com	r25
 42a:	80 95       	com	r24
 42c:	70 95       	com	r23
 42e:	61 95       	neg	r22
 430:	7f 4f       	sbci	r23, 0xFF	; 255
 432:	8f 4f       	sbci	r24, 0xFF	; 255
 434:	9f 4f       	sbci	r25, 0xFF	; 255
 436:	08 95       	ret

00000438 <__floatunsisf>:
 438:	e8 94       	clt
 43a:	09 c0       	rjmp	.+18     	; 0x44e <__floatsisf+0x12>

0000043c <__floatsisf>:
 43c:	97 fb       	bst	r25, 7
 43e:	3e f4       	brtc	.+14     	; 0x44e <__floatsisf+0x12>
 440:	90 95       	com	r25
 442:	80 95       	com	r24
 444:	70 95       	com	r23
 446:	61 95       	neg	r22
 448:	7f 4f       	sbci	r23, 0xFF	; 255
 44a:	8f 4f       	sbci	r24, 0xFF	; 255
 44c:	9f 4f       	sbci	r25, 0xFF	; 255
 44e:	99 23       	and	r25, r25
 450:	a9 f0       	breq	.+42     	; 0x47c <__floatsisf+0x40>
 452:	f9 2f       	mov	r31, r25
 454:	96 e9       	ldi	r25, 0x96	; 150
 456:	bb 27       	eor	r27, r27
 458:	93 95       	inc	r25
 45a:	f6 95       	lsr	r31
 45c:	87 95       	ror	r24
 45e:	77 95       	ror	r23
 460:	67 95       	ror	r22
 462:	b7 95       	ror	r27
 464:	f1 11       	cpse	r31, r1
 466:	f8 cf       	rjmp	.-16     	; 0x458 <__floatsisf+0x1c>
 468:	fa f4       	brpl	.+62     	; 0x4a8 <__floatsisf+0x6c>
 46a:	bb 0f       	add	r27, r27
 46c:	11 f4       	brne	.+4      	; 0x472 <__floatsisf+0x36>
 46e:	60 ff       	sbrs	r22, 0
 470:	1b c0       	rjmp	.+54     	; 0x4a8 <__floatsisf+0x6c>
 472:	6f 5f       	subi	r22, 0xFF	; 255
 474:	7f 4f       	sbci	r23, 0xFF	; 255
 476:	8f 4f       	sbci	r24, 0xFF	; 255
 478:	9f 4f       	sbci	r25, 0xFF	; 255
 47a:	16 c0       	rjmp	.+44     	; 0x4a8 <__floatsisf+0x6c>
 47c:	88 23       	and	r24, r24
 47e:	11 f0       	breq	.+4      	; 0x484 <__floatsisf+0x48>
 480:	96 e9       	ldi	r25, 0x96	; 150
 482:	11 c0       	rjmp	.+34     	; 0x4a6 <__floatsisf+0x6a>
 484:	77 23       	and	r23, r23
 486:	21 f0       	breq	.+8      	; 0x490 <__floatsisf+0x54>
 488:	9e e8       	ldi	r25, 0x8E	; 142
 48a:	87 2f       	mov	r24, r23
 48c:	76 2f       	mov	r23, r22
 48e:	05 c0       	rjmp	.+10     	; 0x49a <__floatsisf+0x5e>
 490:	66 23       	and	r22, r22
 492:	71 f0       	breq	.+28     	; 0x4b0 <__floatsisf+0x74>
 494:	96 e8       	ldi	r25, 0x86	; 134
 496:	86 2f       	mov	r24, r22
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	60 e0       	ldi	r22, 0x00	; 0
 49c:	2a f0       	brmi	.+10     	; 0x4a8 <__floatsisf+0x6c>
 49e:	9a 95       	dec	r25
 4a0:	66 0f       	add	r22, r22
 4a2:	77 1f       	adc	r23, r23
 4a4:	88 1f       	adc	r24, r24
 4a6:	da f7       	brpl	.-10     	; 0x49e <__floatsisf+0x62>
 4a8:	88 0f       	add	r24, r24
 4aa:	96 95       	lsr	r25
 4ac:	87 95       	ror	r24
 4ae:	97 f9       	bld	r25, 7
 4b0:	08 95       	ret

000004b2 <__fp_split3>:
 4b2:	57 fd       	sbrc	r21, 7
 4b4:	90 58       	subi	r25, 0x80	; 128
 4b6:	44 0f       	add	r20, r20
 4b8:	55 1f       	adc	r21, r21
 4ba:	59 f0       	breq	.+22     	; 0x4d2 <__fp_splitA+0x10>
 4bc:	5f 3f       	cpi	r21, 0xFF	; 255
 4be:	71 f0       	breq	.+28     	; 0x4dc <__fp_splitA+0x1a>
 4c0:	47 95       	ror	r20

000004c2 <__fp_splitA>:
 4c2:	88 0f       	add	r24, r24
 4c4:	97 fb       	bst	r25, 7
 4c6:	99 1f       	adc	r25, r25
 4c8:	61 f0       	breq	.+24     	; 0x4e2 <__fp_splitA+0x20>
 4ca:	9f 3f       	cpi	r25, 0xFF	; 255
 4cc:	79 f0       	breq	.+30     	; 0x4ec <__fp_splitA+0x2a>
 4ce:	87 95       	ror	r24
 4d0:	08 95       	ret
 4d2:	12 16       	cp	r1, r18
 4d4:	13 06       	cpc	r1, r19
 4d6:	14 06       	cpc	r1, r20
 4d8:	55 1f       	adc	r21, r21
 4da:	f2 cf       	rjmp	.-28     	; 0x4c0 <__fp_split3+0xe>
 4dc:	46 95       	lsr	r20
 4de:	f1 df       	rcall	.-30     	; 0x4c2 <__fp_splitA>
 4e0:	08 c0       	rjmp	.+16     	; 0x4f2 <__fp_splitA+0x30>
 4e2:	16 16       	cp	r1, r22
 4e4:	17 06       	cpc	r1, r23
 4e6:	18 06       	cpc	r1, r24
 4e8:	99 1f       	adc	r25, r25
 4ea:	f1 cf       	rjmp	.-30     	; 0x4ce <__fp_splitA+0xc>
 4ec:	86 95       	lsr	r24
 4ee:	71 05       	cpc	r23, r1
 4f0:	61 05       	cpc	r22, r1
 4f2:	08 94       	sec
 4f4:	08 95       	ret

000004f6 <__fp_zero>:
 4f6:	e8 94       	clt

000004f8 <__fp_szero>:
 4f8:	bb 27       	eor	r27, r27
 4fa:	66 27       	eor	r22, r22
 4fc:	77 27       	eor	r23, r23
 4fe:	cb 01       	movw	r24, r22
 500:	97 f9       	bld	r25, 7
 502:	08 95       	ret

00000504 <__mulsf3>:
 504:	0e 94 95 02 	call	0x52a	; 0x52a <__mulsf3x>
 508:	0c 94 06 03 	jmp	0x60c	; 0x60c <__fp_round>
 50c:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_pscA>
 510:	38 f0       	brcs	.+14     	; 0x520 <__mulsf3+0x1c>
 512:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_pscB>
 516:	20 f0       	brcs	.+8      	; 0x520 <__mulsf3+0x1c>
 518:	95 23       	and	r25, r21
 51a:	11 f0       	breq	.+4      	; 0x520 <__mulsf3+0x1c>
 51c:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__fp_inf>
 520:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_nan>
 524:	11 24       	eor	r1, r1
 526:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_szero>

0000052a <__mulsf3x>:
 52a:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__fp_split3>
 52e:	70 f3       	brcs	.-36     	; 0x50c <__mulsf3+0x8>

00000530 <__mulsf3_pse>:
 530:	95 9f       	mul	r25, r21
 532:	c1 f3       	breq	.-16     	; 0x524 <__mulsf3+0x20>
 534:	95 0f       	add	r25, r21
 536:	50 e0       	ldi	r21, 0x00	; 0
 538:	55 1f       	adc	r21, r21
 53a:	62 9f       	mul	r22, r18
 53c:	f0 01       	movw	r30, r0
 53e:	72 9f       	mul	r23, r18
 540:	bb 27       	eor	r27, r27
 542:	f0 0d       	add	r31, r0
 544:	b1 1d       	adc	r27, r1
 546:	63 9f       	mul	r22, r19
 548:	aa 27       	eor	r26, r26
 54a:	f0 0d       	add	r31, r0
 54c:	b1 1d       	adc	r27, r1
 54e:	aa 1f       	adc	r26, r26
 550:	64 9f       	mul	r22, r20
 552:	66 27       	eor	r22, r22
 554:	b0 0d       	add	r27, r0
 556:	a1 1d       	adc	r26, r1
 558:	66 1f       	adc	r22, r22
 55a:	82 9f       	mul	r24, r18
 55c:	22 27       	eor	r18, r18
 55e:	b0 0d       	add	r27, r0
 560:	a1 1d       	adc	r26, r1
 562:	62 1f       	adc	r22, r18
 564:	73 9f       	mul	r23, r19
 566:	b0 0d       	add	r27, r0
 568:	a1 1d       	adc	r26, r1
 56a:	62 1f       	adc	r22, r18
 56c:	83 9f       	mul	r24, r19
 56e:	a0 0d       	add	r26, r0
 570:	61 1d       	adc	r22, r1
 572:	22 1f       	adc	r18, r18
 574:	74 9f       	mul	r23, r20
 576:	33 27       	eor	r19, r19
 578:	a0 0d       	add	r26, r0
 57a:	61 1d       	adc	r22, r1
 57c:	23 1f       	adc	r18, r19
 57e:	84 9f       	mul	r24, r20
 580:	60 0d       	add	r22, r0
 582:	21 1d       	adc	r18, r1
 584:	82 2f       	mov	r24, r18
 586:	76 2f       	mov	r23, r22
 588:	6a 2f       	mov	r22, r26
 58a:	11 24       	eor	r1, r1
 58c:	9f 57       	subi	r25, 0x7F	; 127
 58e:	50 40       	sbci	r21, 0x00	; 0
 590:	9a f0       	brmi	.+38     	; 0x5b8 <__mulsf3_pse+0x88>
 592:	f1 f0       	breq	.+60     	; 0x5d0 <__mulsf3_pse+0xa0>
 594:	88 23       	and	r24, r24
 596:	4a f0       	brmi	.+18     	; 0x5aa <__mulsf3_pse+0x7a>
 598:	ee 0f       	add	r30, r30
 59a:	ff 1f       	adc	r31, r31
 59c:	bb 1f       	adc	r27, r27
 59e:	66 1f       	adc	r22, r22
 5a0:	77 1f       	adc	r23, r23
 5a2:	88 1f       	adc	r24, r24
 5a4:	91 50       	subi	r25, 0x01	; 1
 5a6:	50 40       	sbci	r21, 0x00	; 0
 5a8:	a9 f7       	brne	.-22     	; 0x594 <__mulsf3_pse+0x64>
 5aa:	9e 3f       	cpi	r25, 0xFE	; 254
 5ac:	51 05       	cpc	r21, r1
 5ae:	80 f0       	brcs	.+32     	; 0x5d0 <__mulsf3_pse+0xa0>
 5b0:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__fp_inf>
 5b4:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_szero>
 5b8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ba:	e4 f3       	brlt	.-8      	; 0x5b4 <__mulsf3_pse+0x84>
 5bc:	98 3e       	cpi	r25, 0xE8	; 232
 5be:	d4 f3       	brlt	.-12     	; 0x5b4 <__mulsf3_pse+0x84>
 5c0:	86 95       	lsr	r24
 5c2:	77 95       	ror	r23
 5c4:	67 95       	ror	r22
 5c6:	b7 95       	ror	r27
 5c8:	f7 95       	ror	r31
 5ca:	e7 95       	ror	r30
 5cc:	9f 5f       	subi	r25, 0xFF	; 255
 5ce:	c1 f7       	brne	.-16     	; 0x5c0 <__mulsf3_pse+0x90>
 5d0:	fe 2b       	or	r31, r30
 5d2:	88 0f       	add	r24, r24
 5d4:	91 1d       	adc	r25, r1
 5d6:	96 95       	lsr	r25
 5d8:	87 95       	ror	r24
 5da:	97 f9       	bld	r25, 7
 5dc:	08 95       	ret

000005de <__fp_inf>:
 5de:	97 f9       	bld	r25, 7
 5e0:	9f 67       	ori	r25, 0x7F	; 127
 5e2:	80 e8       	ldi	r24, 0x80	; 128
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	08 95       	ret

000005ea <__fp_nan>:
 5ea:	9f ef       	ldi	r25, 0xFF	; 255
 5ec:	80 ec       	ldi	r24, 0xC0	; 192
 5ee:	08 95       	ret

000005f0 <__fp_pscA>:
 5f0:	00 24       	eor	r0, r0
 5f2:	0a 94       	dec	r0
 5f4:	16 16       	cp	r1, r22
 5f6:	17 06       	cpc	r1, r23
 5f8:	18 06       	cpc	r1, r24
 5fa:	09 06       	cpc	r0, r25
 5fc:	08 95       	ret

000005fe <__fp_pscB>:
 5fe:	00 24       	eor	r0, r0
 600:	0a 94       	dec	r0
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	14 06       	cpc	r1, r20
 608:	05 06       	cpc	r0, r21
 60a:	08 95       	ret

0000060c <__fp_round>:
 60c:	09 2e       	mov	r0, r25
 60e:	03 94       	inc	r0
 610:	00 0c       	add	r0, r0
 612:	11 f4       	brne	.+4      	; 0x618 <__fp_round+0xc>
 614:	88 23       	and	r24, r24
 616:	52 f0       	brmi	.+20     	; 0x62c <__fp_round+0x20>
 618:	bb 0f       	add	r27, r27
 61a:	40 f4       	brcc	.+16     	; 0x62c <__fp_round+0x20>
 61c:	bf 2b       	or	r27, r31
 61e:	11 f4       	brne	.+4      	; 0x624 <__fp_round+0x18>
 620:	60 ff       	sbrs	r22, 0
 622:	04 c0       	rjmp	.+8      	; 0x62c <__fp_round+0x20>
 624:	6f 5f       	subi	r22, 0xFF	; 255
 626:	7f 4f       	sbci	r23, 0xFF	; 255
 628:	8f 4f       	sbci	r24, 0xFF	; 255
 62a:	9f 4f       	sbci	r25, 0xFF	; 255
 62c:	08 95       	ret

0000062e <__usmulhisi3>:
 62e:	0e 94 1e 03 	call	0x63c	; 0x63c <__umulhisi3>

00000632 <__usmulhisi3_tail>:
 632:	b7 ff       	sbrs	r27, 7
 634:	08 95       	ret
 636:	82 1b       	sub	r24, r18
 638:	93 0b       	sbc	r25, r19
 63a:	08 95       	ret

0000063c <__umulhisi3>:
 63c:	a2 9f       	mul	r26, r18
 63e:	b0 01       	movw	r22, r0
 640:	b3 9f       	mul	r27, r19
 642:	c0 01       	movw	r24, r0
 644:	a3 9f       	mul	r26, r19
 646:	70 0d       	add	r23, r0
 648:	81 1d       	adc	r24, r1
 64a:	11 24       	eor	r1, r1
 64c:	91 1d       	adc	r25, r1
 64e:	b2 9f       	mul	r27, r18
 650:	70 0d       	add	r23, r0
 652:	81 1d       	adc	r24, r1
 654:	11 24       	eor	r1, r1
 656:	91 1d       	adc	r25, r1
 658:	08 95       	ret

0000065a <printf>:
 65a:	a0 e0       	ldi	r26, 0x00	; 0
 65c:	b0 e0       	ldi	r27, 0x00	; 0
 65e:	e3 e3       	ldi	r30, 0x33	; 51
 660:	f3 e0       	ldi	r31, 0x03	; 3
 662:	0c 94 14 06 	jmp	0xc28	; 0xc28 <__prologue_saves__+0x20>
 666:	ae 01       	movw	r20, r28
 668:	4b 5f       	subi	r20, 0xFB	; 251
 66a:	5f 4f       	sbci	r21, 0xFF	; 255
 66c:	fa 01       	movw	r30, r20
 66e:	61 91       	ld	r22, Z+
 670:	71 91       	ld	r23, Z+
 672:	af 01       	movw	r20, r30
 674:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <__iob+0x2>
 678:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <__iob+0x3>
 67c:	0e 94 73 03 	call	0x6e6	; 0x6e6 <vfprintf>
 680:	e2 e0       	ldi	r30, 0x02	; 2
 682:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__epilogue_restores__+0x20>

00000686 <snprintf>:
 686:	ae e0       	ldi	r26, 0x0E	; 14
 688:	b0 e0       	ldi	r27, 0x00	; 0
 68a:	e9 e4       	ldi	r30, 0x49	; 73
 68c:	f3 e0       	ldi	r31, 0x03	; 3
 68e:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__prologue_saves__+0x1c>
 692:	0d 89       	ldd	r16, Y+21	; 0x15
 694:	1e 89       	ldd	r17, Y+22	; 0x16
 696:	8f 89       	ldd	r24, Y+23	; 0x17
 698:	98 8d       	ldd	r25, Y+24	; 0x18
 69a:	26 e0       	ldi	r18, 0x06	; 6
 69c:	2c 83       	std	Y+4, r18	; 0x04
 69e:	1a 83       	std	Y+2, r17	; 0x02
 6a0:	09 83       	std	Y+1, r16	; 0x01
 6a2:	97 ff       	sbrs	r25, 7
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <snprintf+0x24>
 6a6:	80 e0       	ldi	r24, 0x00	; 0
 6a8:	90 e8       	ldi	r25, 0x80	; 128
 6aa:	01 97       	sbiw	r24, 0x01	; 1
 6ac:	9e 83       	std	Y+6, r25	; 0x06
 6ae:	8d 83       	std	Y+5, r24	; 0x05
 6b0:	ae 01       	movw	r20, r28
 6b2:	45 5e       	subi	r20, 0xE5	; 229
 6b4:	5f 4f       	sbci	r21, 0xFF	; 255
 6b6:	69 8d       	ldd	r22, Y+25	; 0x19
 6b8:	7a 8d       	ldd	r23, Y+26	; 0x1a
 6ba:	ce 01       	movw	r24, r28
 6bc:	01 96       	adiw	r24, 0x01	; 1
 6be:	0e 94 73 03 	call	0x6e6	; 0x6e6 <vfprintf>
 6c2:	4d 81       	ldd	r20, Y+5	; 0x05
 6c4:	5e 81       	ldd	r21, Y+6	; 0x06
 6c6:	57 fd       	sbrc	r21, 7
 6c8:	0a c0       	rjmp	.+20     	; 0x6de <snprintf+0x58>
 6ca:	2f 81       	ldd	r18, Y+7	; 0x07
 6cc:	38 85       	ldd	r19, Y+8	; 0x08
 6ce:	42 17       	cp	r20, r18
 6d0:	53 07       	cpc	r21, r19
 6d2:	0c f4       	brge	.+2      	; 0x6d6 <snprintf+0x50>
 6d4:	9a 01       	movw	r18, r20
 6d6:	f8 01       	movw	r30, r16
 6d8:	e2 0f       	add	r30, r18
 6da:	f3 1f       	adc	r31, r19
 6dc:	10 82       	st	Z, r1
 6de:	2e 96       	adiw	r28, 0x0e	; 14
 6e0:	e4 e0       	ldi	r30, 0x04	; 4
 6e2:	0c 94 2e 06 	jmp	0xc5c	; 0xc5c <__epilogue_restores__+0x1c>

000006e6 <vfprintf>:
 6e6:	ab e0       	ldi	r26, 0x0B	; 11
 6e8:	b0 e0       	ldi	r27, 0x00	; 0
 6ea:	e9 e7       	ldi	r30, 0x79	; 121
 6ec:	f3 e0       	ldi	r31, 0x03	; 3
 6ee:	0c 94 04 06 	jmp	0xc08	; 0xc08 <__prologue_saves__>
 6f2:	6c 01       	movw	r12, r24
 6f4:	7b 01       	movw	r14, r22
 6f6:	8a 01       	movw	r16, r20
 6f8:	fc 01       	movw	r30, r24
 6fa:	17 82       	std	Z+7, r1	; 0x07
 6fc:	16 82       	std	Z+6, r1	; 0x06
 6fe:	83 81       	ldd	r24, Z+3	; 0x03
 700:	81 ff       	sbrs	r24, 1
 702:	cc c1       	rjmp	.+920    	; 0xa9c <__stack+0x19d>
 704:	ce 01       	movw	r24, r28
 706:	01 96       	adiw	r24, 0x01	; 1
 708:	3c 01       	movw	r6, r24
 70a:	f6 01       	movw	r30, r12
 70c:	93 81       	ldd	r25, Z+3	; 0x03
 70e:	f7 01       	movw	r30, r14
 710:	93 fd       	sbrc	r25, 3
 712:	85 91       	lpm	r24, Z+
 714:	93 ff       	sbrs	r25, 3
 716:	81 91       	ld	r24, Z+
 718:	7f 01       	movw	r14, r30
 71a:	88 23       	and	r24, r24
 71c:	09 f4       	brne	.+2      	; 0x720 <vfprintf+0x3a>
 71e:	ba c1       	rjmp	.+884    	; 0xa94 <__stack+0x195>
 720:	85 32       	cpi	r24, 0x25	; 37
 722:	39 f4       	brne	.+14     	; 0x732 <vfprintf+0x4c>
 724:	93 fd       	sbrc	r25, 3
 726:	85 91       	lpm	r24, Z+
 728:	93 ff       	sbrs	r25, 3
 72a:	81 91       	ld	r24, Z+
 72c:	7f 01       	movw	r14, r30
 72e:	85 32       	cpi	r24, 0x25	; 37
 730:	29 f4       	brne	.+10     	; 0x73c <vfprintf+0x56>
 732:	b6 01       	movw	r22, r12
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 73a:	e7 cf       	rjmp	.-50     	; 0x70a <vfprintf+0x24>
 73c:	91 2c       	mov	r9, r1
 73e:	21 2c       	mov	r2, r1
 740:	31 2c       	mov	r3, r1
 742:	ff e1       	ldi	r31, 0x1F	; 31
 744:	f3 15       	cp	r31, r3
 746:	d8 f0       	brcs	.+54     	; 0x77e <vfprintf+0x98>
 748:	8b 32       	cpi	r24, 0x2B	; 43
 74a:	79 f0       	breq	.+30     	; 0x76a <vfprintf+0x84>
 74c:	38 f4       	brcc	.+14     	; 0x75c <vfprintf+0x76>
 74e:	80 32       	cpi	r24, 0x20	; 32
 750:	79 f0       	breq	.+30     	; 0x770 <vfprintf+0x8a>
 752:	83 32       	cpi	r24, 0x23	; 35
 754:	a1 f4       	brne	.+40     	; 0x77e <vfprintf+0x98>
 756:	23 2d       	mov	r18, r3
 758:	20 61       	ori	r18, 0x10	; 16
 75a:	1d c0       	rjmp	.+58     	; 0x796 <vfprintf+0xb0>
 75c:	8d 32       	cpi	r24, 0x2D	; 45
 75e:	61 f0       	breq	.+24     	; 0x778 <vfprintf+0x92>
 760:	80 33       	cpi	r24, 0x30	; 48
 762:	69 f4       	brne	.+26     	; 0x77e <vfprintf+0x98>
 764:	23 2d       	mov	r18, r3
 766:	21 60       	ori	r18, 0x01	; 1
 768:	16 c0       	rjmp	.+44     	; 0x796 <vfprintf+0xb0>
 76a:	83 2d       	mov	r24, r3
 76c:	82 60       	ori	r24, 0x02	; 2
 76e:	38 2e       	mov	r3, r24
 770:	e3 2d       	mov	r30, r3
 772:	e4 60       	ori	r30, 0x04	; 4
 774:	3e 2e       	mov	r3, r30
 776:	2a c0       	rjmp	.+84     	; 0x7cc <vfprintf+0xe6>
 778:	f3 2d       	mov	r31, r3
 77a:	f8 60       	ori	r31, 0x08	; 8
 77c:	1d c0       	rjmp	.+58     	; 0x7b8 <vfprintf+0xd2>
 77e:	37 fc       	sbrc	r3, 7
 780:	2d c0       	rjmp	.+90     	; 0x7dc <vfprintf+0xf6>
 782:	20 ed       	ldi	r18, 0xD0	; 208
 784:	28 0f       	add	r18, r24
 786:	2a 30       	cpi	r18, 0x0A	; 10
 788:	40 f0       	brcs	.+16     	; 0x79a <vfprintf+0xb4>
 78a:	8e 32       	cpi	r24, 0x2E	; 46
 78c:	b9 f4       	brne	.+46     	; 0x7bc <vfprintf+0xd6>
 78e:	36 fc       	sbrc	r3, 6
 790:	81 c1       	rjmp	.+770    	; 0xa94 <__stack+0x195>
 792:	23 2d       	mov	r18, r3
 794:	20 64       	ori	r18, 0x40	; 64
 796:	32 2e       	mov	r3, r18
 798:	19 c0       	rjmp	.+50     	; 0x7cc <vfprintf+0xe6>
 79a:	36 fe       	sbrs	r3, 6
 79c:	06 c0       	rjmp	.+12     	; 0x7aa <vfprintf+0xc4>
 79e:	8a e0       	ldi	r24, 0x0A	; 10
 7a0:	98 9e       	mul	r9, r24
 7a2:	20 0d       	add	r18, r0
 7a4:	11 24       	eor	r1, r1
 7a6:	92 2e       	mov	r9, r18
 7a8:	11 c0       	rjmp	.+34     	; 0x7cc <vfprintf+0xe6>
 7aa:	ea e0       	ldi	r30, 0x0A	; 10
 7ac:	2e 9e       	mul	r2, r30
 7ae:	20 0d       	add	r18, r0
 7b0:	11 24       	eor	r1, r1
 7b2:	22 2e       	mov	r2, r18
 7b4:	f3 2d       	mov	r31, r3
 7b6:	f0 62       	ori	r31, 0x20	; 32
 7b8:	3f 2e       	mov	r3, r31
 7ba:	08 c0       	rjmp	.+16     	; 0x7cc <vfprintf+0xe6>
 7bc:	8c 36       	cpi	r24, 0x6C	; 108
 7be:	21 f4       	brne	.+8      	; 0x7c8 <vfprintf+0xe2>
 7c0:	83 2d       	mov	r24, r3
 7c2:	80 68       	ori	r24, 0x80	; 128
 7c4:	38 2e       	mov	r3, r24
 7c6:	02 c0       	rjmp	.+4      	; 0x7cc <vfprintf+0xe6>
 7c8:	88 36       	cpi	r24, 0x68	; 104
 7ca:	41 f4       	brne	.+16     	; 0x7dc <vfprintf+0xf6>
 7cc:	f7 01       	movw	r30, r14
 7ce:	93 fd       	sbrc	r25, 3
 7d0:	85 91       	lpm	r24, Z+
 7d2:	93 ff       	sbrs	r25, 3
 7d4:	81 91       	ld	r24, Z+
 7d6:	7f 01       	movw	r14, r30
 7d8:	81 11       	cpse	r24, r1
 7da:	b3 cf       	rjmp	.-154    	; 0x742 <vfprintf+0x5c>
 7dc:	98 2f       	mov	r25, r24
 7de:	9f 7d       	andi	r25, 0xDF	; 223
 7e0:	95 54       	subi	r25, 0x45	; 69
 7e2:	93 30       	cpi	r25, 0x03	; 3
 7e4:	28 f4       	brcc	.+10     	; 0x7f0 <vfprintf+0x10a>
 7e6:	0c 5f       	subi	r16, 0xFC	; 252
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	9f e3       	ldi	r25, 0x3F	; 63
 7ec:	99 83       	std	Y+1, r25	; 0x01
 7ee:	0d c0       	rjmp	.+26     	; 0x80a <vfprintf+0x124>
 7f0:	83 36       	cpi	r24, 0x63	; 99
 7f2:	31 f0       	breq	.+12     	; 0x800 <vfprintf+0x11a>
 7f4:	83 37       	cpi	r24, 0x73	; 115
 7f6:	71 f0       	breq	.+28     	; 0x814 <vfprintf+0x12e>
 7f8:	83 35       	cpi	r24, 0x53	; 83
 7fa:	09 f0       	breq	.+2      	; 0x7fe <vfprintf+0x118>
 7fc:	59 c0       	rjmp	.+178    	; 0x8b0 <vfprintf+0x1ca>
 7fe:	21 c0       	rjmp	.+66     	; 0x842 <vfprintf+0x15c>
 800:	f8 01       	movw	r30, r16
 802:	80 81       	ld	r24, Z
 804:	89 83       	std	Y+1, r24	; 0x01
 806:	0e 5f       	subi	r16, 0xFE	; 254
 808:	1f 4f       	sbci	r17, 0xFF	; 255
 80a:	88 24       	eor	r8, r8
 80c:	83 94       	inc	r8
 80e:	91 2c       	mov	r9, r1
 810:	53 01       	movw	r10, r6
 812:	13 c0       	rjmp	.+38     	; 0x83a <vfprintf+0x154>
 814:	28 01       	movw	r4, r16
 816:	f2 e0       	ldi	r31, 0x02	; 2
 818:	4f 0e       	add	r4, r31
 81a:	51 1c       	adc	r5, r1
 81c:	f8 01       	movw	r30, r16
 81e:	a0 80       	ld	r10, Z
 820:	b1 80       	ldd	r11, Z+1	; 0x01
 822:	36 fe       	sbrs	r3, 6
 824:	03 c0       	rjmp	.+6      	; 0x82c <vfprintf+0x146>
 826:	69 2d       	mov	r22, r9
 828:	70 e0       	ldi	r23, 0x00	; 0
 82a:	02 c0       	rjmp	.+4      	; 0x830 <vfprintf+0x14a>
 82c:	6f ef       	ldi	r22, 0xFF	; 255
 82e:	7f ef       	ldi	r23, 0xFF	; 255
 830:	c5 01       	movw	r24, r10
 832:	0e 94 5f 05 	call	0xabe	; 0xabe <strnlen>
 836:	4c 01       	movw	r8, r24
 838:	82 01       	movw	r16, r4
 83a:	f3 2d       	mov	r31, r3
 83c:	ff 77       	andi	r31, 0x7F	; 127
 83e:	3f 2e       	mov	r3, r31
 840:	16 c0       	rjmp	.+44     	; 0x86e <vfprintf+0x188>
 842:	28 01       	movw	r4, r16
 844:	22 e0       	ldi	r18, 0x02	; 2
 846:	42 0e       	add	r4, r18
 848:	51 1c       	adc	r5, r1
 84a:	f8 01       	movw	r30, r16
 84c:	a0 80       	ld	r10, Z
 84e:	b1 80       	ldd	r11, Z+1	; 0x01
 850:	36 fe       	sbrs	r3, 6
 852:	03 c0       	rjmp	.+6      	; 0x85a <vfprintf+0x174>
 854:	69 2d       	mov	r22, r9
 856:	70 e0       	ldi	r23, 0x00	; 0
 858:	02 c0       	rjmp	.+4      	; 0x85e <vfprintf+0x178>
 85a:	6f ef       	ldi	r22, 0xFF	; 255
 85c:	7f ef       	ldi	r23, 0xFF	; 255
 85e:	c5 01       	movw	r24, r10
 860:	0e 94 54 05 	call	0xaa8	; 0xaa8 <strnlen_P>
 864:	4c 01       	movw	r8, r24
 866:	f3 2d       	mov	r31, r3
 868:	f0 68       	ori	r31, 0x80	; 128
 86a:	3f 2e       	mov	r3, r31
 86c:	82 01       	movw	r16, r4
 86e:	33 fc       	sbrc	r3, 3
 870:	1b c0       	rjmp	.+54     	; 0x8a8 <vfprintf+0x1c2>
 872:	82 2d       	mov	r24, r2
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	88 16       	cp	r8, r24
 878:	99 06       	cpc	r9, r25
 87a:	b0 f4       	brcc	.+44     	; 0x8a8 <vfprintf+0x1c2>
 87c:	b6 01       	movw	r22, r12
 87e:	80 e2       	ldi	r24, 0x20	; 32
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 886:	2a 94       	dec	r2
 888:	f4 cf       	rjmp	.-24     	; 0x872 <vfprintf+0x18c>
 88a:	f5 01       	movw	r30, r10
 88c:	37 fc       	sbrc	r3, 7
 88e:	85 91       	lpm	r24, Z+
 890:	37 fe       	sbrs	r3, 7
 892:	81 91       	ld	r24, Z+
 894:	5f 01       	movw	r10, r30
 896:	b6 01       	movw	r22, r12
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 89e:	21 10       	cpse	r2, r1
 8a0:	2a 94       	dec	r2
 8a2:	21 e0       	ldi	r18, 0x01	; 1
 8a4:	82 1a       	sub	r8, r18
 8a6:	91 08       	sbc	r9, r1
 8a8:	81 14       	cp	r8, r1
 8aa:	91 04       	cpc	r9, r1
 8ac:	71 f7       	brne	.-36     	; 0x88a <vfprintf+0x1a4>
 8ae:	e8 c0       	rjmp	.+464    	; 0xa80 <__stack+0x181>
 8b0:	84 36       	cpi	r24, 0x64	; 100
 8b2:	11 f0       	breq	.+4      	; 0x8b8 <vfprintf+0x1d2>
 8b4:	89 36       	cpi	r24, 0x69	; 105
 8b6:	41 f5       	brne	.+80     	; 0x908 <__stack+0x9>
 8b8:	f8 01       	movw	r30, r16
 8ba:	37 fe       	sbrs	r3, 7
 8bc:	07 c0       	rjmp	.+14     	; 0x8cc <vfprintf+0x1e6>
 8be:	60 81       	ld	r22, Z
 8c0:	71 81       	ldd	r23, Z+1	; 0x01
 8c2:	82 81       	ldd	r24, Z+2	; 0x02
 8c4:	93 81       	ldd	r25, Z+3	; 0x03
 8c6:	0c 5f       	subi	r16, 0xFC	; 252
 8c8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ca:	08 c0       	rjmp	.+16     	; 0x8dc <vfprintf+0x1f6>
 8cc:	60 81       	ld	r22, Z
 8ce:	71 81       	ldd	r23, Z+1	; 0x01
 8d0:	07 2e       	mov	r0, r23
 8d2:	00 0c       	add	r0, r0
 8d4:	88 0b       	sbc	r24, r24
 8d6:	99 0b       	sbc	r25, r25
 8d8:	0e 5f       	subi	r16, 0xFE	; 254
 8da:	1f 4f       	sbci	r17, 0xFF	; 255
 8dc:	f3 2d       	mov	r31, r3
 8de:	ff 76       	andi	r31, 0x6F	; 111
 8e0:	3f 2e       	mov	r3, r31
 8e2:	97 ff       	sbrs	r25, 7
 8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <vfprintf+0x212>
 8e6:	90 95       	com	r25
 8e8:	80 95       	com	r24
 8ea:	70 95       	com	r23
 8ec:	61 95       	neg	r22
 8ee:	7f 4f       	sbci	r23, 0xFF	; 255
 8f0:	8f 4f       	sbci	r24, 0xFF	; 255
 8f2:	9f 4f       	sbci	r25, 0xFF	; 255
 8f4:	f0 68       	ori	r31, 0x80	; 128
 8f6:	3f 2e       	mov	r3, r31
 8f8:	2a e0       	ldi	r18, 0x0A	; 10
 8fa:	30 e0       	ldi	r19, 0x00	; 0
 8fc:	a3 01       	movw	r20, r6
 8fe:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__ultoa_invert>
 902:	88 2e       	mov	r8, r24
 904:	86 18       	sub	r8, r6
 906:	45 c0       	rjmp	.+138    	; 0x992 <__stack+0x93>
 908:	85 37       	cpi	r24, 0x75	; 117
 90a:	31 f4       	brne	.+12     	; 0x918 <__stack+0x19>
 90c:	23 2d       	mov	r18, r3
 90e:	2f 7e       	andi	r18, 0xEF	; 239
 910:	b2 2e       	mov	r11, r18
 912:	2a e0       	ldi	r18, 0x0A	; 10
 914:	30 e0       	ldi	r19, 0x00	; 0
 916:	25 c0       	rjmp	.+74     	; 0x962 <__stack+0x63>
 918:	93 2d       	mov	r25, r3
 91a:	99 7f       	andi	r25, 0xF9	; 249
 91c:	b9 2e       	mov	r11, r25
 91e:	8f 36       	cpi	r24, 0x6F	; 111
 920:	c1 f0       	breq	.+48     	; 0x952 <__stack+0x53>
 922:	18 f4       	brcc	.+6      	; 0x92a <__stack+0x2b>
 924:	88 35       	cpi	r24, 0x58	; 88
 926:	79 f0       	breq	.+30     	; 0x946 <__stack+0x47>
 928:	b5 c0       	rjmp	.+362    	; 0xa94 <__stack+0x195>
 92a:	80 37       	cpi	r24, 0x70	; 112
 92c:	19 f0       	breq	.+6      	; 0x934 <__stack+0x35>
 92e:	88 37       	cpi	r24, 0x78	; 120
 930:	21 f0       	breq	.+8      	; 0x93a <__stack+0x3b>
 932:	b0 c0       	rjmp	.+352    	; 0xa94 <__stack+0x195>
 934:	e9 2f       	mov	r30, r25
 936:	e0 61       	ori	r30, 0x10	; 16
 938:	be 2e       	mov	r11, r30
 93a:	b4 fe       	sbrs	r11, 4
 93c:	0d c0       	rjmp	.+26     	; 0x958 <__stack+0x59>
 93e:	fb 2d       	mov	r31, r11
 940:	f4 60       	ori	r31, 0x04	; 4
 942:	bf 2e       	mov	r11, r31
 944:	09 c0       	rjmp	.+18     	; 0x958 <__stack+0x59>
 946:	34 fe       	sbrs	r3, 4
 948:	0a c0       	rjmp	.+20     	; 0x95e <__stack+0x5f>
 94a:	29 2f       	mov	r18, r25
 94c:	26 60       	ori	r18, 0x06	; 6
 94e:	b2 2e       	mov	r11, r18
 950:	06 c0       	rjmp	.+12     	; 0x95e <__stack+0x5f>
 952:	28 e0       	ldi	r18, 0x08	; 8
 954:	30 e0       	ldi	r19, 0x00	; 0
 956:	05 c0       	rjmp	.+10     	; 0x962 <__stack+0x63>
 958:	20 e1       	ldi	r18, 0x10	; 16
 95a:	30 e0       	ldi	r19, 0x00	; 0
 95c:	02 c0       	rjmp	.+4      	; 0x962 <__stack+0x63>
 95e:	20 e1       	ldi	r18, 0x10	; 16
 960:	32 e0       	ldi	r19, 0x02	; 2
 962:	f8 01       	movw	r30, r16
 964:	b7 fe       	sbrs	r11, 7
 966:	07 c0       	rjmp	.+14     	; 0x976 <__stack+0x77>
 968:	60 81       	ld	r22, Z
 96a:	71 81       	ldd	r23, Z+1	; 0x01
 96c:	82 81       	ldd	r24, Z+2	; 0x02
 96e:	93 81       	ldd	r25, Z+3	; 0x03
 970:	0c 5f       	subi	r16, 0xFC	; 252
 972:	1f 4f       	sbci	r17, 0xFF	; 255
 974:	06 c0       	rjmp	.+12     	; 0x982 <__stack+0x83>
 976:	60 81       	ld	r22, Z
 978:	71 81       	ldd	r23, Z+1	; 0x01
 97a:	80 e0       	ldi	r24, 0x00	; 0
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	0e 5f       	subi	r16, 0xFE	; 254
 980:	1f 4f       	sbci	r17, 0xFF	; 255
 982:	a3 01       	movw	r20, r6
 984:	0e 94 a6 05 	call	0xb4c	; 0xb4c <__ultoa_invert>
 988:	88 2e       	mov	r8, r24
 98a:	86 18       	sub	r8, r6
 98c:	fb 2d       	mov	r31, r11
 98e:	ff 77       	andi	r31, 0x7F	; 127
 990:	3f 2e       	mov	r3, r31
 992:	36 fe       	sbrs	r3, 6
 994:	0d c0       	rjmp	.+26     	; 0x9b0 <__stack+0xb1>
 996:	23 2d       	mov	r18, r3
 998:	2e 7f       	andi	r18, 0xFE	; 254
 99a:	a2 2e       	mov	r10, r18
 99c:	89 14       	cp	r8, r9
 99e:	58 f4       	brcc	.+22     	; 0x9b6 <__stack+0xb7>
 9a0:	34 fe       	sbrs	r3, 4
 9a2:	0b c0       	rjmp	.+22     	; 0x9ba <__stack+0xbb>
 9a4:	32 fc       	sbrc	r3, 2
 9a6:	09 c0       	rjmp	.+18     	; 0x9ba <__stack+0xbb>
 9a8:	83 2d       	mov	r24, r3
 9aa:	8e 7e       	andi	r24, 0xEE	; 238
 9ac:	a8 2e       	mov	r10, r24
 9ae:	05 c0       	rjmp	.+10     	; 0x9ba <__stack+0xbb>
 9b0:	b8 2c       	mov	r11, r8
 9b2:	a3 2c       	mov	r10, r3
 9b4:	03 c0       	rjmp	.+6      	; 0x9bc <__stack+0xbd>
 9b6:	b8 2c       	mov	r11, r8
 9b8:	01 c0       	rjmp	.+2      	; 0x9bc <__stack+0xbd>
 9ba:	b9 2c       	mov	r11, r9
 9bc:	a4 fe       	sbrs	r10, 4
 9be:	0f c0       	rjmp	.+30     	; 0x9de <__stack+0xdf>
 9c0:	fe 01       	movw	r30, r28
 9c2:	e8 0d       	add	r30, r8
 9c4:	f1 1d       	adc	r31, r1
 9c6:	80 81       	ld	r24, Z
 9c8:	80 33       	cpi	r24, 0x30	; 48
 9ca:	21 f4       	brne	.+8      	; 0x9d4 <__stack+0xd5>
 9cc:	9a 2d       	mov	r25, r10
 9ce:	99 7e       	andi	r25, 0xE9	; 233
 9d0:	a9 2e       	mov	r10, r25
 9d2:	09 c0       	rjmp	.+18     	; 0x9e6 <__stack+0xe7>
 9d4:	a2 fe       	sbrs	r10, 2
 9d6:	06 c0       	rjmp	.+12     	; 0x9e4 <__stack+0xe5>
 9d8:	b3 94       	inc	r11
 9da:	b3 94       	inc	r11
 9dc:	04 c0       	rjmp	.+8      	; 0x9e6 <__stack+0xe7>
 9de:	8a 2d       	mov	r24, r10
 9e0:	86 78       	andi	r24, 0x86	; 134
 9e2:	09 f0       	breq	.+2      	; 0x9e6 <__stack+0xe7>
 9e4:	b3 94       	inc	r11
 9e6:	a3 fc       	sbrc	r10, 3
 9e8:	11 c0       	rjmp	.+34     	; 0xa0c <__stack+0x10d>
 9ea:	a0 fe       	sbrs	r10, 0
 9ec:	06 c0       	rjmp	.+12     	; 0x9fa <__stack+0xfb>
 9ee:	b2 14       	cp	r11, r2
 9f0:	88 f4       	brcc	.+34     	; 0xa14 <__stack+0x115>
 9f2:	28 0c       	add	r2, r8
 9f4:	92 2c       	mov	r9, r2
 9f6:	9b 18       	sub	r9, r11
 9f8:	0e c0       	rjmp	.+28     	; 0xa16 <__stack+0x117>
 9fa:	b2 14       	cp	r11, r2
 9fc:	60 f4       	brcc	.+24     	; 0xa16 <__stack+0x117>
 9fe:	b6 01       	movw	r22, r12
 a00:	80 e2       	ldi	r24, 0x20	; 32
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 a08:	b3 94       	inc	r11
 a0a:	f7 cf       	rjmp	.-18     	; 0x9fa <__stack+0xfb>
 a0c:	b2 14       	cp	r11, r2
 a0e:	18 f4       	brcc	.+6      	; 0xa16 <__stack+0x117>
 a10:	2b 18       	sub	r2, r11
 a12:	02 c0       	rjmp	.+4      	; 0xa18 <__stack+0x119>
 a14:	98 2c       	mov	r9, r8
 a16:	21 2c       	mov	r2, r1
 a18:	a4 fe       	sbrs	r10, 4
 a1a:	10 c0       	rjmp	.+32     	; 0xa3c <__stack+0x13d>
 a1c:	b6 01       	movw	r22, r12
 a1e:	80 e3       	ldi	r24, 0x30	; 48
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 a26:	a2 fe       	sbrs	r10, 2
 a28:	17 c0       	rjmp	.+46     	; 0xa58 <__stack+0x159>
 a2a:	a1 fc       	sbrc	r10, 1
 a2c:	03 c0       	rjmp	.+6      	; 0xa34 <__stack+0x135>
 a2e:	88 e7       	ldi	r24, 0x78	; 120
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	02 c0       	rjmp	.+4      	; 0xa38 <__stack+0x139>
 a34:	88 e5       	ldi	r24, 0x58	; 88
 a36:	90 e0       	ldi	r25, 0x00	; 0
 a38:	b6 01       	movw	r22, r12
 a3a:	0c c0       	rjmp	.+24     	; 0xa54 <__stack+0x155>
 a3c:	8a 2d       	mov	r24, r10
 a3e:	86 78       	andi	r24, 0x86	; 134
 a40:	59 f0       	breq	.+22     	; 0xa58 <__stack+0x159>
 a42:	a1 fe       	sbrs	r10, 1
 a44:	02 c0       	rjmp	.+4      	; 0xa4a <__stack+0x14b>
 a46:	8b e2       	ldi	r24, 0x2B	; 43
 a48:	01 c0       	rjmp	.+2      	; 0xa4c <__stack+0x14d>
 a4a:	80 e2       	ldi	r24, 0x20	; 32
 a4c:	a7 fc       	sbrc	r10, 7
 a4e:	8d e2       	ldi	r24, 0x2D	; 45
 a50:	b6 01       	movw	r22, r12
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 a58:	89 14       	cp	r8, r9
 a5a:	38 f4       	brcc	.+14     	; 0xa6a <__stack+0x16b>
 a5c:	b6 01       	movw	r22, r12
 a5e:	80 e3       	ldi	r24, 0x30	; 48
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 a66:	9a 94       	dec	r9
 a68:	f7 cf       	rjmp	.-18     	; 0xa58 <__stack+0x159>
 a6a:	8a 94       	dec	r8
 a6c:	f3 01       	movw	r30, r6
 a6e:	e8 0d       	add	r30, r8
 a70:	f1 1d       	adc	r31, r1
 a72:	80 81       	ld	r24, Z
 a74:	b6 01       	movw	r22, r12
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 a7c:	81 10       	cpse	r8, r1
 a7e:	f5 cf       	rjmp	.-22     	; 0xa6a <__stack+0x16b>
 a80:	22 20       	and	r2, r2
 a82:	09 f4       	brne	.+2      	; 0xa86 <__stack+0x187>
 a84:	42 ce       	rjmp	.-892    	; 0x70a <vfprintf+0x24>
 a86:	b6 01       	movw	r22, r12
 a88:	80 e2       	ldi	r24, 0x20	; 32
 a8a:	90 e0       	ldi	r25, 0x00	; 0
 a8c:	0e 94 6a 05 	call	0xad4	; 0xad4 <fputc>
 a90:	2a 94       	dec	r2
 a92:	f6 cf       	rjmp	.-20     	; 0xa80 <__stack+0x181>
 a94:	f6 01       	movw	r30, r12
 a96:	86 81       	ldd	r24, Z+6	; 0x06
 a98:	97 81       	ldd	r25, Z+7	; 0x07
 a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <__stack+0x1a1>
 a9c:	8f ef       	ldi	r24, 0xFF	; 255
 a9e:	9f ef       	ldi	r25, 0xFF	; 255
 aa0:	2b 96       	adiw	r28, 0x0b	; 11
 aa2:	e2 e1       	ldi	r30, 0x12	; 18
 aa4:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__epilogue_restores__>

00000aa8 <strnlen_P>:
 aa8:	fc 01       	movw	r30, r24
 aaa:	05 90       	lpm	r0, Z+
 aac:	61 50       	subi	r22, 0x01	; 1
 aae:	70 40       	sbci	r23, 0x00	; 0
 ab0:	01 10       	cpse	r0, r1
 ab2:	d8 f7       	brcc	.-10     	; 0xaaa <strnlen_P+0x2>
 ab4:	80 95       	com	r24
 ab6:	90 95       	com	r25
 ab8:	8e 0f       	add	r24, r30
 aba:	9f 1f       	adc	r25, r31
 abc:	08 95       	ret

00000abe <strnlen>:
 abe:	fc 01       	movw	r30, r24
 ac0:	61 50       	subi	r22, 0x01	; 1
 ac2:	70 40       	sbci	r23, 0x00	; 0
 ac4:	01 90       	ld	r0, Z+
 ac6:	01 10       	cpse	r0, r1
 ac8:	d8 f7       	brcc	.-10     	; 0xac0 <strnlen+0x2>
 aca:	80 95       	com	r24
 acc:	90 95       	com	r25
 ace:	8e 0f       	add	r24, r30
 ad0:	9f 1f       	adc	r25, r31
 ad2:	08 95       	ret

00000ad4 <fputc>:
 ad4:	0f 93       	push	r16
 ad6:	1f 93       	push	r17
 ad8:	cf 93       	push	r28
 ada:	df 93       	push	r29
 adc:	fb 01       	movw	r30, r22
 ade:	23 81       	ldd	r18, Z+3	; 0x03
 ae0:	21 fd       	sbrc	r18, 1
 ae2:	03 c0       	rjmp	.+6      	; 0xaea <fputc+0x16>
 ae4:	8f ef       	ldi	r24, 0xFF	; 255
 ae6:	9f ef       	ldi	r25, 0xFF	; 255
 ae8:	2c c0       	rjmp	.+88     	; 0xb42 <fputc+0x6e>
 aea:	22 ff       	sbrs	r18, 2
 aec:	16 c0       	rjmp	.+44     	; 0xb1a <fputc+0x46>
 aee:	46 81       	ldd	r20, Z+6	; 0x06
 af0:	57 81       	ldd	r21, Z+7	; 0x07
 af2:	24 81       	ldd	r18, Z+4	; 0x04
 af4:	35 81       	ldd	r19, Z+5	; 0x05
 af6:	42 17       	cp	r20, r18
 af8:	53 07       	cpc	r21, r19
 afa:	44 f4       	brge	.+16     	; 0xb0c <fputc+0x38>
 afc:	a0 81       	ld	r26, Z
 afe:	b1 81       	ldd	r27, Z+1	; 0x01
 b00:	9d 01       	movw	r18, r26
 b02:	2f 5f       	subi	r18, 0xFF	; 255
 b04:	3f 4f       	sbci	r19, 0xFF	; 255
 b06:	31 83       	std	Z+1, r19	; 0x01
 b08:	20 83       	st	Z, r18
 b0a:	8c 93       	st	X, r24
 b0c:	26 81       	ldd	r18, Z+6	; 0x06
 b0e:	37 81       	ldd	r19, Z+7	; 0x07
 b10:	2f 5f       	subi	r18, 0xFF	; 255
 b12:	3f 4f       	sbci	r19, 0xFF	; 255
 b14:	37 83       	std	Z+7, r19	; 0x07
 b16:	26 83       	std	Z+6, r18	; 0x06
 b18:	14 c0       	rjmp	.+40     	; 0xb42 <fputc+0x6e>
 b1a:	8b 01       	movw	r16, r22
 b1c:	ec 01       	movw	r28, r24
 b1e:	fb 01       	movw	r30, r22
 b20:	00 84       	ldd	r0, Z+8	; 0x08
 b22:	f1 85       	ldd	r31, Z+9	; 0x09
 b24:	e0 2d       	mov	r30, r0
 b26:	09 95       	icall
 b28:	89 2b       	or	r24, r25
 b2a:	e1 f6       	brne	.-72     	; 0xae4 <fputc+0x10>
 b2c:	d8 01       	movw	r26, r16
 b2e:	16 96       	adiw	r26, 0x06	; 6
 b30:	8d 91       	ld	r24, X+
 b32:	9c 91       	ld	r25, X
 b34:	17 97       	sbiw	r26, 0x07	; 7
 b36:	01 96       	adiw	r24, 0x01	; 1
 b38:	17 96       	adiw	r26, 0x07	; 7
 b3a:	9c 93       	st	X, r25
 b3c:	8e 93       	st	-X, r24
 b3e:	16 97       	sbiw	r26, 0x06	; 6
 b40:	ce 01       	movw	r24, r28
 b42:	df 91       	pop	r29
 b44:	cf 91       	pop	r28
 b46:	1f 91       	pop	r17
 b48:	0f 91       	pop	r16
 b4a:	08 95       	ret

00000b4c <__ultoa_invert>:
 b4c:	fa 01       	movw	r30, r20
 b4e:	aa 27       	eor	r26, r26
 b50:	28 30       	cpi	r18, 0x08	; 8
 b52:	51 f1       	breq	.+84     	; 0xba8 <__ultoa_invert+0x5c>
 b54:	20 31       	cpi	r18, 0x10	; 16
 b56:	81 f1       	breq	.+96     	; 0xbb8 <__ultoa_invert+0x6c>
 b58:	e8 94       	clt
 b5a:	6f 93       	push	r22
 b5c:	6e 7f       	andi	r22, 0xFE	; 254
 b5e:	6e 5f       	subi	r22, 0xFE	; 254
 b60:	7f 4f       	sbci	r23, 0xFF	; 255
 b62:	8f 4f       	sbci	r24, 0xFF	; 255
 b64:	9f 4f       	sbci	r25, 0xFF	; 255
 b66:	af 4f       	sbci	r26, 0xFF	; 255
 b68:	b1 e0       	ldi	r27, 0x01	; 1
 b6a:	3e d0       	rcall	.+124    	; 0xbe8 <__ultoa_invert+0x9c>
 b6c:	b4 e0       	ldi	r27, 0x04	; 4
 b6e:	3c d0       	rcall	.+120    	; 0xbe8 <__ultoa_invert+0x9c>
 b70:	67 0f       	add	r22, r23
 b72:	78 1f       	adc	r23, r24
 b74:	89 1f       	adc	r24, r25
 b76:	9a 1f       	adc	r25, r26
 b78:	a1 1d       	adc	r26, r1
 b7a:	68 0f       	add	r22, r24
 b7c:	79 1f       	adc	r23, r25
 b7e:	8a 1f       	adc	r24, r26
 b80:	91 1d       	adc	r25, r1
 b82:	a1 1d       	adc	r26, r1
 b84:	6a 0f       	add	r22, r26
 b86:	71 1d       	adc	r23, r1
 b88:	81 1d       	adc	r24, r1
 b8a:	91 1d       	adc	r25, r1
 b8c:	a1 1d       	adc	r26, r1
 b8e:	20 d0       	rcall	.+64     	; 0xbd0 <__ultoa_invert+0x84>
 b90:	09 f4       	brne	.+2      	; 0xb94 <__ultoa_invert+0x48>
 b92:	68 94       	set
 b94:	3f 91       	pop	r19
 b96:	2a e0       	ldi	r18, 0x0A	; 10
 b98:	26 9f       	mul	r18, r22
 b9a:	11 24       	eor	r1, r1
 b9c:	30 19       	sub	r19, r0
 b9e:	30 5d       	subi	r19, 0xD0	; 208
 ba0:	31 93       	st	Z+, r19
 ba2:	de f6       	brtc	.-74     	; 0xb5a <__ultoa_invert+0xe>
 ba4:	cf 01       	movw	r24, r30
 ba6:	08 95       	ret
 ba8:	46 2f       	mov	r20, r22
 baa:	47 70       	andi	r20, 0x07	; 7
 bac:	40 5d       	subi	r20, 0xD0	; 208
 bae:	41 93       	st	Z+, r20
 bb0:	b3 e0       	ldi	r27, 0x03	; 3
 bb2:	0f d0       	rcall	.+30     	; 0xbd2 <__ultoa_invert+0x86>
 bb4:	c9 f7       	brne	.-14     	; 0xba8 <__ultoa_invert+0x5c>
 bb6:	f6 cf       	rjmp	.-20     	; 0xba4 <__ultoa_invert+0x58>
 bb8:	46 2f       	mov	r20, r22
 bba:	4f 70       	andi	r20, 0x0F	; 15
 bbc:	40 5d       	subi	r20, 0xD0	; 208
 bbe:	4a 33       	cpi	r20, 0x3A	; 58
 bc0:	18 f0       	brcs	.+6      	; 0xbc8 <__ultoa_invert+0x7c>
 bc2:	49 5d       	subi	r20, 0xD9	; 217
 bc4:	31 fd       	sbrc	r19, 1
 bc6:	40 52       	subi	r20, 0x20	; 32
 bc8:	41 93       	st	Z+, r20
 bca:	02 d0       	rcall	.+4      	; 0xbd0 <__ultoa_invert+0x84>
 bcc:	a9 f7       	brne	.-22     	; 0xbb8 <__ultoa_invert+0x6c>
 bce:	ea cf       	rjmp	.-44     	; 0xba4 <__ultoa_invert+0x58>
 bd0:	b4 e0       	ldi	r27, 0x04	; 4
 bd2:	a6 95       	lsr	r26
 bd4:	97 95       	ror	r25
 bd6:	87 95       	ror	r24
 bd8:	77 95       	ror	r23
 bda:	67 95       	ror	r22
 bdc:	ba 95       	dec	r27
 bde:	c9 f7       	brne	.-14     	; 0xbd2 <__ultoa_invert+0x86>
 be0:	00 97       	sbiw	r24, 0x00	; 0
 be2:	61 05       	cpc	r22, r1
 be4:	71 05       	cpc	r23, r1
 be6:	08 95       	ret
 be8:	9b 01       	movw	r18, r22
 bea:	ac 01       	movw	r20, r24
 bec:	0a 2e       	mov	r0, r26
 bee:	06 94       	lsr	r0
 bf0:	57 95       	ror	r21
 bf2:	47 95       	ror	r20
 bf4:	37 95       	ror	r19
 bf6:	27 95       	ror	r18
 bf8:	ba 95       	dec	r27
 bfa:	c9 f7       	brne	.-14     	; 0xbee <__ultoa_invert+0xa2>
 bfc:	62 0f       	add	r22, r18
 bfe:	73 1f       	adc	r23, r19
 c00:	84 1f       	adc	r24, r20
 c02:	95 1f       	adc	r25, r21
 c04:	a0 1d       	adc	r26, r0
 c06:	08 95       	ret

00000c08 <__prologue_saves__>:
 c08:	2f 92       	push	r2
 c0a:	3f 92       	push	r3
 c0c:	4f 92       	push	r4
 c0e:	5f 92       	push	r5
 c10:	6f 92       	push	r6
 c12:	7f 92       	push	r7
 c14:	8f 92       	push	r8
 c16:	9f 92       	push	r9
 c18:	af 92       	push	r10
 c1a:	bf 92       	push	r11
 c1c:	cf 92       	push	r12
 c1e:	df 92       	push	r13
 c20:	ef 92       	push	r14
 c22:	ff 92       	push	r15
 c24:	0f 93       	push	r16
 c26:	1f 93       	push	r17
 c28:	cf 93       	push	r28
 c2a:	df 93       	push	r29
 c2c:	cd b7       	in	r28, 0x3d	; 61
 c2e:	de b7       	in	r29, 0x3e	; 62
 c30:	ca 1b       	sub	r28, r26
 c32:	db 0b       	sbc	r29, r27
 c34:	0f b6       	in	r0, 0x3f	; 63
 c36:	f8 94       	cli
 c38:	de bf       	out	0x3e, r29	; 62
 c3a:	0f be       	out	0x3f, r0	; 63
 c3c:	cd bf       	out	0x3d, r28	; 61
 c3e:	09 94       	ijmp

00000c40 <__epilogue_restores__>:
 c40:	2a 88       	ldd	r2, Y+18	; 0x12
 c42:	39 88       	ldd	r3, Y+17	; 0x11
 c44:	48 88       	ldd	r4, Y+16	; 0x10
 c46:	5f 84       	ldd	r5, Y+15	; 0x0f
 c48:	6e 84       	ldd	r6, Y+14	; 0x0e
 c4a:	7d 84       	ldd	r7, Y+13	; 0x0d
 c4c:	8c 84       	ldd	r8, Y+12	; 0x0c
 c4e:	9b 84       	ldd	r9, Y+11	; 0x0b
 c50:	aa 84       	ldd	r10, Y+10	; 0x0a
 c52:	b9 84       	ldd	r11, Y+9	; 0x09
 c54:	c8 84       	ldd	r12, Y+8	; 0x08
 c56:	df 80       	ldd	r13, Y+7	; 0x07
 c58:	ee 80       	ldd	r14, Y+6	; 0x06
 c5a:	fd 80       	ldd	r15, Y+5	; 0x05
 c5c:	0c 81       	ldd	r16, Y+4	; 0x04
 c5e:	1b 81       	ldd	r17, Y+3	; 0x03
 c60:	aa 81       	ldd	r26, Y+2	; 0x02
 c62:	b9 81       	ldd	r27, Y+1	; 0x01
 c64:	ce 0f       	add	r28, r30
 c66:	d1 1d       	adc	r29, r1
 c68:	0f b6       	in	r0, 0x3f	; 63
 c6a:	f8 94       	cli
 c6c:	de bf       	out	0x3e, r29	; 62
 c6e:	0f be       	out	0x3f, r0	; 63
 c70:	cd bf       	out	0x3d, r28	; 61
 c72:	ed 01       	movw	r28, r26
 c74:	08 95       	ret

00000c76 <_exit>:
 c76:	f8 94       	cli

00000c78 <__stop_program>:
 c78:	ff cf       	rjmp	.-2      	; 0xc78 <__stop_program>
