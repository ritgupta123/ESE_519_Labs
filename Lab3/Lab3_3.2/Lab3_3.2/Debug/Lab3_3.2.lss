
Lab3_3.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000898  0000092c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000898  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800134  00800134  00000960  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000009fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009a1  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007fb  00000000  00000000  000013e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000040f  00000000  00000000  00001be0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00001ff0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043d  00000000  00000000  0000207c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000149  00000000  00000000  000024b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002602  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e9       	ldi	r30, 0x98	; 152
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 33       	cpi	r26, 0x34	; 52
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e3       	ldi	r26, 0x34	; 52
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 33       	cpi	r26, 0x3A	; 58
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ab 00 	call	0x156	; 0x156 <main>
  9e:	0c 94 4a 04 	jmp	0x894	; 0x894 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	e4 e3       	ldi	r30, 0x34	; 52
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <adc_init>:
#include <util/delay.h>


void adc_init()
{
	ADMUX |= (1 << REFS0);   //set AVcc as voltage reference
 112:	ec e7       	ldi	r30, 0x7C	; 124
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	80 64       	ori	r24, 0x40	; 64
 11a:	80 83       	st	Z, r24
	ADCSRA |= 0x07;  //prescaler is 128 for '111'
 11c:	ea e7       	ldi	r30, 0x7A	; 122
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	87 60       	ori	r24, 0x07	; 7
 124:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);   //turn ADC on
 126:	80 81       	ld	r24, Z
 128:	80 68       	ori	r24, 0x80	; 128
 12a:	80 83       	st	Z, r24
 12c:	08 95       	ret

0000012e <ReadADC>:


uint16_t ReadADC(uint8_t ADCchannel)
{
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
 12e:	ec e7       	ldi	r30, 0x7C	; 124
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	90 81       	ld	r25, Z
 134:	90 7f       	andi	r25, 0xF0	; 240
 136:	8f 70       	andi	r24, 0x0F	; 15
 138:	89 2b       	or	r24, r25
 13a:	80 83       	st	Z, r24
	//single conversion mode
	ADCSRA |= (1<<ADSC);
 13c:	ea e7       	ldi	r30, 0x7A	; 122
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	80 64       	ori	r24, 0x40	; 64
 144:	80 83       	st	Z, r24
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
 146:	80 81       	ld	r24, Z
 148:	86 fd       	sbrc	r24, 6
 14a:	fd cf       	rjmp	.-6      	; 0x146 <ReadADC+0x18>
	return ADC;
 14c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 150:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 154:	08 95       	ret

00000156 <main>:


int main(void)
{
 156:	cf 93       	push	r28
 158:	df 93       	push	r29
 15a:	cd b7       	in	r28, 0x3d	; 61
 15c:	de b7       	in	r29, 0x3e	; 62
 15e:	c0 54       	subi	r28, 0x40	; 64
 160:	d1 09       	sbc	r29, r1
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	de bf       	out	0x3e, r29	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	cd bf       	out	0x3d, r28	; 61
	ADMUX |= 0x00;   //set AD0 as input
 16c:	ec e7       	ldi	r30, 0x7C	; 124
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	80 83       	st	Z, r24
	DDRB
	= 0x1c;   //set PB234 to output
 174:	8c e1       	ldi	r24, 0x1C	; 28
 176:	84 b9       	out	0x04, r24	; 4
	
	uint16_t adc_out;
	
	adc_init();
 178:	0e 94 89 00 	call	0x112	; 0x112 <adc_init>
	uart_init();
 17c:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>
		{
			PORTB = 0x18;   //set PB[4:2] to '110'
		}
		else
		{
			printf("hello");
 180:	0f 2e       	mov	r0, r31
 182:	fc e1       	ldi	r31, 0x1C	; 28
 184:	8f 2e       	mov	r8, r31
 186:	f1 e0       	ldi	r31, 0x01	; 1
 188:	9f 2e       	mov	r9, r31
 18a:	f0 2d       	mov	r31, r0
			PORTB = 0x1c;   //set PB[4:2] to '111'
 18c:	0f 2e       	mov	r0, r31
 18e:	fc e1       	ldi	r31, 0x1C	; 28
 190:	2f 2e       	mov	r2, r31
 192:	f0 2d       	mov	r31, r0
		{
			PORTB = 0x14;   //set PB[4:2] to '101'
		}
		else if (adc_out <= 898)
		{
			PORTB = 0x18;   //set PB[4:2] to '110'
 194:	0f 2e       	mov	r0, r31
 196:	f8 e1       	ldi	r31, 0x18	; 24
 198:	3f 2e       	mov	r3, r31
 19a:	f0 2d       	mov	r31, r0
		{
			PORTB = 0x10;   //set PB[4:2] to '100'
		}
		else if (adc_out <= 778)
		{
			PORTB = 0x14;   //set PB[4:2] to '101'
 19c:	0f 2e       	mov	r0, r31
 19e:	f4 e1       	ldi	r31, 0x14	; 20
 1a0:	4f 2e       	mov	r4, r31
 1a2:	f0 2d       	mov	r31, r0
		{
			PORTB = 0x0c;   //set PB[4:2] to '011'
		}
		else if (adc_out <= 659)
		{
			PORTB = 0x10;   //set PB[4:2] to '100'
 1a4:	68 94       	set
 1a6:	55 24       	eor	r5, r5
 1a8:	54 f8       	bld	r5, 4
		{
			PORTB = 0x08;   //set PB[4:2] to '010'
		}
		else if (adc_out <= 540)
		{
			PORTB = 0x0c;   //set PB[4:2] to '011'
 1aa:	0f 2e       	mov	r0, r31
 1ac:	fc e0       	ldi	r31, 0x0C	; 12
 1ae:	6f 2e       	mov	r6, r31
 1b0:	f0 2d       	mov	r31, r0
		{
			PORTB = 0x04;   //set PB[4:2] to '001'
		}
		else if (adc_out <= 420)
		{
			PORTB = 0x08;   //set PB[4:2] to '010'
 1b2:	68 94       	set
 1b4:	77 24       	eor	r7, r7
 1b6:	73 f8       	bld	r7, 3
		{
			PORTB = 0x00;   //set PB[4:2] to '000'
		}
		else if (adc_out <= 301)
		{
			PORTB = 0x04;   //set PB[4:2] to '001'
 1b8:	68 94       	set
 1ba:	aa 24       	eor	r10, r10
 1bc:	a2 f8       	bld	r10, 2
			printf("hello");
			PORTB = 0x1c;   //set PB[4:2] to '111'
		}
		
		char result[64];
		snprintf(result, 64, "ADC output is %d\n", adc_out);
 1be:	0f 2e       	mov	r0, r31
 1c0:	f2 e2       	ldi	r31, 0x22	; 34
 1c2:	cf 2e       	mov	r12, r31
 1c4:	f1 e0       	ldi	r31, 0x01	; 1
 1c6:	df 2e       	mov	r13, r31
 1c8:	f0 2d       	mov	r31, r0
 1ca:	68 94       	set
 1cc:	bb 24       	eor	r11, r11
 1ce:	b6 f8       	bld	r11, 6
 1d0:	ce 01       	movw	r24, r28
 1d2:	01 96       	adiw	r24, 0x01	; 1
 1d4:	7c 01       	movw	r14, r24
	
	while (1)
	{
		//printf("start");
		
		adc_out = ReadADC(0);
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	0e 94 97 00 	call	0x12e	; 0x12e <ReadADC>
 1dc:	8c 01       	movw	r16, r24
		
		if (adc_out <= 118)
 1de:	87 37       	cpi	r24, 0x77	; 119
 1e0:	91 05       	cpc	r25, r1
 1e2:	10 f4       	brcc	.+4      	; 0x1e8 <main+0x92>
		{
			PORTB = 0x00;   //set PB[4:2] to '000'
 1e4:	15 b8       	out	0x05, r1	; 5
 1e6:	2b c0       	rjmp	.+86     	; 0x23e <main+0xe8>
		}
		else if (adc_out <= 301)
 1e8:	0e 32       	cpi	r16, 0x2E	; 46
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	19 07       	cpc	r17, r25
 1ee:	10 f4       	brcc	.+4      	; 0x1f4 <main+0x9e>
		{
			PORTB = 0x04;   //set PB[4:2] to '001'
 1f0:	a5 b8       	out	0x05, r10	; 5
 1f2:	25 c0       	rjmp	.+74     	; 0x23e <main+0xe8>
		}
		else if (adc_out <= 420)
 1f4:	05 3a       	cpi	r16, 0xA5	; 165
 1f6:	21 e0       	ldi	r18, 0x01	; 1
 1f8:	12 07       	cpc	r17, r18
 1fa:	10 f4       	brcc	.+4      	; 0x200 <main+0xaa>
		{
			PORTB = 0x08;   //set PB[4:2] to '010'
 1fc:	75 b8       	out	0x05, r7	; 5
 1fe:	1f c0       	rjmp	.+62     	; 0x23e <main+0xe8>
		}
		else if (adc_out <= 540)
 200:	0d 31       	cpi	r16, 0x1D	; 29
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	18 07       	cpc	r17, r24
 206:	10 f4       	brcc	.+4      	; 0x20c <main+0xb6>
		{
			PORTB = 0x0c;   //set PB[4:2] to '011'
 208:	65 b8       	out	0x05, r6	; 5
 20a:	19 c0       	rjmp	.+50     	; 0x23e <main+0xe8>
		}
		else if (adc_out <= 659)
 20c:	04 39       	cpi	r16, 0x94	; 148
 20e:	92 e0       	ldi	r25, 0x02	; 2
 210:	19 07       	cpc	r17, r25
 212:	10 f4       	brcc	.+4      	; 0x218 <main+0xc2>
		{
			PORTB = 0x10;   //set PB[4:2] to '100'
 214:	55 b8       	out	0x05, r5	; 5
 216:	13 c0       	rjmp	.+38     	; 0x23e <main+0xe8>
		}
		else if (adc_out <= 778)
 218:	0b 30       	cpi	r16, 0x0B	; 11
 21a:	23 e0       	ldi	r18, 0x03	; 3
 21c:	12 07       	cpc	r17, r18
 21e:	10 f4       	brcc	.+4      	; 0x224 <main+0xce>
		{
			PORTB = 0x14;   //set PB[4:2] to '101'
 220:	45 b8       	out	0x05, r4	; 5
 222:	0d c0       	rjmp	.+26     	; 0x23e <main+0xe8>
		}
		else if (adc_out <= 898)
 224:	03 38       	cpi	r16, 0x83	; 131
 226:	83 e0       	ldi	r24, 0x03	; 3
 228:	18 07       	cpc	r17, r24
 22a:	10 f4       	brcc	.+4      	; 0x230 <main+0xda>
		{
			PORTB = 0x18;   //set PB[4:2] to '110'
 22c:	35 b8       	out	0x05, r3	; 5
 22e:	07 c0       	rjmp	.+14     	; 0x23e <main+0xe8>
		}
		else
		{
			printf("hello");
 230:	9f 92       	push	r9
 232:	8f 92       	push	r8
 234:	0e 94 3c 01 	call	0x278	; 0x278 <printf>
			PORTB = 0x1c;   //set PB[4:2] to '111'
 238:	25 b8       	out	0x05, r2	; 5
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
		}
		
		char result[64];
		snprintf(result, 64, "ADC output is %d\n", adc_out);
 23e:	1f 93       	push	r17
 240:	0f 93       	push	r16
 242:	df 92       	push	r13
 244:	cf 92       	push	r12
 246:	1f 92       	push	r1
 248:	bf 92       	push	r11
 24a:	ff 92       	push	r15
 24c:	ef 92       	push	r14
 24e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <snprintf>
		printf(result);
 252:	ff 92       	push	r15
 254:	ef 92       	push	r14
 256:	0e 94 3c 01 	call	0x278	; 0x278 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25a:	9f ef       	ldi	r25, 0xFF	; 255
 25c:	21 ee       	ldi	r18, 0xE1	; 225
 25e:	84 e0       	ldi	r24, 0x04	; 4
 260:	91 50       	subi	r25, 0x01	; 1
 262:	20 40       	sbci	r18, 0x00	; 0
 264:	80 40       	sbci	r24, 0x00	; 0
 266:	e1 f7       	brne	.-8      	; 0x260 <main+0x10a>
 268:	00 c0       	rjmp	.+0      	; 0x26a <main+0x114>
 26a:	00 00       	nop
		//printf(adc_out);
		_delay_ms(100);
		
		
	}
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	af cf       	rjmp	.-162    	; 0x1d6 <main+0x80>

00000278 <printf>:
 278:	a0 e0       	ldi	r26, 0x00	; 0
 27a:	b0 e0       	ldi	r27, 0x00	; 0
 27c:	e2 e4       	ldi	r30, 0x42	; 66
 27e:	f1 e0       	ldi	r31, 0x01	; 1
 280:	0c 94 23 04 	jmp	0x846	; 0x846 <__prologue_saves__+0x20>
 284:	ae 01       	movw	r20, r28
 286:	4b 5f       	subi	r20, 0xFB	; 251
 288:	5f 4f       	sbci	r21, 0xFF	; 255
 28a:	fa 01       	movw	r30, r20
 28c:	61 91       	ld	r22, Z+
 28e:	71 91       	ld	r23, Z+
 290:	af 01       	movw	r20, r30
 292:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end+0x2>
 296:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <__data_end+0x3>
 29a:	0e 94 82 01 	call	0x304	; 0x304 <vfprintf>
 29e:	e2 e0       	ldi	r30, 0x02	; 2
 2a0:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__epilogue_restores__+0x20>

000002a4 <snprintf>:
 2a4:	ae e0       	ldi	r26, 0x0E	; 14
 2a6:	b0 e0       	ldi	r27, 0x00	; 0
 2a8:	e8 e5       	ldi	r30, 0x58	; 88
 2aa:	f1 e0       	ldi	r31, 0x01	; 1
 2ac:	0c 94 21 04 	jmp	0x842	; 0x842 <__prologue_saves__+0x1c>
 2b0:	0d 89       	ldd	r16, Y+21	; 0x15
 2b2:	1e 89       	ldd	r17, Y+22	; 0x16
 2b4:	8f 89       	ldd	r24, Y+23	; 0x17
 2b6:	98 8d       	ldd	r25, Y+24	; 0x18
 2b8:	26 e0       	ldi	r18, 0x06	; 6
 2ba:	2c 83       	std	Y+4, r18	; 0x04
 2bc:	1a 83       	std	Y+2, r17	; 0x02
 2be:	09 83       	std	Y+1, r16	; 0x01
 2c0:	97 ff       	sbrs	r25, 7
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <snprintf+0x24>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e8       	ldi	r25, 0x80	; 128
 2c8:	01 97       	sbiw	r24, 0x01	; 1
 2ca:	9e 83       	std	Y+6, r25	; 0x06
 2cc:	8d 83       	std	Y+5, r24	; 0x05
 2ce:	ae 01       	movw	r20, r28
 2d0:	45 5e       	subi	r20, 0xE5	; 229
 2d2:	5f 4f       	sbci	r21, 0xFF	; 255
 2d4:	69 8d       	ldd	r22, Y+25	; 0x19
 2d6:	7a 8d       	ldd	r23, Y+26	; 0x1a
 2d8:	ce 01       	movw	r24, r28
 2da:	01 96       	adiw	r24, 0x01	; 1
 2dc:	0e 94 82 01 	call	0x304	; 0x304 <vfprintf>
 2e0:	4d 81       	ldd	r20, Y+5	; 0x05
 2e2:	5e 81       	ldd	r21, Y+6	; 0x06
 2e4:	57 fd       	sbrc	r21, 7
 2e6:	0a c0       	rjmp	.+20     	; 0x2fc <snprintf+0x58>
 2e8:	2f 81       	ldd	r18, Y+7	; 0x07
 2ea:	38 85       	ldd	r19, Y+8	; 0x08
 2ec:	42 17       	cp	r20, r18
 2ee:	53 07       	cpc	r21, r19
 2f0:	0c f4       	brge	.+2      	; 0x2f4 <snprintf+0x50>
 2f2:	9a 01       	movw	r18, r20
 2f4:	f8 01       	movw	r30, r16
 2f6:	e2 0f       	add	r30, r18
 2f8:	f3 1f       	adc	r31, r19
 2fa:	10 82       	st	Z, r1
 2fc:	2e 96       	adiw	r28, 0x0e	; 14
 2fe:	e4 e0       	ldi	r30, 0x04	; 4
 300:	0c 94 3d 04 	jmp	0x87a	; 0x87a <__epilogue_restores__+0x1c>

00000304 <vfprintf>:
 304:	ab e0       	ldi	r26, 0x0B	; 11
 306:	b0 e0       	ldi	r27, 0x00	; 0
 308:	e8 e8       	ldi	r30, 0x88	; 136
 30a:	f1 e0       	ldi	r31, 0x01	; 1
 30c:	0c 94 13 04 	jmp	0x826	; 0x826 <__prologue_saves__>
 310:	6c 01       	movw	r12, r24
 312:	7b 01       	movw	r14, r22
 314:	8a 01       	movw	r16, r20
 316:	fc 01       	movw	r30, r24
 318:	17 82       	std	Z+7, r1	; 0x07
 31a:	16 82       	std	Z+6, r1	; 0x06
 31c:	83 81       	ldd	r24, Z+3	; 0x03
 31e:	81 ff       	sbrs	r24, 1
 320:	cc c1       	rjmp	.+920    	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 322:	ce 01       	movw	r24, r28
 324:	01 96       	adiw	r24, 0x01	; 1
 326:	3c 01       	movw	r6, r24
 328:	f6 01       	movw	r30, r12
 32a:	93 81       	ldd	r25, Z+3	; 0x03
 32c:	f7 01       	movw	r30, r14
 32e:	93 fd       	sbrc	r25, 3
 330:	85 91       	lpm	r24, Z+
 332:	93 ff       	sbrs	r25, 3
 334:	81 91       	ld	r24, Z+
 336:	7f 01       	movw	r14, r30
 338:	88 23       	and	r24, r24
 33a:	09 f4       	brne	.+2      	; 0x33e <vfprintf+0x3a>
 33c:	ba c1       	rjmp	.+884    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 33e:	85 32       	cpi	r24, 0x25	; 37
 340:	39 f4       	brne	.+14     	; 0x350 <vfprintf+0x4c>
 342:	93 fd       	sbrc	r25, 3
 344:	85 91       	lpm	r24, Z+
 346:	93 ff       	sbrs	r25, 3
 348:	81 91       	ld	r24, Z+
 34a:	7f 01       	movw	r14, r30
 34c:	85 32       	cpi	r24, 0x25	; 37
 34e:	29 f4       	brne	.+10     	; 0x35a <vfprintf+0x56>
 350:	b6 01       	movw	r22, r12
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 358:	e7 cf       	rjmp	.-50     	; 0x328 <vfprintf+0x24>
 35a:	91 2c       	mov	r9, r1
 35c:	21 2c       	mov	r2, r1
 35e:	31 2c       	mov	r3, r1
 360:	ff e1       	ldi	r31, 0x1F	; 31
 362:	f3 15       	cp	r31, r3
 364:	d8 f0       	brcs	.+54     	; 0x39c <vfprintf+0x98>
 366:	8b 32       	cpi	r24, 0x2B	; 43
 368:	79 f0       	breq	.+30     	; 0x388 <vfprintf+0x84>
 36a:	38 f4       	brcc	.+14     	; 0x37a <vfprintf+0x76>
 36c:	80 32       	cpi	r24, 0x20	; 32
 36e:	79 f0       	breq	.+30     	; 0x38e <vfprintf+0x8a>
 370:	83 32       	cpi	r24, 0x23	; 35
 372:	a1 f4       	brne	.+40     	; 0x39c <vfprintf+0x98>
 374:	23 2d       	mov	r18, r3
 376:	20 61       	ori	r18, 0x10	; 16
 378:	1d c0       	rjmp	.+58     	; 0x3b4 <vfprintf+0xb0>
 37a:	8d 32       	cpi	r24, 0x2D	; 45
 37c:	61 f0       	breq	.+24     	; 0x396 <vfprintf+0x92>
 37e:	80 33       	cpi	r24, 0x30	; 48
 380:	69 f4       	brne	.+26     	; 0x39c <vfprintf+0x98>
 382:	23 2d       	mov	r18, r3
 384:	21 60       	ori	r18, 0x01	; 1
 386:	16 c0       	rjmp	.+44     	; 0x3b4 <vfprintf+0xb0>
 388:	83 2d       	mov	r24, r3
 38a:	82 60       	ori	r24, 0x02	; 2
 38c:	38 2e       	mov	r3, r24
 38e:	e3 2d       	mov	r30, r3
 390:	e4 60       	ori	r30, 0x04	; 4
 392:	3e 2e       	mov	r3, r30
 394:	2a c0       	rjmp	.+84     	; 0x3ea <vfprintf+0xe6>
 396:	f3 2d       	mov	r31, r3
 398:	f8 60       	ori	r31, 0x08	; 8
 39a:	1d c0       	rjmp	.+58     	; 0x3d6 <vfprintf+0xd2>
 39c:	37 fc       	sbrc	r3, 7
 39e:	2d c0       	rjmp	.+90     	; 0x3fa <vfprintf+0xf6>
 3a0:	20 ed       	ldi	r18, 0xD0	; 208
 3a2:	28 0f       	add	r18, r24
 3a4:	2a 30       	cpi	r18, 0x0A	; 10
 3a6:	40 f0       	brcs	.+16     	; 0x3b8 <vfprintf+0xb4>
 3a8:	8e 32       	cpi	r24, 0x2E	; 46
 3aa:	b9 f4       	brne	.+46     	; 0x3da <vfprintf+0xd6>
 3ac:	36 fc       	sbrc	r3, 6
 3ae:	81 c1       	rjmp	.+770    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 3b0:	23 2d       	mov	r18, r3
 3b2:	20 64       	ori	r18, 0x40	; 64
 3b4:	32 2e       	mov	r3, r18
 3b6:	19 c0       	rjmp	.+50     	; 0x3ea <vfprintf+0xe6>
 3b8:	36 fe       	sbrs	r3, 6
 3ba:	06 c0       	rjmp	.+12     	; 0x3c8 <vfprintf+0xc4>
 3bc:	8a e0       	ldi	r24, 0x0A	; 10
 3be:	98 9e       	mul	r9, r24
 3c0:	20 0d       	add	r18, r0
 3c2:	11 24       	eor	r1, r1
 3c4:	92 2e       	mov	r9, r18
 3c6:	11 c0       	rjmp	.+34     	; 0x3ea <vfprintf+0xe6>
 3c8:	ea e0       	ldi	r30, 0x0A	; 10
 3ca:	2e 9e       	mul	r2, r30
 3cc:	20 0d       	add	r18, r0
 3ce:	11 24       	eor	r1, r1
 3d0:	22 2e       	mov	r2, r18
 3d2:	f3 2d       	mov	r31, r3
 3d4:	f0 62       	ori	r31, 0x20	; 32
 3d6:	3f 2e       	mov	r3, r31
 3d8:	08 c0       	rjmp	.+16     	; 0x3ea <vfprintf+0xe6>
 3da:	8c 36       	cpi	r24, 0x6C	; 108
 3dc:	21 f4       	brne	.+8      	; 0x3e6 <vfprintf+0xe2>
 3de:	83 2d       	mov	r24, r3
 3e0:	80 68       	ori	r24, 0x80	; 128
 3e2:	38 2e       	mov	r3, r24
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <vfprintf+0xe6>
 3e6:	88 36       	cpi	r24, 0x68	; 104
 3e8:	41 f4       	brne	.+16     	; 0x3fa <vfprintf+0xf6>
 3ea:	f7 01       	movw	r30, r14
 3ec:	93 fd       	sbrc	r25, 3
 3ee:	85 91       	lpm	r24, Z+
 3f0:	93 ff       	sbrs	r25, 3
 3f2:	81 91       	ld	r24, Z+
 3f4:	7f 01       	movw	r14, r30
 3f6:	81 11       	cpse	r24, r1
 3f8:	b3 cf       	rjmp	.-154    	; 0x360 <vfprintf+0x5c>
 3fa:	98 2f       	mov	r25, r24
 3fc:	9f 7d       	andi	r25, 0xDF	; 223
 3fe:	95 54       	subi	r25, 0x45	; 69
 400:	93 30       	cpi	r25, 0x03	; 3
 402:	28 f4       	brcc	.+10     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 404:	0c 5f       	subi	r16, 0xFC	; 252
 406:	1f 4f       	sbci	r17, 0xFF	; 255
 408:	9f e3       	ldi	r25, 0x3F	; 63
 40a:	99 83       	std	Y+1, r25	; 0x01
 40c:	0d c0       	rjmp	.+26     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 40e:	83 36       	cpi	r24, 0x63	; 99
 410:	31 f0       	breq	.+12     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 412:	83 37       	cpi	r24, 0x73	; 115
 414:	71 f0       	breq	.+28     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 416:	83 35       	cpi	r24, 0x53	; 83
 418:	09 f0       	breq	.+2      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 41a:	59 c0       	rjmp	.+178    	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 41c:	21 c0       	rjmp	.+66     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 41e:	f8 01       	movw	r30, r16
 420:	80 81       	ld	r24, Z
 422:	89 83       	std	Y+1, r24	; 0x01
 424:	0e 5f       	subi	r16, 0xFE	; 254
 426:	1f 4f       	sbci	r17, 0xFF	; 255
 428:	88 24       	eor	r8, r8
 42a:	83 94       	inc	r8
 42c:	91 2c       	mov	r9, r1
 42e:	53 01       	movw	r10, r6
 430:	13 c0       	rjmp	.+38     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 432:	28 01       	movw	r4, r16
 434:	f2 e0       	ldi	r31, 0x02	; 2
 436:	4f 0e       	add	r4, r31
 438:	51 1c       	adc	r5, r1
 43a:	f8 01       	movw	r30, r16
 43c:	a0 80       	ld	r10, Z
 43e:	b1 80       	ldd	r11, Z+1	; 0x01
 440:	36 fe       	sbrs	r3, 6
 442:	03 c0       	rjmp	.+6      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 444:	69 2d       	mov	r22, r9
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	6f ef       	ldi	r22, 0xFF	; 255
 44c:	7f ef       	ldi	r23, 0xFF	; 255
 44e:	c5 01       	movw	r24, r10
 450:	0e 94 6e 03 	call	0x6dc	; 0x6dc <strnlen>
 454:	4c 01       	movw	r8, r24
 456:	82 01       	movw	r16, r4
 458:	f3 2d       	mov	r31, r3
 45a:	ff 77       	andi	r31, 0x7F	; 127
 45c:	3f 2e       	mov	r3, r31
 45e:	16 c0       	rjmp	.+44     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 460:	28 01       	movw	r4, r16
 462:	22 e0       	ldi	r18, 0x02	; 2
 464:	42 0e       	add	r4, r18
 466:	51 1c       	adc	r5, r1
 468:	f8 01       	movw	r30, r16
 46a:	a0 80       	ld	r10, Z
 46c:	b1 80       	ldd	r11, Z+1	; 0x01
 46e:	36 fe       	sbrs	r3, 6
 470:	03 c0       	rjmp	.+6      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 472:	69 2d       	mov	r22, r9
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	02 c0       	rjmp	.+4      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 478:	6f ef       	ldi	r22, 0xFF	; 255
 47a:	7f ef       	ldi	r23, 0xFF	; 255
 47c:	c5 01       	movw	r24, r10
 47e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <strnlen_P>
 482:	4c 01       	movw	r8, r24
 484:	f3 2d       	mov	r31, r3
 486:	f0 68       	ori	r31, 0x80	; 128
 488:	3f 2e       	mov	r3, r31
 48a:	82 01       	movw	r16, r4
 48c:	33 fc       	sbrc	r3, 3
 48e:	1b c0       	rjmp	.+54     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 490:	82 2d       	mov	r24, r2
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	88 16       	cp	r8, r24
 496:	99 06       	cpc	r9, r25
 498:	b0 f4       	brcc	.+44     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 49a:	b6 01       	movw	r22, r12
 49c:	80 e2       	ldi	r24, 0x20	; 32
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 4a4:	2a 94       	dec	r2
 4a6:	f4 cf       	rjmp	.-24     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 4a8:	f5 01       	movw	r30, r10
 4aa:	37 fc       	sbrc	r3, 7
 4ac:	85 91       	lpm	r24, Z+
 4ae:	37 fe       	sbrs	r3, 7
 4b0:	81 91       	ld	r24, Z+
 4b2:	5f 01       	movw	r10, r30
 4b4:	b6 01       	movw	r22, r12
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 4bc:	21 10       	cpse	r2, r1
 4be:	2a 94       	dec	r2
 4c0:	21 e0       	ldi	r18, 0x01	; 1
 4c2:	82 1a       	sub	r8, r18
 4c4:	91 08       	sbc	r9, r1
 4c6:	81 14       	cp	r8, r1
 4c8:	91 04       	cpc	r9, r1
 4ca:	71 f7       	brne	.-36     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4cc:	e8 c0       	rjmp	.+464    	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 4ce:	84 36       	cpi	r24, 0x64	; 100
 4d0:	11 f0       	breq	.+4      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d2:	89 36       	cpi	r24, 0x69	; 105
 4d4:	41 f5       	brne	.+80     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 4d6:	f8 01       	movw	r30, r16
 4d8:	37 fe       	sbrs	r3, 7
 4da:	07 c0       	rjmp	.+14     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4dc:	60 81       	ld	r22, Z
 4de:	71 81       	ldd	r23, Z+1	; 0x01
 4e0:	82 81       	ldd	r24, Z+2	; 0x02
 4e2:	93 81       	ldd	r25, Z+3	; 0x03
 4e4:	0c 5f       	subi	r16, 0xFC	; 252
 4e6:	1f 4f       	sbci	r17, 0xFF	; 255
 4e8:	08 c0       	rjmp	.+16     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ea:	60 81       	ld	r22, Z
 4ec:	71 81       	ldd	r23, Z+1	; 0x01
 4ee:	07 2e       	mov	r0, r23
 4f0:	00 0c       	add	r0, r0
 4f2:	88 0b       	sbc	r24, r24
 4f4:	99 0b       	sbc	r25, r25
 4f6:	0e 5f       	subi	r16, 0xFE	; 254
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	f3 2d       	mov	r31, r3
 4fc:	ff 76       	andi	r31, 0x6F	; 111
 4fe:	3f 2e       	mov	r3, r31
 500:	97 ff       	sbrs	r25, 7
 502:	09 c0       	rjmp	.+18     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 504:	90 95       	com	r25
 506:	80 95       	com	r24
 508:	70 95       	com	r23
 50a:	61 95       	neg	r22
 50c:	7f 4f       	sbci	r23, 0xFF	; 255
 50e:	8f 4f       	sbci	r24, 0xFF	; 255
 510:	9f 4f       	sbci	r25, 0xFF	; 255
 512:	f0 68       	ori	r31, 0x80	; 128
 514:	3f 2e       	mov	r3, r31
 516:	2a e0       	ldi	r18, 0x0A	; 10
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	a3 01       	movw	r20, r6
 51c:	0e 94 b5 03 	call	0x76a	; 0x76a <__ultoa_invert>
 520:	88 2e       	mov	r8, r24
 522:	86 18       	sub	r8, r6
 524:	45 c0       	rjmp	.+138    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 526:	85 37       	cpi	r24, 0x75	; 117
 528:	31 f4       	brne	.+12     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 52a:	23 2d       	mov	r18, r3
 52c:	2f 7e       	andi	r18, 0xEF	; 239
 52e:	b2 2e       	mov	r11, r18
 530:	2a e0       	ldi	r18, 0x0A	; 10
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	25 c0       	rjmp	.+74     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 536:	93 2d       	mov	r25, r3
 538:	99 7f       	andi	r25, 0xF9	; 249
 53a:	b9 2e       	mov	r11, r25
 53c:	8f 36       	cpi	r24, 0x6F	; 111
 53e:	c1 f0       	breq	.+48     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 540:	18 f4       	brcc	.+6      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 542:	88 35       	cpi	r24, 0x58	; 88
 544:	79 f0       	breq	.+30     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 546:	b5 c0       	rjmp	.+362    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 548:	80 37       	cpi	r24, 0x70	; 112
 54a:	19 f0       	breq	.+6      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54c:	88 37       	cpi	r24, 0x78	; 120
 54e:	21 f0       	breq	.+8      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 550:	b0 c0       	rjmp	.+352    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 552:	e9 2f       	mov	r30, r25
 554:	e0 61       	ori	r30, 0x10	; 16
 556:	be 2e       	mov	r11, r30
 558:	b4 fe       	sbrs	r11, 4
 55a:	0d c0       	rjmp	.+26     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 55c:	fb 2d       	mov	r31, r11
 55e:	f4 60       	ori	r31, 0x04	; 4
 560:	bf 2e       	mov	r11, r31
 562:	09 c0       	rjmp	.+18     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 564:	34 fe       	sbrs	r3, 4
 566:	0a c0       	rjmp	.+20     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 568:	29 2f       	mov	r18, r25
 56a:	26 60       	ori	r18, 0x06	; 6
 56c:	b2 2e       	mov	r11, r18
 56e:	06 c0       	rjmp	.+12     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 570:	28 e0       	ldi	r18, 0x08	; 8
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	05 c0       	rjmp	.+10     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 576:	20 e1       	ldi	r18, 0x10	; 16
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	02 c0       	rjmp	.+4      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 57c:	20 e1       	ldi	r18, 0x10	; 16
 57e:	32 e0       	ldi	r19, 0x02	; 2
 580:	f8 01       	movw	r30, r16
 582:	b7 fe       	sbrs	r11, 7
 584:	07 c0       	rjmp	.+14     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 586:	60 81       	ld	r22, Z
 588:	71 81       	ldd	r23, Z+1	; 0x01
 58a:	82 81       	ldd	r24, Z+2	; 0x02
 58c:	93 81       	ldd	r25, Z+3	; 0x03
 58e:	0c 5f       	subi	r16, 0xFC	; 252
 590:	1f 4f       	sbci	r17, 0xFF	; 255
 592:	06 c0       	rjmp	.+12     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 594:	60 81       	ld	r22, Z
 596:	71 81       	ldd	r23, Z+1	; 0x01
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	0e 5f       	subi	r16, 0xFE	; 254
 59e:	1f 4f       	sbci	r17, 0xFF	; 255
 5a0:	a3 01       	movw	r20, r6
 5a2:	0e 94 b5 03 	call	0x76a	; 0x76a <__ultoa_invert>
 5a6:	88 2e       	mov	r8, r24
 5a8:	86 18       	sub	r8, r6
 5aa:	fb 2d       	mov	r31, r11
 5ac:	ff 77       	andi	r31, 0x7F	; 127
 5ae:	3f 2e       	mov	r3, r31
 5b0:	36 fe       	sbrs	r3, 6
 5b2:	0d c0       	rjmp	.+26     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5b4:	23 2d       	mov	r18, r3
 5b6:	2e 7f       	andi	r18, 0xFE	; 254
 5b8:	a2 2e       	mov	r10, r18
 5ba:	89 14       	cp	r8, r9
 5bc:	58 f4       	brcc	.+22     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5be:	34 fe       	sbrs	r3, 4
 5c0:	0b c0       	rjmp	.+22     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5c2:	32 fc       	sbrc	r3, 2
 5c4:	09 c0       	rjmp	.+18     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5c6:	83 2d       	mov	r24, r3
 5c8:	8e 7e       	andi	r24, 0xEE	; 238
 5ca:	a8 2e       	mov	r10, r24
 5cc:	05 c0       	rjmp	.+10     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5ce:	b8 2c       	mov	r11, r8
 5d0:	a3 2c       	mov	r10, r3
 5d2:	03 c0       	rjmp	.+6      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d4:	b8 2c       	mov	r11, r8
 5d6:	01 c0       	rjmp	.+2      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d8:	b9 2c       	mov	r11, r9
 5da:	a4 fe       	sbrs	r10, 4
 5dc:	0f c0       	rjmp	.+30     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5de:	fe 01       	movw	r30, r28
 5e0:	e8 0d       	add	r30, r8
 5e2:	f1 1d       	adc	r31, r1
 5e4:	80 81       	ld	r24, Z
 5e6:	80 33       	cpi	r24, 0x30	; 48
 5e8:	21 f4       	brne	.+8      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5ea:	9a 2d       	mov	r25, r10
 5ec:	99 7e       	andi	r25, 0xE9	; 233
 5ee:	a9 2e       	mov	r10, r25
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5f2:	a2 fe       	sbrs	r10, 2
 5f4:	06 c0       	rjmp	.+12     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5f6:	b3 94       	inc	r11
 5f8:	b3 94       	inc	r11
 5fa:	04 c0       	rjmp	.+8      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5fc:	8a 2d       	mov	r24, r10
 5fe:	86 78       	andi	r24, 0x86	; 134
 600:	09 f0       	breq	.+2      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 602:	b3 94       	inc	r11
 604:	a3 fc       	sbrc	r10, 3
 606:	11 c0       	rjmp	.+34     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 608:	a0 fe       	sbrs	r10, 0
 60a:	06 c0       	rjmp	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60c:	b2 14       	cp	r11, r2
 60e:	88 f4       	brcc	.+34     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 610:	28 0c       	add	r2, r8
 612:	92 2c       	mov	r9, r2
 614:	9b 18       	sub	r9, r11
 616:	0e c0       	rjmp	.+28     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 618:	b2 14       	cp	r11, r2
 61a:	60 f4       	brcc	.+24     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 61c:	b6 01       	movw	r22, r12
 61e:	80 e2       	ldi	r24, 0x20	; 32
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 626:	b3 94       	inc	r11
 628:	f7 cf       	rjmp	.-18     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 62a:	b2 14       	cp	r11, r2
 62c:	18 f4       	brcc	.+6      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 62e:	2b 18       	sub	r2, r11
 630:	02 c0       	rjmp	.+4      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 632:	98 2c       	mov	r9, r8
 634:	21 2c       	mov	r2, r1
 636:	a4 fe       	sbrs	r10, 4
 638:	10 c0       	rjmp	.+32     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 63a:	b6 01       	movw	r22, r12
 63c:	80 e3       	ldi	r24, 0x30	; 48
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 644:	a2 fe       	sbrs	r10, 2
 646:	17 c0       	rjmp	.+46     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 648:	a1 fc       	sbrc	r10, 1
 64a:	03 c0       	rjmp	.+6      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 64c:	88 e7       	ldi	r24, 0x78	; 120
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	02 c0       	rjmp	.+4      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 652:	88 e5       	ldi	r24, 0x58	; 88
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	b6 01       	movw	r22, r12
 658:	0c c0       	rjmp	.+24     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 65a:	8a 2d       	mov	r24, r10
 65c:	86 78       	andi	r24, 0x86	; 134
 65e:	59 f0       	breq	.+22     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 660:	a1 fe       	sbrs	r10, 1
 662:	02 c0       	rjmp	.+4      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 664:	8b e2       	ldi	r24, 0x2B	; 43
 666:	01 c0       	rjmp	.+2      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 668:	80 e2       	ldi	r24, 0x20	; 32
 66a:	a7 fc       	sbrc	r10, 7
 66c:	8d e2       	ldi	r24, 0x2D	; 45
 66e:	b6 01       	movw	r22, r12
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 676:	89 14       	cp	r8, r9
 678:	38 f4       	brcc	.+14     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 67a:	b6 01       	movw	r22, r12
 67c:	80 e3       	ldi	r24, 0x30	; 48
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 684:	9a 94       	dec	r9
 686:	f7 cf       	rjmp	.-18     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 688:	8a 94       	dec	r8
 68a:	f3 01       	movw	r30, r6
 68c:	e8 0d       	add	r30, r8
 68e:	f1 1d       	adc	r31, r1
 690:	80 81       	ld	r24, Z
 692:	b6 01       	movw	r22, r12
 694:	90 e0       	ldi	r25, 0x00	; 0
 696:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 69a:	81 10       	cpse	r8, r1
 69c:	f5 cf       	rjmp	.-22     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 69e:	22 20       	and	r2, r2
 6a0:	09 f4       	brne	.+2      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 6a2:	42 ce       	rjmp	.-892    	; 0x328 <vfprintf+0x24>
 6a4:	b6 01       	movw	r22, r12
 6a6:	80 e2       	ldi	r24, 0x20	; 32
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <fputc>
 6ae:	2a 94       	dec	r2
 6b0:	f6 cf       	rjmp	.-20     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 6b2:	f6 01       	movw	r30, r12
 6b4:	86 81       	ldd	r24, Z+6	; 0x06
 6b6:	97 81       	ldd	r25, Z+7	; 0x07
 6b8:	02 c0       	rjmp	.+4      	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6ba:	8f ef       	ldi	r24, 0xFF	; 255
 6bc:	9f ef       	ldi	r25, 0xFF	; 255
 6be:	2b 96       	adiw	r28, 0x0b	; 11
 6c0:	e2 e1       	ldi	r30, 0x12	; 18
 6c2:	0c 94 2f 04 	jmp	0x85e	; 0x85e <__epilogue_restores__>

000006c6 <strnlen_P>:
 6c6:	fc 01       	movw	r30, r24
 6c8:	05 90       	lpm	r0, Z+
 6ca:	61 50       	subi	r22, 0x01	; 1
 6cc:	70 40       	sbci	r23, 0x00	; 0
 6ce:	01 10       	cpse	r0, r1
 6d0:	d8 f7       	brcc	.-10     	; 0x6c8 <strnlen_P+0x2>
 6d2:	80 95       	com	r24
 6d4:	90 95       	com	r25
 6d6:	8e 0f       	add	r24, r30
 6d8:	9f 1f       	adc	r25, r31
 6da:	08 95       	ret

000006dc <strnlen>:
 6dc:	fc 01       	movw	r30, r24
 6de:	61 50       	subi	r22, 0x01	; 1
 6e0:	70 40       	sbci	r23, 0x00	; 0
 6e2:	01 90       	ld	r0, Z+
 6e4:	01 10       	cpse	r0, r1
 6e6:	d8 f7       	brcc	.-10     	; 0x6de <strnlen+0x2>
 6e8:	80 95       	com	r24
 6ea:	90 95       	com	r25
 6ec:	8e 0f       	add	r24, r30
 6ee:	9f 1f       	adc	r25, r31
 6f0:	08 95       	ret

000006f2 <fputc>:
 6f2:	0f 93       	push	r16
 6f4:	1f 93       	push	r17
 6f6:	cf 93       	push	r28
 6f8:	df 93       	push	r29
 6fa:	fb 01       	movw	r30, r22
 6fc:	23 81       	ldd	r18, Z+3	; 0x03
 6fe:	21 fd       	sbrc	r18, 1
 700:	03 c0       	rjmp	.+6      	; 0x708 <fputc+0x16>
 702:	8f ef       	ldi	r24, 0xFF	; 255
 704:	9f ef       	ldi	r25, 0xFF	; 255
 706:	2c c0       	rjmp	.+88     	; 0x760 <fputc+0x6e>
 708:	22 ff       	sbrs	r18, 2
 70a:	16 c0       	rjmp	.+44     	; 0x738 <fputc+0x46>
 70c:	46 81       	ldd	r20, Z+6	; 0x06
 70e:	57 81       	ldd	r21, Z+7	; 0x07
 710:	24 81       	ldd	r18, Z+4	; 0x04
 712:	35 81       	ldd	r19, Z+5	; 0x05
 714:	42 17       	cp	r20, r18
 716:	53 07       	cpc	r21, r19
 718:	44 f4       	brge	.+16     	; 0x72a <fputc+0x38>
 71a:	a0 81       	ld	r26, Z
 71c:	b1 81       	ldd	r27, Z+1	; 0x01
 71e:	9d 01       	movw	r18, r26
 720:	2f 5f       	subi	r18, 0xFF	; 255
 722:	3f 4f       	sbci	r19, 0xFF	; 255
 724:	31 83       	std	Z+1, r19	; 0x01
 726:	20 83       	st	Z, r18
 728:	8c 93       	st	X, r24
 72a:	26 81       	ldd	r18, Z+6	; 0x06
 72c:	37 81       	ldd	r19, Z+7	; 0x07
 72e:	2f 5f       	subi	r18, 0xFF	; 255
 730:	3f 4f       	sbci	r19, 0xFF	; 255
 732:	37 83       	std	Z+7, r19	; 0x07
 734:	26 83       	std	Z+6, r18	; 0x06
 736:	14 c0       	rjmp	.+40     	; 0x760 <fputc+0x6e>
 738:	8b 01       	movw	r16, r22
 73a:	ec 01       	movw	r28, r24
 73c:	fb 01       	movw	r30, r22
 73e:	00 84       	ldd	r0, Z+8	; 0x08
 740:	f1 85       	ldd	r31, Z+9	; 0x09
 742:	e0 2d       	mov	r30, r0
 744:	09 95       	icall
 746:	89 2b       	or	r24, r25
 748:	e1 f6       	brne	.-72     	; 0x702 <fputc+0x10>
 74a:	d8 01       	movw	r26, r16
 74c:	16 96       	adiw	r26, 0x06	; 6
 74e:	8d 91       	ld	r24, X+
 750:	9c 91       	ld	r25, X
 752:	17 97       	sbiw	r26, 0x07	; 7
 754:	01 96       	adiw	r24, 0x01	; 1
 756:	17 96       	adiw	r26, 0x07	; 7
 758:	9c 93       	st	X, r25
 75a:	8e 93       	st	-X, r24
 75c:	16 97       	sbiw	r26, 0x06	; 6
 75e:	ce 01       	movw	r24, r28
 760:	df 91       	pop	r29
 762:	cf 91       	pop	r28
 764:	1f 91       	pop	r17
 766:	0f 91       	pop	r16
 768:	08 95       	ret

0000076a <__ultoa_invert>:
 76a:	fa 01       	movw	r30, r20
 76c:	aa 27       	eor	r26, r26
 76e:	28 30       	cpi	r18, 0x08	; 8
 770:	51 f1       	breq	.+84     	; 0x7c6 <__ultoa_invert+0x5c>
 772:	20 31       	cpi	r18, 0x10	; 16
 774:	81 f1       	breq	.+96     	; 0x7d6 <__ultoa_invert+0x6c>
 776:	e8 94       	clt
 778:	6f 93       	push	r22
 77a:	6e 7f       	andi	r22, 0xFE	; 254
 77c:	6e 5f       	subi	r22, 0xFE	; 254
 77e:	7f 4f       	sbci	r23, 0xFF	; 255
 780:	8f 4f       	sbci	r24, 0xFF	; 255
 782:	9f 4f       	sbci	r25, 0xFF	; 255
 784:	af 4f       	sbci	r26, 0xFF	; 255
 786:	b1 e0       	ldi	r27, 0x01	; 1
 788:	3e d0       	rcall	.+124    	; 0x806 <__ultoa_invert+0x9c>
 78a:	b4 e0       	ldi	r27, 0x04	; 4
 78c:	3c d0       	rcall	.+120    	; 0x806 <__ultoa_invert+0x9c>
 78e:	67 0f       	add	r22, r23
 790:	78 1f       	adc	r23, r24
 792:	89 1f       	adc	r24, r25
 794:	9a 1f       	adc	r25, r26
 796:	a1 1d       	adc	r26, r1
 798:	68 0f       	add	r22, r24
 79a:	79 1f       	adc	r23, r25
 79c:	8a 1f       	adc	r24, r26
 79e:	91 1d       	adc	r25, r1
 7a0:	a1 1d       	adc	r26, r1
 7a2:	6a 0f       	add	r22, r26
 7a4:	71 1d       	adc	r23, r1
 7a6:	81 1d       	adc	r24, r1
 7a8:	91 1d       	adc	r25, r1
 7aa:	a1 1d       	adc	r26, r1
 7ac:	20 d0       	rcall	.+64     	; 0x7ee <__ultoa_invert+0x84>
 7ae:	09 f4       	brne	.+2      	; 0x7b2 <__ultoa_invert+0x48>
 7b0:	68 94       	set
 7b2:	3f 91       	pop	r19
 7b4:	2a e0       	ldi	r18, 0x0A	; 10
 7b6:	26 9f       	mul	r18, r22
 7b8:	11 24       	eor	r1, r1
 7ba:	30 19       	sub	r19, r0
 7bc:	30 5d       	subi	r19, 0xD0	; 208
 7be:	31 93       	st	Z+, r19
 7c0:	de f6       	brtc	.-74     	; 0x778 <__ultoa_invert+0xe>
 7c2:	cf 01       	movw	r24, r30
 7c4:	08 95       	ret
 7c6:	46 2f       	mov	r20, r22
 7c8:	47 70       	andi	r20, 0x07	; 7
 7ca:	40 5d       	subi	r20, 0xD0	; 208
 7cc:	41 93       	st	Z+, r20
 7ce:	b3 e0       	ldi	r27, 0x03	; 3
 7d0:	0f d0       	rcall	.+30     	; 0x7f0 <__ultoa_invert+0x86>
 7d2:	c9 f7       	brne	.-14     	; 0x7c6 <__ultoa_invert+0x5c>
 7d4:	f6 cf       	rjmp	.-20     	; 0x7c2 <__ultoa_invert+0x58>
 7d6:	46 2f       	mov	r20, r22
 7d8:	4f 70       	andi	r20, 0x0F	; 15
 7da:	40 5d       	subi	r20, 0xD0	; 208
 7dc:	4a 33       	cpi	r20, 0x3A	; 58
 7de:	18 f0       	brcs	.+6      	; 0x7e6 <__ultoa_invert+0x7c>
 7e0:	49 5d       	subi	r20, 0xD9	; 217
 7e2:	31 fd       	sbrc	r19, 1
 7e4:	40 52       	subi	r20, 0x20	; 32
 7e6:	41 93       	st	Z+, r20
 7e8:	02 d0       	rcall	.+4      	; 0x7ee <__ultoa_invert+0x84>
 7ea:	a9 f7       	brne	.-22     	; 0x7d6 <__ultoa_invert+0x6c>
 7ec:	ea cf       	rjmp	.-44     	; 0x7c2 <__ultoa_invert+0x58>
 7ee:	b4 e0       	ldi	r27, 0x04	; 4
 7f0:	a6 95       	lsr	r26
 7f2:	97 95       	ror	r25
 7f4:	87 95       	ror	r24
 7f6:	77 95       	ror	r23
 7f8:	67 95       	ror	r22
 7fa:	ba 95       	dec	r27
 7fc:	c9 f7       	brne	.-14     	; 0x7f0 <__ultoa_invert+0x86>
 7fe:	00 97       	sbiw	r24, 0x00	; 0
 800:	61 05       	cpc	r22, r1
 802:	71 05       	cpc	r23, r1
 804:	08 95       	ret
 806:	9b 01       	movw	r18, r22
 808:	ac 01       	movw	r20, r24
 80a:	0a 2e       	mov	r0, r26
 80c:	06 94       	lsr	r0
 80e:	57 95       	ror	r21
 810:	47 95       	ror	r20
 812:	37 95       	ror	r19
 814:	27 95       	ror	r18
 816:	ba 95       	dec	r27
 818:	c9 f7       	brne	.-14     	; 0x80c <__ultoa_invert+0xa2>
 81a:	62 0f       	add	r22, r18
 81c:	73 1f       	adc	r23, r19
 81e:	84 1f       	adc	r24, r20
 820:	95 1f       	adc	r25, r21
 822:	a0 1d       	adc	r26, r0
 824:	08 95       	ret

00000826 <__prologue_saves__>:
 826:	2f 92       	push	r2
 828:	3f 92       	push	r3
 82a:	4f 92       	push	r4
 82c:	5f 92       	push	r5
 82e:	6f 92       	push	r6
 830:	7f 92       	push	r7
 832:	8f 92       	push	r8
 834:	9f 92       	push	r9
 836:	af 92       	push	r10
 838:	bf 92       	push	r11
 83a:	cf 92       	push	r12
 83c:	df 92       	push	r13
 83e:	ef 92       	push	r14
 840:	ff 92       	push	r15
 842:	0f 93       	push	r16
 844:	1f 93       	push	r17
 846:	cf 93       	push	r28
 848:	df 93       	push	r29
 84a:	cd b7       	in	r28, 0x3d	; 61
 84c:	de b7       	in	r29, 0x3e	; 62
 84e:	ca 1b       	sub	r28, r26
 850:	db 0b       	sbc	r29, r27
 852:	0f b6       	in	r0, 0x3f	; 63
 854:	f8 94       	cli
 856:	de bf       	out	0x3e, r29	; 62
 858:	0f be       	out	0x3f, r0	; 63
 85a:	cd bf       	out	0x3d, r28	; 61
 85c:	09 94       	ijmp

0000085e <__epilogue_restores__>:
 85e:	2a 88       	ldd	r2, Y+18	; 0x12
 860:	39 88       	ldd	r3, Y+17	; 0x11
 862:	48 88       	ldd	r4, Y+16	; 0x10
 864:	5f 84       	ldd	r5, Y+15	; 0x0f
 866:	6e 84       	ldd	r6, Y+14	; 0x0e
 868:	7d 84       	ldd	r7, Y+13	; 0x0d
 86a:	8c 84       	ldd	r8, Y+12	; 0x0c
 86c:	9b 84       	ldd	r9, Y+11	; 0x0b
 86e:	aa 84       	ldd	r10, Y+10	; 0x0a
 870:	b9 84       	ldd	r11, Y+9	; 0x09
 872:	c8 84       	ldd	r12, Y+8	; 0x08
 874:	df 80       	ldd	r13, Y+7	; 0x07
 876:	ee 80       	ldd	r14, Y+6	; 0x06
 878:	fd 80       	ldd	r15, Y+5	; 0x05
 87a:	0c 81       	ldd	r16, Y+4	; 0x04
 87c:	1b 81       	ldd	r17, Y+3	; 0x03
 87e:	aa 81       	ldd	r26, Y+2	; 0x02
 880:	b9 81       	ldd	r27, Y+1	; 0x01
 882:	ce 0f       	add	r28, r30
 884:	d1 1d       	adc	r29, r1
 886:	0f b6       	in	r0, 0x3f	; 63
 888:	f8 94       	cli
 88a:	de bf       	out	0x3e, r29	; 62
 88c:	0f be       	out	0x3f, r0	; 63
 88e:	cd bf       	out	0x3d, r28	; 61
 890:	ed 01       	movw	r28, r26
 892:	08 95       	ret

00000894 <_exit>:
 894:	f8 94       	cli

00000896 <__stop_program>:
 896:	ff cf       	rjmp	.-2      	; 0x896 <__stop_program>
