
Lab3_2.2_Simple.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  00000c54  00000ce8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c54  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800144  00800144  00000d2c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d2c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009b1  00000000  00000000  00000e20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c9  00000000  00000000  000017d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b4  00000000  00000000  00001f9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  00002350  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000483  00000000  00000000  0000245c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000026f  00000000  00000000  000028df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002b4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__vector_10>
  2c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 c9 00 	jmp	0x192	; 0x192 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e5       	ldi	r30, 0x54	; 84
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 34       	cpi	r26, 0x44	; 68
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e4       	ldi	r26, 0x44	; 68
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 35       	cpi	r26, 0x55	; 85
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 24 01 	call	0x248	; 0x248 <main>
  9e:	0c 94 28 06 	jmp	0xc50	; 0xc50 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	ef e4       	ldi	r30, 0x4F	; 79
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <timer1_init>:
volatile bool edges_detected = 0;
int num_overflows = 0;

void timer1_init()
{
	TCCR1B |= (1 << CS10);      // Enable the timer with no prescaling
 112:	e1 e8       	ldi	r30, 0x81	; 129
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	81 60       	ori	r24, 0x01	; 1
 11a:	80 83       	st	Z, r24
	
	TCNT1 = 0;	// Initialize the timer count value to 0
 11c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 120:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	TCCR1A |= (1 << COM1A0);	// COmpare output mode - Clear OC1A on Compare Match
 124:	e0 e8       	ldi	r30, 0x80	; 128
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	80 64       	ori	r24, 0x40	; 64
 12c:	80 83       	st	Z, r24
	
	TIMSK1 = (1 << OCIE1A);		// Enable output compare A match interrupt enable
 12e:	82 e0       	ldi	r24, 0x02	; 2
 130:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	
	OCR1A = 80;					// Initialize the output compare value
 134:	80 e5       	ldi	r24, 0x50	; 80
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 13c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>

	sei();						// Enable global interrupts
 140:	78 94       	sei
 142:	08 95       	ret

00000144 <__vector_11>:
}

ISR(TIMER1_COMPA_vect)
{
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	8f 93       	push	r24
 150:	af 93       	push	r26
 152:	bf 93       	push	r27
 154:	ef 93       	push	r30
 156:	ff 93       	push	r31
	TCNT1 = 0;		// Initialize the timer count value to 0
 158:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 15c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>

	//TCCR1A &= ~(1 << COM1A0);	// Disable the output compare on timer1
	
	TIMSK1 &= ~(1 << OCIE1A);	// Disable the output compare match interrupt
 160:	ef e6       	ldi	r30, 0x6F	; 111
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	8d 7f       	andi	r24, 0xFD	; 253
 168:	80 83       	st	Z, r24
					
	TCCR1B |= (1 << ICES1);	// Enable the input capture trigger on rising edge
 16a:	a1 e8       	ldi	r26, 0x81	; 129
 16c:	b0 e0       	ldi	r27, 0x00	; 0
 16e:	8c 91       	ld	r24, X
 170:	80 64       	ori	r24, 0x40	; 64
 172:	8c 93       	st	X, r24
	 	
	TIMSK1 = (1 << ICIE1);	// Enable the input capture interrupt	
 174:	80 e2       	ldi	r24, 0x20	; 32
 176:	80 83       	st	Z, r24
	
	TIMSK1 |= (1 < TOIE1);	// Enable the overflow interrupt
 178:	80 81       	ld	r24, Z
 17a:	80 83       	st	Z, r24
	
	sei();						// Enable global interrupts
 17c:	78 94       	sei
}
 17e:	ff 91       	pop	r31
 180:	ef 91       	pop	r30
 182:	bf 91       	pop	r27
 184:	af 91       	pop	r26
 186:	8f 91       	pop	r24
 188:	0f 90       	pop	r0
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	0f 90       	pop	r0
 18e:	1f 90       	pop	r1
 190:	18 95       	reti

00000192 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
 192:	1f 92       	push	r1
 194:	0f 92       	push	r0
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
 19c:	8f 93       	push	r24
 19e:	9f 93       	push	r25
	num_overflows++;
 1a0:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
 1a4:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <__data_end+0x1>
 1a8:	01 96       	adiw	r24, 0x01	; 1
 1aa:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x1>
 1ae:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end>
}
 1b2:	9f 91       	pop	r25
 1b4:	8f 91       	pop	r24
 1b6:	0f 90       	pop	r0
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	0f 90       	pop	r0
 1bc:	1f 90       	pop	r1
 1be:	18 95       	reti

000001c0 <__vector_10>:

ISR(TIMER1_CAPT_vect)
{
 1c0:	1f 92       	push	r1
 1c2:	0f 92       	push	r0
 1c4:	0f b6       	in	r0, 0x3f	; 63
 1c6:	0f 92       	push	r0
 1c8:	11 24       	eor	r1, r1
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
 1d2:	ef 93       	push	r30
 1d4:	ff 93       	push	r31
	// Check if trigger is set on rising edge
	if (TCCR1B & (1 << ICES1))
 1d6:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1da:	86 ff       	sbrs	r24, 6
 1dc:	14 c0       	rjmp	.+40     	; 0x206 <__vector_10+0x46>
	{
		rising_edge_time = ICR1;	// Get the time at which rising edge is received
 1de:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1e2:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1e6:	a0 e0       	ldi	r26, 0x00	; 0
 1e8:	b0 e0       	ldi	r27, 0x00	; 0
 1ea:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <rising_edge_time>
 1ee:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <rising_edge_time+0x1>
 1f2:	a0 93 49 01 	sts	0x0149, r26	; 0x800149 <rising_edge_time+0x2>
 1f6:	b0 93 4a 01 	sts	0x014A, r27	; 0x80014a <rising_edge_time+0x3>
		TCCR1B &= ~(1 << ICES1);		// Enable the input capture trigger on falling edge
 1fa:	e1 e8       	ldi	r30, 0x81	; 129
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	8f 7b       	andi	r24, 0xBF	; 191
 202:	80 83       	st	Z, r24
 204:	16 c0       	rjmp	.+44     	; 0x232 <__vector_10+0x72>
	}
	else
	{
		falling_edge_time = ICR1;	// Get the time at which falling edge is received
 206:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 20a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <falling_edge_time>
 216:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <falling_edge_time+0x1>
 21a:	a0 93 4d 01 	sts	0x014D, r26	; 0x80014d <falling_edge_time+0x2>
 21e:	b0 93 4e 01 	sts	0x014E, r27	; 0x80014e <falling_edge_time+0x3>
		TCCR1B |= (1 << ICES1);		// Enable the input capture trigger on rising edge
 222:	e1 e8       	ldi	r30, 0x81	; 129
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	80 64       	ori	r24, 0x40	; 64
 22a:	80 83       	st	Z, r24
		edges_detected = 1;
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <edges_detected>
		//printf("detected\n");
	}
}
 232:	ff 91       	pop	r31
 234:	ef 91       	pop	r30
 236:	bf 91       	pop	r27
 238:	af 91       	pop	r26
 23a:	9f 91       	pop	r25
 23c:	8f 91       	pop	r24
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <main>:


int main(void)
{
 248:	cf 93       	push	r28
 24a:	df 93       	push	r29
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
 250:	c0 54       	subi	r28, 0x40	; 64
 252:	d1 09       	sbc	r29, r1
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	f8 94       	cli
 258:	de bf       	out	0x3e, r29	; 62
 25a:	0f be       	out	0x3f, r0	; 63
 25c:	cd bf       	out	0x3d, r28	; 61
	uart_init();
 25e:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>

	printf("Initializing system\n");
 262:	8c e1       	ldi	r24, 0x1C	; 28
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	0e 94 00 03 	call	0x600	; 0x600 <puts>
		
	DDRB = 0x02;		// Set PB1 to be output pin and PB0 as input pin
 26a:	82 e0       	ldi	r24, 0x02	; 2
 26c:	84 b9       	out	0x04, r24	; 4
    PORTB = (1 << 1);	// Set output pin to high	
 26e:	85 b9       	out	0x05, r24	; 5
	
	// Initialize the timer
	timer1_init();
 270:	0e 94 89 00 	call	0x112	; 0x112 <timer1_init>
			{
				num_clock_ticks = falling_edge_time - rising_edge_time;
			}
			else
			{
				num_clock_ticks = (NUM_TOTAL_TICKS - rising_edge_time) + (num_overflows * NUM_TOTAL_TICKS) + falling_edge_time;
 274:	88 24       	eor	r8, r8
 276:	8a 94       	dec	r8
 278:	98 2c       	mov	r9, r8
 27a:	a1 2c       	mov	r10, r1
 27c:	b1 2c       	mov	r11, r1
			}
			pulse_width = num_clock_ticks * CLOCK_TIME_PERIOD_US;
			
			// Print the width on terminal
			char result[64];
			snprintf(result, 64, "Pulse width is %ld\n", pulse_width);
 27e:	0f 2e       	mov	r0, r31
 280:	f0 e3       	ldi	r31, 0x30	; 48
 282:	ef 2e       	mov	r14, r31
 284:	f1 e0       	ldi	r31, 0x01	; 1
 286:	ff 2e       	mov	r15, r31
 288:	f0 2d       	mov	r31, r0
 28a:	68 94       	set
 28c:	dd 24       	eor	r13, r13
 28e:	d6 f8       	bld	r13, 6
 290:	8e 01       	movw	r16, r28
 292:	0f 5f       	subi	r16, 0xFF	; 255
 294:	1f 4f       	sbci	r17, 0xFF	; 255
	timer1_init();
	
	while(1)
	{
		//printf("edges\n");
		if (edges_detected) 
 296:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <edges_detected>
 29a:	88 23       	and	r24, r24
 29c:	e1 f3       	breq	.-8      	; 0x296 <main+0x4e>
		{
			long int pulse_width, num_clock_ticks;
			
			// Get the pulse width
			if (num_overflows == 0)
 29e:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <__data_end>
 2a2:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <__data_end+0x1>
 2a6:	10 97       	sbiw	r26, 0x00	; 0
 2a8:	b9 f4       	brne	.+46     	; 0x2d8 <main+0x90>
			{
				num_clock_ticks = falling_edge_time - rising_edge_time;
 2aa:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <falling_edge_time>
 2ae:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <falling_edge_time+0x1>
 2b2:	a0 91 4d 01 	lds	r26, 0x014D	; 0x80014d <falling_edge_time+0x2>
 2b6:	b0 91 4e 01 	lds	r27, 0x014E	; 0x80014e <falling_edge_time+0x3>
 2ba:	40 90 47 01 	lds	r4, 0x0147	; 0x800147 <rising_edge_time>
 2be:	50 90 48 01 	lds	r5, 0x0148	; 0x800148 <rising_edge_time+0x1>
 2c2:	60 90 49 01 	lds	r6, 0x0149	; 0x800149 <rising_edge_time+0x2>
 2c6:	70 90 4a 01 	lds	r7, 0x014A	; 0x80014a <rising_edge_time+0x3>
 2ca:	bc 01       	movw	r22, r24
 2cc:	cd 01       	movw	r24, r26
 2ce:	64 19       	sub	r22, r4
 2d0:	75 09       	sbc	r23, r5
 2d2:	86 09       	sbc	r24, r6
 2d4:	97 09       	sbc	r25, r7
 2d6:	28 c0       	rjmp	.+80     	; 0x328 <main+0xe0>
			}
			else
			{
				num_clock_ticks = (NUM_TOTAL_TICKS - rising_edge_time) + (num_overflows * NUM_TOTAL_TICKS) + falling_edge_time;
 2d8:	40 91 47 01 	lds	r20, 0x0147	; 0x800147 <rising_edge_time>
 2dc:	50 91 48 01 	lds	r21, 0x0148	; 0x800148 <rising_edge_time+0x1>
 2e0:	60 91 49 01 	lds	r22, 0x0149	; 0x800149 <rising_edge_time+0x2>
 2e4:	70 91 4a 01 	lds	r23, 0x014A	; 0x80014a <rising_edge_time+0x3>
 2e8:	24 01       	movw	r4, r8
 2ea:	35 01       	movw	r6, r10
 2ec:	44 1a       	sub	r4, r20
 2ee:	55 0a       	sbc	r5, r21
 2f0:	66 0a       	sbc	r6, r22
 2f2:	77 0a       	sbc	r7, r23
 2f4:	2f ef       	ldi	r18, 0xFF	; 255
 2f6:	3f ef       	ldi	r19, 0xFF	; 255
 2f8:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__usmulhisi3>
 2fc:	ab 01       	movw	r20, r22
 2fe:	bc 01       	movw	r22, r24
 300:	44 0d       	add	r20, r4
 302:	55 1d       	adc	r21, r5
 304:	66 1d       	adc	r22, r6
 306:	77 1d       	adc	r23, r7
 308:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <falling_edge_time>
 30c:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <falling_edge_time+0x1>
 310:	a0 91 4d 01 	lds	r26, 0x014D	; 0x80014d <falling_edge_time+0x2>
 314:	b0 91 4e 01 	lds	r27, 0x014E	; 0x80014e <falling_edge_time+0x3>
 318:	2a 01       	movw	r4, r20
 31a:	3b 01       	movw	r6, r22
 31c:	48 0e       	add	r4, r24
 31e:	59 1e       	adc	r5, r25
 320:	6a 1e       	adc	r6, r26
 322:	7b 1e       	adc	r7, r27
 324:	c3 01       	movw	r24, r6
 326:	b2 01       	movw	r22, r4
			}
			pulse_width = num_clock_ticks * CLOCK_TIME_PERIOD_US;
			
			// Print the width on terminal
			char result[64];
			snprintf(result, 64, "Pulse width is %ld\n", pulse_width);
 328:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__floatsisf>
 32c:	20 e0       	ldi	r18, 0x00	; 0
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	40 e8       	ldi	r20, 0x80	; 128
 332:	5d e3       	ldi	r21, 0x3D	; 61
 334:	0e 94 55 02 	call	0x4aa	; 0x4aa <__mulsf3>
 338:	0e 94 b9 01 	call	0x372	; 0x372 <__fixsfsi>
 33c:	9f 93       	push	r25
 33e:	8f 93       	push	r24
 340:	7f 93       	push	r23
 342:	6f 93       	push	r22
 344:	ff 92       	push	r15
 346:	ef 92       	push	r14
 348:	1f 92       	push	r1
 34a:	df 92       	push	r13
 34c:	1f 93       	push	r17
 34e:	0f 93       	push	r16
 350:	0e 94 30 03 	call	0x660	; 0x660 <snprintf>
			puts(result);
 354:	c8 01       	movw	r24, r16
 356:	0e 94 00 03 	call	0x600	; 0x600 <puts>
			
			num_overflows = 0;
 35a:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <__data_end+0x1>
 35e:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <__data_end>
			edges_detected = 0;
 362:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <edges_detected>
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	f8 94       	cli
 36a:	de bf       	out	0x3e, r29	; 62
 36c:	0f be       	out	0x3f, r0	; 63
 36e:	cd bf       	out	0x3d, r28	; 61
 370:	92 cf       	rjmp	.-220    	; 0x296 <main+0x4e>

00000372 <__fixsfsi>:
 372:	0e 94 c0 01 	call	0x380	; 0x380 <__fixunssfsi>
 376:	68 94       	set
 378:	b1 11       	cpse	r27, r1
 37a:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_szero>
 37e:	08 95       	ret

00000380 <__fixunssfsi>:
 380:	0e 94 34 02 	call	0x468	; 0x468 <__fp_splitA>
 384:	88 f0       	brcs	.+34     	; 0x3a8 <__fixunssfsi+0x28>
 386:	9f 57       	subi	r25, 0x7F	; 127
 388:	98 f0       	brcs	.+38     	; 0x3b0 <__fixunssfsi+0x30>
 38a:	b9 2f       	mov	r27, r25
 38c:	99 27       	eor	r25, r25
 38e:	b7 51       	subi	r27, 0x17	; 23
 390:	b0 f0       	brcs	.+44     	; 0x3be <__fixunssfsi+0x3e>
 392:	e1 f0       	breq	.+56     	; 0x3cc <__fixunssfsi+0x4c>
 394:	66 0f       	add	r22, r22
 396:	77 1f       	adc	r23, r23
 398:	88 1f       	adc	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	1a f0       	brmi	.+6      	; 0x3a4 <__fixunssfsi+0x24>
 39e:	ba 95       	dec	r27
 3a0:	c9 f7       	brne	.-14     	; 0x394 <__fixunssfsi+0x14>
 3a2:	14 c0       	rjmp	.+40     	; 0x3cc <__fixunssfsi+0x4c>
 3a4:	b1 30       	cpi	r27, 0x01	; 1
 3a6:	91 f0       	breq	.+36     	; 0x3cc <__fixunssfsi+0x4c>
 3a8:	0e 94 4e 02 	call	0x49c	; 0x49c <__fp_zero>
 3ac:	b1 e0       	ldi	r27, 0x01	; 1
 3ae:	08 95       	ret
 3b0:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_zero>
 3b4:	67 2f       	mov	r22, r23
 3b6:	78 2f       	mov	r23, r24
 3b8:	88 27       	eor	r24, r24
 3ba:	b8 5f       	subi	r27, 0xF8	; 248
 3bc:	39 f0       	breq	.+14     	; 0x3cc <__fixunssfsi+0x4c>
 3be:	b9 3f       	cpi	r27, 0xF9	; 249
 3c0:	cc f3       	brlt	.-14     	; 0x3b4 <__fixunssfsi+0x34>
 3c2:	86 95       	lsr	r24
 3c4:	77 95       	ror	r23
 3c6:	67 95       	ror	r22
 3c8:	b3 95       	inc	r27
 3ca:	d9 f7       	brne	.-10     	; 0x3c2 <__fixunssfsi+0x42>
 3cc:	3e f4       	brtc	.+14     	; 0x3dc <__fixunssfsi+0x5c>
 3ce:	90 95       	com	r25
 3d0:	80 95       	com	r24
 3d2:	70 95       	com	r23
 3d4:	61 95       	neg	r22
 3d6:	7f 4f       	sbci	r23, 0xFF	; 255
 3d8:	8f 4f       	sbci	r24, 0xFF	; 255
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	08 95       	ret

000003de <__floatunsisf>:
 3de:	e8 94       	clt
 3e0:	09 c0       	rjmp	.+18     	; 0x3f4 <__floatsisf+0x12>

000003e2 <__floatsisf>:
 3e2:	97 fb       	bst	r25, 7
 3e4:	3e f4       	brtc	.+14     	; 0x3f4 <__floatsisf+0x12>
 3e6:	90 95       	com	r25
 3e8:	80 95       	com	r24
 3ea:	70 95       	com	r23
 3ec:	61 95       	neg	r22
 3ee:	7f 4f       	sbci	r23, 0xFF	; 255
 3f0:	8f 4f       	sbci	r24, 0xFF	; 255
 3f2:	9f 4f       	sbci	r25, 0xFF	; 255
 3f4:	99 23       	and	r25, r25
 3f6:	a9 f0       	breq	.+42     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3f8:	f9 2f       	mov	r31, r25
 3fa:	96 e9       	ldi	r25, 0x96	; 150
 3fc:	bb 27       	eor	r27, r27
 3fe:	93 95       	inc	r25
 400:	f6 95       	lsr	r31
 402:	87 95       	ror	r24
 404:	77 95       	ror	r23
 406:	67 95       	ror	r22
 408:	b7 95       	ror	r27
 40a:	f1 11       	cpse	r31, r1
 40c:	f8 cf       	rjmp	.-16     	; 0x3fe <__floatsisf+0x1c>
 40e:	fa f4       	brpl	.+62     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 410:	bb 0f       	add	r27, r27
 412:	11 f4       	brne	.+4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 414:	60 ff       	sbrs	r22, 0
 416:	1b c0       	rjmp	.+54     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 418:	6f 5f       	subi	r22, 0xFF	; 255
 41a:	7f 4f       	sbci	r23, 0xFF	; 255
 41c:	8f 4f       	sbci	r24, 0xFF	; 255
 41e:	9f 4f       	sbci	r25, 0xFF	; 255
 420:	16 c0       	rjmp	.+44     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 422:	88 23       	and	r24, r24
 424:	11 f0       	breq	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 426:	96 e9       	ldi	r25, 0x96	; 150
 428:	11 c0       	rjmp	.+34     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 42a:	77 23       	and	r23, r23
 42c:	21 f0       	breq	.+8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42e:	9e e8       	ldi	r25, 0x8E	; 142
 430:	87 2f       	mov	r24, r23
 432:	76 2f       	mov	r23, r22
 434:	05 c0       	rjmp	.+10     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 436:	66 23       	and	r22, r22
 438:	71 f0       	breq	.+28     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 43a:	96 e8       	ldi	r25, 0x86	; 134
 43c:	86 2f       	mov	r24, r22
 43e:	70 e0       	ldi	r23, 0x00	; 0
 440:	60 e0       	ldi	r22, 0x00	; 0
 442:	2a f0       	brmi	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 444:	9a 95       	dec	r25
 446:	66 0f       	add	r22, r22
 448:	77 1f       	adc	r23, r23
 44a:	88 1f       	adc	r24, r24
 44c:	da f7       	brpl	.-10     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44e:	88 0f       	add	r24, r24
 450:	96 95       	lsr	r25
 452:	87 95       	ror	r24
 454:	97 f9       	bld	r25, 7
 456:	08 95       	ret

00000458 <__fp_split3>:
 458:	57 fd       	sbrc	r21, 7
 45a:	90 58       	subi	r25, 0x80	; 128
 45c:	44 0f       	add	r20, r20
 45e:	55 1f       	adc	r21, r21
 460:	59 f0       	breq	.+22     	; 0x478 <__fp_splitA+0x10>
 462:	5f 3f       	cpi	r21, 0xFF	; 255
 464:	71 f0       	breq	.+28     	; 0x482 <__fp_splitA+0x1a>
 466:	47 95       	ror	r20

00000468 <__fp_splitA>:
 468:	88 0f       	add	r24, r24
 46a:	97 fb       	bst	r25, 7
 46c:	99 1f       	adc	r25, r25
 46e:	61 f0       	breq	.+24     	; 0x488 <__fp_splitA+0x20>
 470:	9f 3f       	cpi	r25, 0xFF	; 255
 472:	79 f0       	breq	.+30     	; 0x492 <__fp_splitA+0x2a>
 474:	87 95       	ror	r24
 476:	08 95       	ret
 478:	12 16       	cp	r1, r18
 47a:	13 06       	cpc	r1, r19
 47c:	14 06       	cpc	r1, r20
 47e:	55 1f       	adc	r21, r21
 480:	f2 cf       	rjmp	.-28     	; 0x466 <__fp_split3+0xe>
 482:	46 95       	lsr	r20
 484:	f1 df       	rcall	.-30     	; 0x468 <__fp_splitA>
 486:	08 c0       	rjmp	.+16     	; 0x498 <__fp_splitA+0x30>
 488:	16 16       	cp	r1, r22
 48a:	17 06       	cpc	r1, r23
 48c:	18 06       	cpc	r1, r24
 48e:	99 1f       	adc	r25, r25
 490:	f1 cf       	rjmp	.-30     	; 0x474 <__fp_splitA+0xc>
 492:	86 95       	lsr	r24
 494:	71 05       	cpc	r23, r1
 496:	61 05       	cpc	r22, r1
 498:	08 94       	sec
 49a:	08 95       	ret

0000049c <__fp_zero>:
 49c:	e8 94       	clt

0000049e <__fp_szero>:
 49e:	bb 27       	eor	r27, r27
 4a0:	66 27       	eor	r22, r22
 4a2:	77 27       	eor	r23, r23
 4a4:	cb 01       	movw	r24, r22
 4a6:	97 f9       	bld	r25, 7
 4a8:	08 95       	ret

000004aa <__mulsf3>:
 4aa:	0e 94 68 02 	call	0x4d0	; 0x4d0 <__mulsf3x>
 4ae:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__fp_round>
 4b2:	0e 94 cb 02 	call	0x596	; 0x596 <__fp_pscA>
 4b6:	38 f0       	brcs	.+14     	; 0x4c6 <__mulsf3+0x1c>
 4b8:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscB>
 4bc:	20 f0       	brcs	.+8      	; 0x4c6 <__mulsf3+0x1c>
 4be:	95 23       	and	r25, r21
 4c0:	11 f0       	breq	.+4      	; 0x4c6 <__mulsf3+0x1c>
 4c2:	0c 94 c2 02 	jmp	0x584	; 0x584 <__fp_inf>
 4c6:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_nan>
 4ca:	11 24       	eor	r1, r1
 4cc:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_szero>

000004d0 <__mulsf3x>:
 4d0:	0e 94 2c 02 	call	0x458	; 0x458 <__fp_split3>
 4d4:	70 f3       	brcs	.-36     	; 0x4b2 <__mulsf3+0x8>

000004d6 <__mulsf3_pse>:
 4d6:	95 9f       	mul	r25, r21
 4d8:	c1 f3       	breq	.-16     	; 0x4ca <__mulsf3+0x20>
 4da:	95 0f       	add	r25, r21
 4dc:	50 e0       	ldi	r21, 0x00	; 0
 4de:	55 1f       	adc	r21, r21
 4e0:	62 9f       	mul	r22, r18
 4e2:	f0 01       	movw	r30, r0
 4e4:	72 9f       	mul	r23, r18
 4e6:	bb 27       	eor	r27, r27
 4e8:	f0 0d       	add	r31, r0
 4ea:	b1 1d       	adc	r27, r1
 4ec:	63 9f       	mul	r22, r19
 4ee:	aa 27       	eor	r26, r26
 4f0:	f0 0d       	add	r31, r0
 4f2:	b1 1d       	adc	r27, r1
 4f4:	aa 1f       	adc	r26, r26
 4f6:	64 9f       	mul	r22, r20
 4f8:	66 27       	eor	r22, r22
 4fa:	b0 0d       	add	r27, r0
 4fc:	a1 1d       	adc	r26, r1
 4fe:	66 1f       	adc	r22, r22
 500:	82 9f       	mul	r24, r18
 502:	22 27       	eor	r18, r18
 504:	b0 0d       	add	r27, r0
 506:	a1 1d       	adc	r26, r1
 508:	62 1f       	adc	r22, r18
 50a:	73 9f       	mul	r23, r19
 50c:	b0 0d       	add	r27, r0
 50e:	a1 1d       	adc	r26, r1
 510:	62 1f       	adc	r22, r18
 512:	83 9f       	mul	r24, r19
 514:	a0 0d       	add	r26, r0
 516:	61 1d       	adc	r22, r1
 518:	22 1f       	adc	r18, r18
 51a:	74 9f       	mul	r23, r20
 51c:	33 27       	eor	r19, r19
 51e:	a0 0d       	add	r26, r0
 520:	61 1d       	adc	r22, r1
 522:	23 1f       	adc	r18, r19
 524:	84 9f       	mul	r24, r20
 526:	60 0d       	add	r22, r0
 528:	21 1d       	adc	r18, r1
 52a:	82 2f       	mov	r24, r18
 52c:	76 2f       	mov	r23, r22
 52e:	6a 2f       	mov	r22, r26
 530:	11 24       	eor	r1, r1
 532:	9f 57       	subi	r25, 0x7F	; 127
 534:	50 40       	sbci	r21, 0x00	; 0
 536:	9a f0       	brmi	.+38     	; 0x55e <__mulsf3_pse+0x88>
 538:	f1 f0       	breq	.+60     	; 0x576 <__mulsf3_pse+0xa0>
 53a:	88 23       	and	r24, r24
 53c:	4a f0       	brmi	.+18     	; 0x550 <__mulsf3_pse+0x7a>
 53e:	ee 0f       	add	r30, r30
 540:	ff 1f       	adc	r31, r31
 542:	bb 1f       	adc	r27, r27
 544:	66 1f       	adc	r22, r22
 546:	77 1f       	adc	r23, r23
 548:	88 1f       	adc	r24, r24
 54a:	91 50       	subi	r25, 0x01	; 1
 54c:	50 40       	sbci	r21, 0x00	; 0
 54e:	a9 f7       	brne	.-22     	; 0x53a <__mulsf3_pse+0x64>
 550:	9e 3f       	cpi	r25, 0xFE	; 254
 552:	51 05       	cpc	r21, r1
 554:	80 f0       	brcs	.+32     	; 0x576 <__mulsf3_pse+0xa0>
 556:	0c 94 c2 02 	jmp	0x584	; 0x584 <__fp_inf>
 55a:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__fp_szero>
 55e:	5f 3f       	cpi	r21, 0xFF	; 255
 560:	e4 f3       	brlt	.-8      	; 0x55a <__mulsf3_pse+0x84>
 562:	98 3e       	cpi	r25, 0xE8	; 232
 564:	d4 f3       	brlt	.-12     	; 0x55a <__mulsf3_pse+0x84>
 566:	86 95       	lsr	r24
 568:	77 95       	ror	r23
 56a:	67 95       	ror	r22
 56c:	b7 95       	ror	r27
 56e:	f7 95       	ror	r31
 570:	e7 95       	ror	r30
 572:	9f 5f       	subi	r25, 0xFF	; 255
 574:	c1 f7       	brne	.-16     	; 0x566 <__mulsf3_pse+0x90>
 576:	fe 2b       	or	r31, r30
 578:	88 0f       	add	r24, r24
 57a:	91 1d       	adc	r25, r1
 57c:	96 95       	lsr	r25
 57e:	87 95       	ror	r24
 580:	97 f9       	bld	r25, 7
 582:	08 95       	ret

00000584 <__fp_inf>:
 584:	97 f9       	bld	r25, 7
 586:	9f 67       	ori	r25, 0x7F	; 127
 588:	80 e8       	ldi	r24, 0x80	; 128
 58a:	70 e0       	ldi	r23, 0x00	; 0
 58c:	60 e0       	ldi	r22, 0x00	; 0
 58e:	08 95       	ret

00000590 <__fp_nan>:
 590:	9f ef       	ldi	r25, 0xFF	; 255
 592:	80 ec       	ldi	r24, 0xC0	; 192
 594:	08 95       	ret

00000596 <__fp_pscA>:
 596:	00 24       	eor	r0, r0
 598:	0a 94       	dec	r0
 59a:	16 16       	cp	r1, r22
 59c:	17 06       	cpc	r1, r23
 59e:	18 06       	cpc	r1, r24
 5a0:	09 06       	cpc	r0, r25
 5a2:	08 95       	ret

000005a4 <__fp_pscB>:
 5a4:	00 24       	eor	r0, r0
 5a6:	0a 94       	dec	r0
 5a8:	12 16       	cp	r1, r18
 5aa:	13 06       	cpc	r1, r19
 5ac:	14 06       	cpc	r1, r20
 5ae:	05 06       	cpc	r0, r21
 5b0:	08 95       	ret

000005b2 <__fp_round>:
 5b2:	09 2e       	mov	r0, r25
 5b4:	03 94       	inc	r0
 5b6:	00 0c       	add	r0, r0
 5b8:	11 f4       	brne	.+4      	; 0x5be <__fp_round+0xc>
 5ba:	88 23       	and	r24, r24
 5bc:	52 f0       	brmi	.+20     	; 0x5d2 <__fp_round+0x20>
 5be:	bb 0f       	add	r27, r27
 5c0:	40 f4       	brcc	.+16     	; 0x5d2 <__fp_round+0x20>
 5c2:	bf 2b       	or	r27, r31
 5c4:	11 f4       	brne	.+4      	; 0x5ca <__fp_round+0x18>
 5c6:	60 ff       	sbrs	r22, 0
 5c8:	04 c0       	rjmp	.+8      	; 0x5d2 <__fp_round+0x20>
 5ca:	6f 5f       	subi	r22, 0xFF	; 255
 5cc:	7f 4f       	sbci	r23, 0xFF	; 255
 5ce:	8f 4f       	sbci	r24, 0xFF	; 255
 5d0:	9f 4f       	sbci	r25, 0xFF	; 255
 5d2:	08 95       	ret

000005d4 <__usmulhisi3>:
 5d4:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__umulhisi3>

000005d8 <__usmulhisi3_tail>:
 5d8:	b7 ff       	sbrs	r27, 7
 5da:	08 95       	ret
 5dc:	82 1b       	sub	r24, r18
 5de:	93 0b       	sbc	r25, r19
 5e0:	08 95       	ret

000005e2 <__umulhisi3>:
 5e2:	a2 9f       	mul	r26, r18
 5e4:	b0 01       	movw	r22, r0
 5e6:	b3 9f       	mul	r27, r19
 5e8:	c0 01       	movw	r24, r0
 5ea:	a3 9f       	mul	r26, r19
 5ec:	70 0d       	add	r23, r0
 5ee:	81 1d       	adc	r24, r1
 5f0:	11 24       	eor	r1, r1
 5f2:	91 1d       	adc	r25, r1
 5f4:	b2 9f       	mul	r27, r18
 5f6:	70 0d       	add	r23, r0
 5f8:	81 1d       	adc	r24, r1
 5fa:	11 24       	eor	r1, r1
 5fc:	91 1d       	adc	r25, r1
 5fe:	08 95       	ret

00000600 <puts>:
 600:	0f 93       	push	r16
 602:	1f 93       	push	r17
 604:	cf 93       	push	r28
 606:	df 93       	push	r29
 608:	e0 91 51 01 	lds	r30, 0x0151	; 0x800151 <__iob+0x2>
 60c:	f0 91 52 01 	lds	r31, 0x0152	; 0x800152 <__iob+0x3>
 610:	23 81       	ldd	r18, Z+3	; 0x03
 612:	21 ff       	sbrs	r18, 1
 614:	1b c0       	rjmp	.+54     	; 0x64c <puts+0x4c>
 616:	8c 01       	movw	r16, r24
 618:	d0 e0       	ldi	r29, 0x00	; 0
 61a:	c0 e0       	ldi	r28, 0x00	; 0
 61c:	f8 01       	movw	r30, r16
 61e:	81 91       	ld	r24, Z+
 620:	8f 01       	movw	r16, r30
 622:	60 91 51 01 	lds	r22, 0x0151	; 0x800151 <__iob+0x2>
 626:	70 91 52 01 	lds	r23, 0x0152	; 0x800152 <__iob+0x3>
 62a:	db 01       	movw	r26, r22
 62c:	18 96       	adiw	r26, 0x08	; 8
 62e:	ed 91       	ld	r30, X+
 630:	fc 91       	ld	r31, X
 632:	19 97       	sbiw	r26, 0x09	; 9
 634:	88 23       	and	r24, r24
 636:	31 f0       	breq	.+12     	; 0x644 <puts+0x44>
 638:	09 95       	icall
 63a:	89 2b       	or	r24, r25
 63c:	79 f3       	breq	.-34     	; 0x61c <puts+0x1c>
 63e:	df ef       	ldi	r29, 0xFF	; 255
 640:	cf ef       	ldi	r28, 0xFF	; 255
 642:	ec cf       	rjmp	.-40     	; 0x61c <puts+0x1c>
 644:	8a e0       	ldi	r24, 0x0A	; 10
 646:	09 95       	icall
 648:	89 2b       	or	r24, r25
 64a:	19 f0       	breq	.+6      	; 0x652 <puts+0x52>
 64c:	8f ef       	ldi	r24, 0xFF	; 255
 64e:	9f ef       	ldi	r25, 0xFF	; 255
 650:	02 c0       	rjmp	.+4      	; 0x656 <puts+0x56>
 652:	8d 2f       	mov	r24, r29
 654:	9c 2f       	mov	r25, r28
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	1f 91       	pop	r17
 65c:	0f 91       	pop	r16
 65e:	08 95       	ret

00000660 <snprintf>:
 660:	ae e0       	ldi	r26, 0x0E	; 14
 662:	b0 e0       	ldi	r27, 0x00	; 0
 664:	e6 e3       	ldi	r30, 0x36	; 54
 666:	f3 e0       	ldi	r31, 0x03	; 3
 668:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__prologue_saves__+0x1c>
 66c:	0d 89       	ldd	r16, Y+21	; 0x15
 66e:	1e 89       	ldd	r17, Y+22	; 0x16
 670:	8f 89       	ldd	r24, Y+23	; 0x17
 672:	98 8d       	ldd	r25, Y+24	; 0x18
 674:	26 e0       	ldi	r18, 0x06	; 6
 676:	2c 83       	std	Y+4, r18	; 0x04
 678:	1a 83       	std	Y+2, r17	; 0x02
 67a:	09 83       	std	Y+1, r16	; 0x01
 67c:	97 ff       	sbrs	r25, 7
 67e:	02 c0       	rjmp	.+4      	; 0x684 <snprintf+0x24>
 680:	80 e0       	ldi	r24, 0x00	; 0
 682:	90 e8       	ldi	r25, 0x80	; 128
 684:	01 97       	sbiw	r24, 0x01	; 1
 686:	9e 83       	std	Y+6, r25	; 0x06
 688:	8d 83       	std	Y+5, r24	; 0x05
 68a:	ae 01       	movw	r20, r28
 68c:	45 5e       	subi	r20, 0xE5	; 229
 68e:	5f 4f       	sbci	r21, 0xFF	; 255
 690:	69 8d       	ldd	r22, Y+25	; 0x19
 692:	7a 8d       	ldd	r23, Y+26	; 0x1a
 694:	ce 01       	movw	r24, r28
 696:	01 96       	adiw	r24, 0x01	; 1
 698:	0e 94 60 03 	call	0x6c0	; 0x6c0 <vfprintf>
 69c:	4d 81       	ldd	r20, Y+5	; 0x05
 69e:	5e 81       	ldd	r21, Y+6	; 0x06
 6a0:	57 fd       	sbrc	r21, 7
 6a2:	0a c0       	rjmp	.+20     	; 0x6b8 <snprintf+0x58>
 6a4:	2f 81       	ldd	r18, Y+7	; 0x07
 6a6:	38 85       	ldd	r19, Y+8	; 0x08
 6a8:	42 17       	cp	r20, r18
 6aa:	53 07       	cpc	r21, r19
 6ac:	0c f4       	brge	.+2      	; 0x6b0 <snprintf+0x50>
 6ae:	9a 01       	movw	r18, r20
 6b0:	f8 01       	movw	r30, r16
 6b2:	e2 0f       	add	r30, r18
 6b4:	f3 1f       	adc	r31, r19
 6b6:	10 82       	st	Z, r1
 6b8:	2e 96       	adiw	r28, 0x0e	; 14
 6ba:	e4 e0       	ldi	r30, 0x04	; 4
 6bc:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__epilogue_restores__+0x1c>

000006c0 <vfprintf>:
 6c0:	ab e0       	ldi	r26, 0x0B	; 11
 6c2:	b0 e0       	ldi	r27, 0x00	; 0
 6c4:	e6 e6       	ldi	r30, 0x66	; 102
 6c6:	f3 e0       	ldi	r31, 0x03	; 3
 6c8:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__prologue_saves__>
 6cc:	6c 01       	movw	r12, r24
 6ce:	7b 01       	movw	r14, r22
 6d0:	8a 01       	movw	r16, r20
 6d2:	fc 01       	movw	r30, r24
 6d4:	17 82       	std	Z+7, r1	; 0x07
 6d6:	16 82       	std	Z+6, r1	; 0x06
 6d8:	83 81       	ldd	r24, Z+3	; 0x03
 6da:	81 ff       	sbrs	r24, 1
 6dc:	cc c1       	rjmp	.+920    	; 0xa76 <__stack+0x177>
 6de:	ce 01       	movw	r24, r28
 6e0:	01 96       	adiw	r24, 0x01	; 1
 6e2:	3c 01       	movw	r6, r24
 6e4:	f6 01       	movw	r30, r12
 6e6:	93 81       	ldd	r25, Z+3	; 0x03
 6e8:	f7 01       	movw	r30, r14
 6ea:	93 fd       	sbrc	r25, 3
 6ec:	85 91       	lpm	r24, Z+
 6ee:	93 ff       	sbrs	r25, 3
 6f0:	81 91       	ld	r24, Z+
 6f2:	7f 01       	movw	r14, r30
 6f4:	88 23       	and	r24, r24
 6f6:	09 f4       	brne	.+2      	; 0x6fa <vfprintf+0x3a>
 6f8:	ba c1       	rjmp	.+884    	; 0xa6e <__stack+0x16f>
 6fa:	85 32       	cpi	r24, 0x25	; 37
 6fc:	39 f4       	brne	.+14     	; 0x70c <vfprintf+0x4c>
 6fe:	93 fd       	sbrc	r25, 3
 700:	85 91       	lpm	r24, Z+
 702:	93 ff       	sbrs	r25, 3
 704:	81 91       	ld	r24, Z+
 706:	7f 01       	movw	r14, r30
 708:	85 32       	cpi	r24, 0x25	; 37
 70a:	29 f4       	brne	.+10     	; 0x716 <vfprintf+0x56>
 70c:	b6 01       	movw	r22, r12
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 714:	e7 cf       	rjmp	.-50     	; 0x6e4 <vfprintf+0x24>
 716:	91 2c       	mov	r9, r1
 718:	21 2c       	mov	r2, r1
 71a:	31 2c       	mov	r3, r1
 71c:	ff e1       	ldi	r31, 0x1F	; 31
 71e:	f3 15       	cp	r31, r3
 720:	d8 f0       	brcs	.+54     	; 0x758 <vfprintf+0x98>
 722:	8b 32       	cpi	r24, 0x2B	; 43
 724:	79 f0       	breq	.+30     	; 0x744 <vfprintf+0x84>
 726:	38 f4       	brcc	.+14     	; 0x736 <vfprintf+0x76>
 728:	80 32       	cpi	r24, 0x20	; 32
 72a:	79 f0       	breq	.+30     	; 0x74a <vfprintf+0x8a>
 72c:	83 32       	cpi	r24, 0x23	; 35
 72e:	a1 f4       	brne	.+40     	; 0x758 <vfprintf+0x98>
 730:	23 2d       	mov	r18, r3
 732:	20 61       	ori	r18, 0x10	; 16
 734:	1d c0       	rjmp	.+58     	; 0x770 <vfprintf+0xb0>
 736:	8d 32       	cpi	r24, 0x2D	; 45
 738:	61 f0       	breq	.+24     	; 0x752 <vfprintf+0x92>
 73a:	80 33       	cpi	r24, 0x30	; 48
 73c:	69 f4       	brne	.+26     	; 0x758 <vfprintf+0x98>
 73e:	23 2d       	mov	r18, r3
 740:	21 60       	ori	r18, 0x01	; 1
 742:	16 c0       	rjmp	.+44     	; 0x770 <vfprintf+0xb0>
 744:	83 2d       	mov	r24, r3
 746:	82 60       	ori	r24, 0x02	; 2
 748:	38 2e       	mov	r3, r24
 74a:	e3 2d       	mov	r30, r3
 74c:	e4 60       	ori	r30, 0x04	; 4
 74e:	3e 2e       	mov	r3, r30
 750:	2a c0       	rjmp	.+84     	; 0x7a6 <vfprintf+0xe6>
 752:	f3 2d       	mov	r31, r3
 754:	f8 60       	ori	r31, 0x08	; 8
 756:	1d c0       	rjmp	.+58     	; 0x792 <vfprintf+0xd2>
 758:	37 fc       	sbrc	r3, 7
 75a:	2d c0       	rjmp	.+90     	; 0x7b6 <vfprintf+0xf6>
 75c:	20 ed       	ldi	r18, 0xD0	; 208
 75e:	28 0f       	add	r18, r24
 760:	2a 30       	cpi	r18, 0x0A	; 10
 762:	40 f0       	brcs	.+16     	; 0x774 <vfprintf+0xb4>
 764:	8e 32       	cpi	r24, 0x2E	; 46
 766:	b9 f4       	brne	.+46     	; 0x796 <vfprintf+0xd6>
 768:	36 fc       	sbrc	r3, 6
 76a:	81 c1       	rjmp	.+770    	; 0xa6e <__stack+0x16f>
 76c:	23 2d       	mov	r18, r3
 76e:	20 64       	ori	r18, 0x40	; 64
 770:	32 2e       	mov	r3, r18
 772:	19 c0       	rjmp	.+50     	; 0x7a6 <vfprintf+0xe6>
 774:	36 fe       	sbrs	r3, 6
 776:	06 c0       	rjmp	.+12     	; 0x784 <vfprintf+0xc4>
 778:	8a e0       	ldi	r24, 0x0A	; 10
 77a:	98 9e       	mul	r9, r24
 77c:	20 0d       	add	r18, r0
 77e:	11 24       	eor	r1, r1
 780:	92 2e       	mov	r9, r18
 782:	11 c0       	rjmp	.+34     	; 0x7a6 <vfprintf+0xe6>
 784:	ea e0       	ldi	r30, 0x0A	; 10
 786:	2e 9e       	mul	r2, r30
 788:	20 0d       	add	r18, r0
 78a:	11 24       	eor	r1, r1
 78c:	22 2e       	mov	r2, r18
 78e:	f3 2d       	mov	r31, r3
 790:	f0 62       	ori	r31, 0x20	; 32
 792:	3f 2e       	mov	r3, r31
 794:	08 c0       	rjmp	.+16     	; 0x7a6 <vfprintf+0xe6>
 796:	8c 36       	cpi	r24, 0x6C	; 108
 798:	21 f4       	brne	.+8      	; 0x7a2 <vfprintf+0xe2>
 79a:	83 2d       	mov	r24, r3
 79c:	80 68       	ori	r24, 0x80	; 128
 79e:	38 2e       	mov	r3, r24
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <vfprintf+0xe6>
 7a2:	88 36       	cpi	r24, 0x68	; 104
 7a4:	41 f4       	brne	.+16     	; 0x7b6 <vfprintf+0xf6>
 7a6:	f7 01       	movw	r30, r14
 7a8:	93 fd       	sbrc	r25, 3
 7aa:	85 91       	lpm	r24, Z+
 7ac:	93 ff       	sbrs	r25, 3
 7ae:	81 91       	ld	r24, Z+
 7b0:	7f 01       	movw	r14, r30
 7b2:	81 11       	cpse	r24, r1
 7b4:	b3 cf       	rjmp	.-154    	; 0x71c <vfprintf+0x5c>
 7b6:	98 2f       	mov	r25, r24
 7b8:	9f 7d       	andi	r25, 0xDF	; 223
 7ba:	95 54       	subi	r25, 0x45	; 69
 7bc:	93 30       	cpi	r25, 0x03	; 3
 7be:	28 f4       	brcc	.+10     	; 0x7ca <vfprintf+0x10a>
 7c0:	0c 5f       	subi	r16, 0xFC	; 252
 7c2:	1f 4f       	sbci	r17, 0xFF	; 255
 7c4:	9f e3       	ldi	r25, 0x3F	; 63
 7c6:	99 83       	std	Y+1, r25	; 0x01
 7c8:	0d c0       	rjmp	.+26     	; 0x7e4 <vfprintf+0x124>
 7ca:	83 36       	cpi	r24, 0x63	; 99
 7cc:	31 f0       	breq	.+12     	; 0x7da <vfprintf+0x11a>
 7ce:	83 37       	cpi	r24, 0x73	; 115
 7d0:	71 f0       	breq	.+28     	; 0x7ee <vfprintf+0x12e>
 7d2:	83 35       	cpi	r24, 0x53	; 83
 7d4:	09 f0       	breq	.+2      	; 0x7d8 <vfprintf+0x118>
 7d6:	59 c0       	rjmp	.+178    	; 0x88a <vfprintf+0x1ca>
 7d8:	21 c0       	rjmp	.+66     	; 0x81c <vfprintf+0x15c>
 7da:	f8 01       	movw	r30, r16
 7dc:	80 81       	ld	r24, Z
 7de:	89 83       	std	Y+1, r24	; 0x01
 7e0:	0e 5f       	subi	r16, 0xFE	; 254
 7e2:	1f 4f       	sbci	r17, 0xFF	; 255
 7e4:	88 24       	eor	r8, r8
 7e6:	83 94       	inc	r8
 7e8:	91 2c       	mov	r9, r1
 7ea:	53 01       	movw	r10, r6
 7ec:	13 c0       	rjmp	.+38     	; 0x814 <vfprintf+0x154>
 7ee:	28 01       	movw	r4, r16
 7f0:	f2 e0       	ldi	r31, 0x02	; 2
 7f2:	4f 0e       	add	r4, r31
 7f4:	51 1c       	adc	r5, r1
 7f6:	f8 01       	movw	r30, r16
 7f8:	a0 80       	ld	r10, Z
 7fa:	b1 80       	ldd	r11, Z+1	; 0x01
 7fc:	36 fe       	sbrs	r3, 6
 7fe:	03 c0       	rjmp	.+6      	; 0x806 <vfprintf+0x146>
 800:	69 2d       	mov	r22, r9
 802:	70 e0       	ldi	r23, 0x00	; 0
 804:	02 c0       	rjmp	.+4      	; 0x80a <vfprintf+0x14a>
 806:	6f ef       	ldi	r22, 0xFF	; 255
 808:	7f ef       	ldi	r23, 0xFF	; 255
 80a:	c5 01       	movw	r24, r10
 80c:	0e 94 4c 05 	call	0xa98	; 0xa98 <strnlen>
 810:	4c 01       	movw	r8, r24
 812:	82 01       	movw	r16, r4
 814:	f3 2d       	mov	r31, r3
 816:	ff 77       	andi	r31, 0x7F	; 127
 818:	3f 2e       	mov	r3, r31
 81a:	16 c0       	rjmp	.+44     	; 0x848 <vfprintf+0x188>
 81c:	28 01       	movw	r4, r16
 81e:	22 e0       	ldi	r18, 0x02	; 2
 820:	42 0e       	add	r4, r18
 822:	51 1c       	adc	r5, r1
 824:	f8 01       	movw	r30, r16
 826:	a0 80       	ld	r10, Z
 828:	b1 80       	ldd	r11, Z+1	; 0x01
 82a:	36 fe       	sbrs	r3, 6
 82c:	03 c0       	rjmp	.+6      	; 0x834 <vfprintf+0x174>
 82e:	69 2d       	mov	r22, r9
 830:	70 e0       	ldi	r23, 0x00	; 0
 832:	02 c0       	rjmp	.+4      	; 0x838 <vfprintf+0x178>
 834:	6f ef       	ldi	r22, 0xFF	; 255
 836:	7f ef       	ldi	r23, 0xFF	; 255
 838:	c5 01       	movw	r24, r10
 83a:	0e 94 41 05 	call	0xa82	; 0xa82 <strnlen_P>
 83e:	4c 01       	movw	r8, r24
 840:	f3 2d       	mov	r31, r3
 842:	f0 68       	ori	r31, 0x80	; 128
 844:	3f 2e       	mov	r3, r31
 846:	82 01       	movw	r16, r4
 848:	33 fc       	sbrc	r3, 3
 84a:	1b c0       	rjmp	.+54     	; 0x882 <vfprintf+0x1c2>
 84c:	82 2d       	mov	r24, r2
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	88 16       	cp	r8, r24
 852:	99 06       	cpc	r9, r25
 854:	b0 f4       	brcc	.+44     	; 0x882 <vfprintf+0x1c2>
 856:	b6 01       	movw	r22, r12
 858:	80 e2       	ldi	r24, 0x20	; 32
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 860:	2a 94       	dec	r2
 862:	f4 cf       	rjmp	.-24     	; 0x84c <vfprintf+0x18c>
 864:	f5 01       	movw	r30, r10
 866:	37 fc       	sbrc	r3, 7
 868:	85 91       	lpm	r24, Z+
 86a:	37 fe       	sbrs	r3, 7
 86c:	81 91       	ld	r24, Z+
 86e:	5f 01       	movw	r10, r30
 870:	b6 01       	movw	r22, r12
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 878:	21 10       	cpse	r2, r1
 87a:	2a 94       	dec	r2
 87c:	21 e0       	ldi	r18, 0x01	; 1
 87e:	82 1a       	sub	r8, r18
 880:	91 08       	sbc	r9, r1
 882:	81 14       	cp	r8, r1
 884:	91 04       	cpc	r9, r1
 886:	71 f7       	brne	.-36     	; 0x864 <vfprintf+0x1a4>
 888:	e8 c0       	rjmp	.+464    	; 0xa5a <__stack+0x15b>
 88a:	84 36       	cpi	r24, 0x64	; 100
 88c:	11 f0       	breq	.+4      	; 0x892 <vfprintf+0x1d2>
 88e:	89 36       	cpi	r24, 0x69	; 105
 890:	41 f5       	brne	.+80     	; 0x8e2 <vfprintf+0x222>
 892:	f8 01       	movw	r30, r16
 894:	37 fe       	sbrs	r3, 7
 896:	07 c0       	rjmp	.+14     	; 0x8a6 <vfprintf+0x1e6>
 898:	60 81       	ld	r22, Z
 89a:	71 81       	ldd	r23, Z+1	; 0x01
 89c:	82 81       	ldd	r24, Z+2	; 0x02
 89e:	93 81       	ldd	r25, Z+3	; 0x03
 8a0:	0c 5f       	subi	r16, 0xFC	; 252
 8a2:	1f 4f       	sbci	r17, 0xFF	; 255
 8a4:	08 c0       	rjmp	.+16     	; 0x8b6 <vfprintf+0x1f6>
 8a6:	60 81       	ld	r22, Z
 8a8:	71 81       	ldd	r23, Z+1	; 0x01
 8aa:	07 2e       	mov	r0, r23
 8ac:	00 0c       	add	r0, r0
 8ae:	88 0b       	sbc	r24, r24
 8b0:	99 0b       	sbc	r25, r25
 8b2:	0e 5f       	subi	r16, 0xFE	; 254
 8b4:	1f 4f       	sbci	r17, 0xFF	; 255
 8b6:	f3 2d       	mov	r31, r3
 8b8:	ff 76       	andi	r31, 0x6F	; 111
 8ba:	3f 2e       	mov	r3, r31
 8bc:	97 ff       	sbrs	r25, 7
 8be:	09 c0       	rjmp	.+18     	; 0x8d2 <vfprintf+0x212>
 8c0:	90 95       	com	r25
 8c2:	80 95       	com	r24
 8c4:	70 95       	com	r23
 8c6:	61 95       	neg	r22
 8c8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ca:	8f 4f       	sbci	r24, 0xFF	; 255
 8cc:	9f 4f       	sbci	r25, 0xFF	; 255
 8ce:	f0 68       	ori	r31, 0x80	; 128
 8d0:	3f 2e       	mov	r3, r31
 8d2:	2a e0       	ldi	r18, 0x0A	; 10
 8d4:	30 e0       	ldi	r19, 0x00	; 0
 8d6:	a3 01       	movw	r20, r6
 8d8:	0e 94 93 05 	call	0xb26	; 0xb26 <__ultoa_invert>
 8dc:	88 2e       	mov	r8, r24
 8de:	86 18       	sub	r8, r6
 8e0:	45 c0       	rjmp	.+138    	; 0x96c <__stack+0x6d>
 8e2:	85 37       	cpi	r24, 0x75	; 117
 8e4:	31 f4       	brne	.+12     	; 0x8f2 <vfprintf+0x232>
 8e6:	23 2d       	mov	r18, r3
 8e8:	2f 7e       	andi	r18, 0xEF	; 239
 8ea:	b2 2e       	mov	r11, r18
 8ec:	2a e0       	ldi	r18, 0x0A	; 10
 8ee:	30 e0       	ldi	r19, 0x00	; 0
 8f0:	25 c0       	rjmp	.+74     	; 0x93c <__stack+0x3d>
 8f2:	93 2d       	mov	r25, r3
 8f4:	99 7f       	andi	r25, 0xF9	; 249
 8f6:	b9 2e       	mov	r11, r25
 8f8:	8f 36       	cpi	r24, 0x6F	; 111
 8fa:	c1 f0       	breq	.+48     	; 0x92c <__stack+0x2d>
 8fc:	18 f4       	brcc	.+6      	; 0x904 <__stack+0x5>
 8fe:	88 35       	cpi	r24, 0x58	; 88
 900:	79 f0       	breq	.+30     	; 0x920 <__stack+0x21>
 902:	b5 c0       	rjmp	.+362    	; 0xa6e <__stack+0x16f>
 904:	80 37       	cpi	r24, 0x70	; 112
 906:	19 f0       	breq	.+6      	; 0x90e <__stack+0xf>
 908:	88 37       	cpi	r24, 0x78	; 120
 90a:	21 f0       	breq	.+8      	; 0x914 <__stack+0x15>
 90c:	b0 c0       	rjmp	.+352    	; 0xa6e <__stack+0x16f>
 90e:	e9 2f       	mov	r30, r25
 910:	e0 61       	ori	r30, 0x10	; 16
 912:	be 2e       	mov	r11, r30
 914:	b4 fe       	sbrs	r11, 4
 916:	0d c0       	rjmp	.+26     	; 0x932 <__stack+0x33>
 918:	fb 2d       	mov	r31, r11
 91a:	f4 60       	ori	r31, 0x04	; 4
 91c:	bf 2e       	mov	r11, r31
 91e:	09 c0       	rjmp	.+18     	; 0x932 <__stack+0x33>
 920:	34 fe       	sbrs	r3, 4
 922:	0a c0       	rjmp	.+20     	; 0x938 <__stack+0x39>
 924:	29 2f       	mov	r18, r25
 926:	26 60       	ori	r18, 0x06	; 6
 928:	b2 2e       	mov	r11, r18
 92a:	06 c0       	rjmp	.+12     	; 0x938 <__stack+0x39>
 92c:	28 e0       	ldi	r18, 0x08	; 8
 92e:	30 e0       	ldi	r19, 0x00	; 0
 930:	05 c0       	rjmp	.+10     	; 0x93c <__stack+0x3d>
 932:	20 e1       	ldi	r18, 0x10	; 16
 934:	30 e0       	ldi	r19, 0x00	; 0
 936:	02 c0       	rjmp	.+4      	; 0x93c <__stack+0x3d>
 938:	20 e1       	ldi	r18, 0x10	; 16
 93a:	32 e0       	ldi	r19, 0x02	; 2
 93c:	f8 01       	movw	r30, r16
 93e:	b7 fe       	sbrs	r11, 7
 940:	07 c0       	rjmp	.+14     	; 0x950 <__stack+0x51>
 942:	60 81       	ld	r22, Z
 944:	71 81       	ldd	r23, Z+1	; 0x01
 946:	82 81       	ldd	r24, Z+2	; 0x02
 948:	93 81       	ldd	r25, Z+3	; 0x03
 94a:	0c 5f       	subi	r16, 0xFC	; 252
 94c:	1f 4f       	sbci	r17, 0xFF	; 255
 94e:	06 c0       	rjmp	.+12     	; 0x95c <__stack+0x5d>
 950:	60 81       	ld	r22, Z
 952:	71 81       	ldd	r23, Z+1	; 0x01
 954:	80 e0       	ldi	r24, 0x00	; 0
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	0e 5f       	subi	r16, 0xFE	; 254
 95a:	1f 4f       	sbci	r17, 0xFF	; 255
 95c:	a3 01       	movw	r20, r6
 95e:	0e 94 93 05 	call	0xb26	; 0xb26 <__ultoa_invert>
 962:	88 2e       	mov	r8, r24
 964:	86 18       	sub	r8, r6
 966:	fb 2d       	mov	r31, r11
 968:	ff 77       	andi	r31, 0x7F	; 127
 96a:	3f 2e       	mov	r3, r31
 96c:	36 fe       	sbrs	r3, 6
 96e:	0d c0       	rjmp	.+26     	; 0x98a <__stack+0x8b>
 970:	23 2d       	mov	r18, r3
 972:	2e 7f       	andi	r18, 0xFE	; 254
 974:	a2 2e       	mov	r10, r18
 976:	89 14       	cp	r8, r9
 978:	58 f4       	brcc	.+22     	; 0x990 <__stack+0x91>
 97a:	34 fe       	sbrs	r3, 4
 97c:	0b c0       	rjmp	.+22     	; 0x994 <__stack+0x95>
 97e:	32 fc       	sbrc	r3, 2
 980:	09 c0       	rjmp	.+18     	; 0x994 <__stack+0x95>
 982:	83 2d       	mov	r24, r3
 984:	8e 7e       	andi	r24, 0xEE	; 238
 986:	a8 2e       	mov	r10, r24
 988:	05 c0       	rjmp	.+10     	; 0x994 <__stack+0x95>
 98a:	b8 2c       	mov	r11, r8
 98c:	a3 2c       	mov	r10, r3
 98e:	03 c0       	rjmp	.+6      	; 0x996 <__stack+0x97>
 990:	b8 2c       	mov	r11, r8
 992:	01 c0       	rjmp	.+2      	; 0x996 <__stack+0x97>
 994:	b9 2c       	mov	r11, r9
 996:	a4 fe       	sbrs	r10, 4
 998:	0f c0       	rjmp	.+30     	; 0x9b8 <__stack+0xb9>
 99a:	fe 01       	movw	r30, r28
 99c:	e8 0d       	add	r30, r8
 99e:	f1 1d       	adc	r31, r1
 9a0:	80 81       	ld	r24, Z
 9a2:	80 33       	cpi	r24, 0x30	; 48
 9a4:	21 f4       	brne	.+8      	; 0x9ae <__stack+0xaf>
 9a6:	9a 2d       	mov	r25, r10
 9a8:	99 7e       	andi	r25, 0xE9	; 233
 9aa:	a9 2e       	mov	r10, r25
 9ac:	09 c0       	rjmp	.+18     	; 0x9c0 <__stack+0xc1>
 9ae:	a2 fe       	sbrs	r10, 2
 9b0:	06 c0       	rjmp	.+12     	; 0x9be <__stack+0xbf>
 9b2:	b3 94       	inc	r11
 9b4:	b3 94       	inc	r11
 9b6:	04 c0       	rjmp	.+8      	; 0x9c0 <__stack+0xc1>
 9b8:	8a 2d       	mov	r24, r10
 9ba:	86 78       	andi	r24, 0x86	; 134
 9bc:	09 f0       	breq	.+2      	; 0x9c0 <__stack+0xc1>
 9be:	b3 94       	inc	r11
 9c0:	a3 fc       	sbrc	r10, 3
 9c2:	11 c0       	rjmp	.+34     	; 0x9e6 <__stack+0xe7>
 9c4:	a0 fe       	sbrs	r10, 0
 9c6:	06 c0       	rjmp	.+12     	; 0x9d4 <__stack+0xd5>
 9c8:	b2 14       	cp	r11, r2
 9ca:	88 f4       	brcc	.+34     	; 0x9ee <__stack+0xef>
 9cc:	28 0c       	add	r2, r8
 9ce:	92 2c       	mov	r9, r2
 9d0:	9b 18       	sub	r9, r11
 9d2:	0e c0       	rjmp	.+28     	; 0x9f0 <__stack+0xf1>
 9d4:	b2 14       	cp	r11, r2
 9d6:	60 f4       	brcc	.+24     	; 0x9f0 <__stack+0xf1>
 9d8:	b6 01       	movw	r22, r12
 9da:	80 e2       	ldi	r24, 0x20	; 32
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 9e2:	b3 94       	inc	r11
 9e4:	f7 cf       	rjmp	.-18     	; 0x9d4 <__stack+0xd5>
 9e6:	b2 14       	cp	r11, r2
 9e8:	18 f4       	brcc	.+6      	; 0x9f0 <__stack+0xf1>
 9ea:	2b 18       	sub	r2, r11
 9ec:	02 c0       	rjmp	.+4      	; 0x9f2 <__stack+0xf3>
 9ee:	98 2c       	mov	r9, r8
 9f0:	21 2c       	mov	r2, r1
 9f2:	a4 fe       	sbrs	r10, 4
 9f4:	10 c0       	rjmp	.+32     	; 0xa16 <__stack+0x117>
 9f6:	b6 01       	movw	r22, r12
 9f8:	80 e3       	ldi	r24, 0x30	; 48
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a00:	a2 fe       	sbrs	r10, 2
 a02:	17 c0       	rjmp	.+46     	; 0xa32 <__stack+0x133>
 a04:	a1 fc       	sbrc	r10, 1
 a06:	03 c0       	rjmp	.+6      	; 0xa0e <__stack+0x10f>
 a08:	88 e7       	ldi	r24, 0x78	; 120
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	02 c0       	rjmp	.+4      	; 0xa12 <__stack+0x113>
 a0e:	88 e5       	ldi	r24, 0x58	; 88
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	b6 01       	movw	r22, r12
 a14:	0c c0       	rjmp	.+24     	; 0xa2e <__stack+0x12f>
 a16:	8a 2d       	mov	r24, r10
 a18:	86 78       	andi	r24, 0x86	; 134
 a1a:	59 f0       	breq	.+22     	; 0xa32 <__stack+0x133>
 a1c:	a1 fe       	sbrs	r10, 1
 a1e:	02 c0       	rjmp	.+4      	; 0xa24 <__stack+0x125>
 a20:	8b e2       	ldi	r24, 0x2B	; 43
 a22:	01 c0       	rjmp	.+2      	; 0xa26 <__stack+0x127>
 a24:	80 e2       	ldi	r24, 0x20	; 32
 a26:	a7 fc       	sbrc	r10, 7
 a28:	8d e2       	ldi	r24, 0x2D	; 45
 a2a:	b6 01       	movw	r22, r12
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a32:	89 14       	cp	r8, r9
 a34:	38 f4       	brcc	.+14     	; 0xa44 <__stack+0x145>
 a36:	b6 01       	movw	r22, r12
 a38:	80 e3       	ldi	r24, 0x30	; 48
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a40:	9a 94       	dec	r9
 a42:	f7 cf       	rjmp	.-18     	; 0xa32 <__stack+0x133>
 a44:	8a 94       	dec	r8
 a46:	f3 01       	movw	r30, r6
 a48:	e8 0d       	add	r30, r8
 a4a:	f1 1d       	adc	r31, r1
 a4c:	80 81       	ld	r24, Z
 a4e:	b6 01       	movw	r22, r12
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a56:	81 10       	cpse	r8, r1
 a58:	f5 cf       	rjmp	.-22     	; 0xa44 <__stack+0x145>
 a5a:	22 20       	and	r2, r2
 a5c:	09 f4       	brne	.+2      	; 0xa60 <__stack+0x161>
 a5e:	42 ce       	rjmp	.-892    	; 0x6e4 <vfprintf+0x24>
 a60:	b6 01       	movw	r22, r12
 a62:	80 e2       	ldi	r24, 0x20	; 32
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	0e 94 57 05 	call	0xaae	; 0xaae <fputc>
 a6a:	2a 94       	dec	r2
 a6c:	f6 cf       	rjmp	.-20     	; 0xa5a <__stack+0x15b>
 a6e:	f6 01       	movw	r30, r12
 a70:	86 81       	ldd	r24, Z+6	; 0x06
 a72:	97 81       	ldd	r25, Z+7	; 0x07
 a74:	02 c0       	rjmp	.+4      	; 0xa7a <__stack+0x17b>
 a76:	8f ef       	ldi	r24, 0xFF	; 255
 a78:	9f ef       	ldi	r25, 0xFF	; 255
 a7a:	2b 96       	adiw	r28, 0x0b	; 11
 a7c:	e2 e1       	ldi	r30, 0x12	; 18
 a7e:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <__epilogue_restores__>

00000a82 <strnlen_P>:
 a82:	fc 01       	movw	r30, r24
 a84:	05 90       	lpm	r0, Z+
 a86:	61 50       	subi	r22, 0x01	; 1
 a88:	70 40       	sbci	r23, 0x00	; 0
 a8a:	01 10       	cpse	r0, r1
 a8c:	d8 f7       	brcc	.-10     	; 0xa84 <strnlen_P+0x2>
 a8e:	80 95       	com	r24
 a90:	90 95       	com	r25
 a92:	8e 0f       	add	r24, r30
 a94:	9f 1f       	adc	r25, r31
 a96:	08 95       	ret

00000a98 <strnlen>:
 a98:	fc 01       	movw	r30, r24
 a9a:	61 50       	subi	r22, 0x01	; 1
 a9c:	70 40       	sbci	r23, 0x00	; 0
 a9e:	01 90       	ld	r0, Z+
 aa0:	01 10       	cpse	r0, r1
 aa2:	d8 f7       	brcc	.-10     	; 0xa9a <strnlen+0x2>
 aa4:	80 95       	com	r24
 aa6:	90 95       	com	r25
 aa8:	8e 0f       	add	r24, r30
 aaa:	9f 1f       	adc	r25, r31
 aac:	08 95       	ret

00000aae <fputc>:
 aae:	0f 93       	push	r16
 ab0:	1f 93       	push	r17
 ab2:	cf 93       	push	r28
 ab4:	df 93       	push	r29
 ab6:	fb 01       	movw	r30, r22
 ab8:	23 81       	ldd	r18, Z+3	; 0x03
 aba:	21 fd       	sbrc	r18, 1
 abc:	03 c0       	rjmp	.+6      	; 0xac4 <fputc+0x16>
 abe:	8f ef       	ldi	r24, 0xFF	; 255
 ac0:	9f ef       	ldi	r25, 0xFF	; 255
 ac2:	2c c0       	rjmp	.+88     	; 0xb1c <fputc+0x6e>
 ac4:	22 ff       	sbrs	r18, 2
 ac6:	16 c0       	rjmp	.+44     	; 0xaf4 <fputc+0x46>
 ac8:	46 81       	ldd	r20, Z+6	; 0x06
 aca:	57 81       	ldd	r21, Z+7	; 0x07
 acc:	24 81       	ldd	r18, Z+4	; 0x04
 ace:	35 81       	ldd	r19, Z+5	; 0x05
 ad0:	42 17       	cp	r20, r18
 ad2:	53 07       	cpc	r21, r19
 ad4:	44 f4       	brge	.+16     	; 0xae6 <fputc+0x38>
 ad6:	a0 81       	ld	r26, Z
 ad8:	b1 81       	ldd	r27, Z+1	; 0x01
 ada:	9d 01       	movw	r18, r26
 adc:	2f 5f       	subi	r18, 0xFF	; 255
 ade:	3f 4f       	sbci	r19, 0xFF	; 255
 ae0:	31 83       	std	Z+1, r19	; 0x01
 ae2:	20 83       	st	Z, r18
 ae4:	8c 93       	st	X, r24
 ae6:	26 81       	ldd	r18, Z+6	; 0x06
 ae8:	37 81       	ldd	r19, Z+7	; 0x07
 aea:	2f 5f       	subi	r18, 0xFF	; 255
 aec:	3f 4f       	sbci	r19, 0xFF	; 255
 aee:	37 83       	std	Z+7, r19	; 0x07
 af0:	26 83       	std	Z+6, r18	; 0x06
 af2:	14 c0       	rjmp	.+40     	; 0xb1c <fputc+0x6e>
 af4:	8b 01       	movw	r16, r22
 af6:	ec 01       	movw	r28, r24
 af8:	fb 01       	movw	r30, r22
 afa:	00 84       	ldd	r0, Z+8	; 0x08
 afc:	f1 85       	ldd	r31, Z+9	; 0x09
 afe:	e0 2d       	mov	r30, r0
 b00:	09 95       	icall
 b02:	89 2b       	or	r24, r25
 b04:	e1 f6       	brne	.-72     	; 0xabe <fputc+0x10>
 b06:	d8 01       	movw	r26, r16
 b08:	16 96       	adiw	r26, 0x06	; 6
 b0a:	8d 91       	ld	r24, X+
 b0c:	9c 91       	ld	r25, X
 b0e:	17 97       	sbiw	r26, 0x07	; 7
 b10:	01 96       	adiw	r24, 0x01	; 1
 b12:	17 96       	adiw	r26, 0x07	; 7
 b14:	9c 93       	st	X, r25
 b16:	8e 93       	st	-X, r24
 b18:	16 97       	sbiw	r26, 0x06	; 6
 b1a:	ce 01       	movw	r24, r28
 b1c:	df 91       	pop	r29
 b1e:	cf 91       	pop	r28
 b20:	1f 91       	pop	r17
 b22:	0f 91       	pop	r16
 b24:	08 95       	ret

00000b26 <__ultoa_invert>:
 b26:	fa 01       	movw	r30, r20
 b28:	aa 27       	eor	r26, r26
 b2a:	28 30       	cpi	r18, 0x08	; 8
 b2c:	51 f1       	breq	.+84     	; 0xb82 <__ultoa_invert+0x5c>
 b2e:	20 31       	cpi	r18, 0x10	; 16
 b30:	81 f1       	breq	.+96     	; 0xb92 <__ultoa_invert+0x6c>
 b32:	e8 94       	clt
 b34:	6f 93       	push	r22
 b36:	6e 7f       	andi	r22, 0xFE	; 254
 b38:	6e 5f       	subi	r22, 0xFE	; 254
 b3a:	7f 4f       	sbci	r23, 0xFF	; 255
 b3c:	8f 4f       	sbci	r24, 0xFF	; 255
 b3e:	9f 4f       	sbci	r25, 0xFF	; 255
 b40:	af 4f       	sbci	r26, 0xFF	; 255
 b42:	b1 e0       	ldi	r27, 0x01	; 1
 b44:	3e d0       	rcall	.+124    	; 0xbc2 <__ultoa_invert+0x9c>
 b46:	b4 e0       	ldi	r27, 0x04	; 4
 b48:	3c d0       	rcall	.+120    	; 0xbc2 <__ultoa_invert+0x9c>
 b4a:	67 0f       	add	r22, r23
 b4c:	78 1f       	adc	r23, r24
 b4e:	89 1f       	adc	r24, r25
 b50:	9a 1f       	adc	r25, r26
 b52:	a1 1d       	adc	r26, r1
 b54:	68 0f       	add	r22, r24
 b56:	79 1f       	adc	r23, r25
 b58:	8a 1f       	adc	r24, r26
 b5a:	91 1d       	adc	r25, r1
 b5c:	a1 1d       	adc	r26, r1
 b5e:	6a 0f       	add	r22, r26
 b60:	71 1d       	adc	r23, r1
 b62:	81 1d       	adc	r24, r1
 b64:	91 1d       	adc	r25, r1
 b66:	a1 1d       	adc	r26, r1
 b68:	20 d0       	rcall	.+64     	; 0xbaa <__ultoa_invert+0x84>
 b6a:	09 f4       	brne	.+2      	; 0xb6e <__ultoa_invert+0x48>
 b6c:	68 94       	set
 b6e:	3f 91       	pop	r19
 b70:	2a e0       	ldi	r18, 0x0A	; 10
 b72:	26 9f       	mul	r18, r22
 b74:	11 24       	eor	r1, r1
 b76:	30 19       	sub	r19, r0
 b78:	30 5d       	subi	r19, 0xD0	; 208
 b7a:	31 93       	st	Z+, r19
 b7c:	de f6       	brtc	.-74     	; 0xb34 <__ultoa_invert+0xe>
 b7e:	cf 01       	movw	r24, r30
 b80:	08 95       	ret
 b82:	46 2f       	mov	r20, r22
 b84:	47 70       	andi	r20, 0x07	; 7
 b86:	40 5d       	subi	r20, 0xD0	; 208
 b88:	41 93       	st	Z+, r20
 b8a:	b3 e0       	ldi	r27, 0x03	; 3
 b8c:	0f d0       	rcall	.+30     	; 0xbac <__ultoa_invert+0x86>
 b8e:	c9 f7       	brne	.-14     	; 0xb82 <__ultoa_invert+0x5c>
 b90:	f6 cf       	rjmp	.-20     	; 0xb7e <__ultoa_invert+0x58>
 b92:	46 2f       	mov	r20, r22
 b94:	4f 70       	andi	r20, 0x0F	; 15
 b96:	40 5d       	subi	r20, 0xD0	; 208
 b98:	4a 33       	cpi	r20, 0x3A	; 58
 b9a:	18 f0       	brcs	.+6      	; 0xba2 <__ultoa_invert+0x7c>
 b9c:	49 5d       	subi	r20, 0xD9	; 217
 b9e:	31 fd       	sbrc	r19, 1
 ba0:	40 52       	subi	r20, 0x20	; 32
 ba2:	41 93       	st	Z+, r20
 ba4:	02 d0       	rcall	.+4      	; 0xbaa <__ultoa_invert+0x84>
 ba6:	a9 f7       	brne	.-22     	; 0xb92 <__ultoa_invert+0x6c>
 ba8:	ea cf       	rjmp	.-44     	; 0xb7e <__ultoa_invert+0x58>
 baa:	b4 e0       	ldi	r27, 0x04	; 4
 bac:	a6 95       	lsr	r26
 bae:	97 95       	ror	r25
 bb0:	87 95       	ror	r24
 bb2:	77 95       	ror	r23
 bb4:	67 95       	ror	r22
 bb6:	ba 95       	dec	r27
 bb8:	c9 f7       	brne	.-14     	; 0xbac <__ultoa_invert+0x86>
 bba:	00 97       	sbiw	r24, 0x00	; 0
 bbc:	61 05       	cpc	r22, r1
 bbe:	71 05       	cpc	r23, r1
 bc0:	08 95       	ret
 bc2:	9b 01       	movw	r18, r22
 bc4:	ac 01       	movw	r20, r24
 bc6:	0a 2e       	mov	r0, r26
 bc8:	06 94       	lsr	r0
 bca:	57 95       	ror	r21
 bcc:	47 95       	ror	r20
 bce:	37 95       	ror	r19
 bd0:	27 95       	ror	r18
 bd2:	ba 95       	dec	r27
 bd4:	c9 f7       	brne	.-14     	; 0xbc8 <__ultoa_invert+0xa2>
 bd6:	62 0f       	add	r22, r18
 bd8:	73 1f       	adc	r23, r19
 bda:	84 1f       	adc	r24, r20
 bdc:	95 1f       	adc	r25, r21
 bde:	a0 1d       	adc	r26, r0
 be0:	08 95       	ret

00000be2 <__prologue_saves__>:
 be2:	2f 92       	push	r2
 be4:	3f 92       	push	r3
 be6:	4f 92       	push	r4
 be8:	5f 92       	push	r5
 bea:	6f 92       	push	r6
 bec:	7f 92       	push	r7
 bee:	8f 92       	push	r8
 bf0:	9f 92       	push	r9
 bf2:	af 92       	push	r10
 bf4:	bf 92       	push	r11
 bf6:	cf 92       	push	r12
 bf8:	df 92       	push	r13
 bfa:	ef 92       	push	r14
 bfc:	ff 92       	push	r15
 bfe:	0f 93       	push	r16
 c00:	1f 93       	push	r17
 c02:	cf 93       	push	r28
 c04:	df 93       	push	r29
 c06:	cd b7       	in	r28, 0x3d	; 61
 c08:	de b7       	in	r29, 0x3e	; 62
 c0a:	ca 1b       	sub	r28, r26
 c0c:	db 0b       	sbc	r29, r27
 c0e:	0f b6       	in	r0, 0x3f	; 63
 c10:	f8 94       	cli
 c12:	de bf       	out	0x3e, r29	; 62
 c14:	0f be       	out	0x3f, r0	; 63
 c16:	cd bf       	out	0x3d, r28	; 61
 c18:	09 94       	ijmp

00000c1a <__epilogue_restores__>:
 c1a:	2a 88       	ldd	r2, Y+18	; 0x12
 c1c:	39 88       	ldd	r3, Y+17	; 0x11
 c1e:	48 88       	ldd	r4, Y+16	; 0x10
 c20:	5f 84       	ldd	r5, Y+15	; 0x0f
 c22:	6e 84       	ldd	r6, Y+14	; 0x0e
 c24:	7d 84       	ldd	r7, Y+13	; 0x0d
 c26:	8c 84       	ldd	r8, Y+12	; 0x0c
 c28:	9b 84       	ldd	r9, Y+11	; 0x0b
 c2a:	aa 84       	ldd	r10, Y+10	; 0x0a
 c2c:	b9 84       	ldd	r11, Y+9	; 0x09
 c2e:	c8 84       	ldd	r12, Y+8	; 0x08
 c30:	df 80       	ldd	r13, Y+7	; 0x07
 c32:	ee 80       	ldd	r14, Y+6	; 0x06
 c34:	fd 80       	ldd	r15, Y+5	; 0x05
 c36:	0c 81       	ldd	r16, Y+4	; 0x04
 c38:	1b 81       	ldd	r17, Y+3	; 0x03
 c3a:	aa 81       	ldd	r26, Y+2	; 0x02
 c3c:	b9 81       	ldd	r27, Y+1	; 0x01
 c3e:	ce 0f       	add	r28, r30
 c40:	d1 1d       	adc	r29, r1
 c42:	0f b6       	in	r0, 0x3f	; 63
 c44:	f8 94       	cli
 c46:	de bf       	out	0x3e, r29	; 62
 c48:	0f be       	out	0x3f, r0	; 63
 c4a:	cd bf       	out	0x3d, r28	; 61
 c4c:	ed 01       	movw	r28, r26
 c4e:	08 95       	ret

00000c50 <_exit>:
 c50:	f8 94       	cli

00000c52 <__stop_program>:
 c52:	ff cf       	rjmp	.-2      	; 0xc52 <__stop_program>
