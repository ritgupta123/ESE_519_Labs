
Lab3_2.3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00000e06  00000e9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800136  00800136  00000ed0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009e4  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b4  00000000  00000000  000019b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000042c  00000000  00000000  0000216c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  00002598  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000489  00000000  00000000  000026d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002b1  00000000  00000000  00002b59  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002e0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 ea 00 	jmp	0x1d4	; 0x1d4 <__vector_10>
  2c:	0c 94 a2 00 	jmp	0x144	; 0x144 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__vector_13>
  38:	0c 94 c9 00 	jmp	0x192	; 0x192 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e0       	ldi	r30, 0x06	; 6
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 33       	cpi	r26, 0x36	; 54
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e3       	ldi	r26, 0x36	; 54
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 34       	cpi	r26, 0x47	; 71
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 3e 01 	call	0x27c	; 0x27c <main>
  9e:	0c 94 01 07 	jmp	0xe02	; 0xe02 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	e1 e4       	ldi	r30, 0x41	; 65
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <timer1_init>:
volatile bool edges_detected = 0;
int num_overflows = 0;

void timer1_init()
{
	TCCR1B |= (1 << CS10);      // Enable the timer with no prescaling
 112:	e1 e8       	ldi	r30, 0x81	; 129
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	81 60       	ori	r24, 0x01	; 1
 11a:	80 83       	st	Z, r24
	
	TCNT1 = 0;	// Initialize the timer count value to 0
 11c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 120:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	TCCR1A |= (1 << COM1A0);	// COmpare output mode - Toggle OC1A on Compare Match
 124:	e0 e8       	ldi	r30, 0x80	; 128
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	80 64       	ori	r24, 0x40	; 64
 12c:	80 83       	st	Z, r24
	
	TIMSK1 = (1 << OCIE1A);		// Enable output compare A match interrupt enable
 12e:	82 e0       	ldi	r24, 0x02	; 2
 130:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	
	OCR1A = 80;					// Initialize the output compare value
 134:	80 e5       	ldi	r24, 0x50	; 80
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 13c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>

	sei();						// Enable global interrupts
 140:	78 94       	sei
 142:	08 95       	ret

00000144 <__vector_11>:
}

ISR(TIMER1_COMPA_vect)
{
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	8f 93       	push	r24
 150:	af 93       	push	r26
 152:	bf 93       	push	r27
 154:	ef 93       	push	r30
 156:	ff 93       	push	r31
	TCNT1 = 0;		// Initialize the timer count value to 0
 158:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 15c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>

	//TCCR1A &= ~(1 << COM1A0);	// Disable the output compare on timer1
	
	TIMSK1 &= ~(1 << OCIE1A);	// Disable the output compare match interrupt
 160:	ef e6       	ldi	r30, 0x6F	; 111
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	8d 7f       	andi	r24, 0xFD	; 253
 168:	80 83       	st	Z, r24
					
	TCCR1B |= (1 << ICES1);	// Enable the input capture trigger on rising edge
 16a:	a1 e8       	ldi	r26, 0x81	; 129
 16c:	b0 e0       	ldi	r27, 0x00	; 0
 16e:	8c 91       	ld	r24, X
 170:	80 64       	ori	r24, 0x40	; 64
 172:	8c 93       	st	X, r24
	 	
	TIMSK1 = (1 << ICIE1);	// Enable the input capture interrupt	
 174:	80 e2       	ldi	r24, 0x20	; 32
 176:	80 83       	st	Z, r24
	
	TIMSK1 |= (1 < TOIE1);	// Enable the overflow interrupt
 178:	80 81       	ld	r24, Z
 17a:	80 83       	st	Z, r24
	
	sei();						// Enable global interrupts
 17c:	78 94       	sei
}
 17e:	ff 91       	pop	r31
 180:	ef 91       	pop	r30
 182:	bf 91       	pop	r27
 184:	af 91       	pop	r26
 186:	8f 91       	pop	r24
 188:	0f 90       	pop	r0
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	0f 90       	pop	r0
 18e:	1f 90       	pop	r1
 190:	18 95       	reti

00000192 <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
 192:	1f 92       	push	r1
 194:	0f 92       	push	r0
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
	
}
 19c:	0f 90       	pop	r0
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	0f 90       	pop	r0
 1a2:	1f 90       	pop	r1
 1a4:	18 95       	reti

000001a6 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
 1a6:	1f 92       	push	r1
 1a8:	0f 92       	push	r0
 1aa:	0f b6       	in	r0, 0x3f	; 63
 1ac:	0f 92       	push	r0
 1ae:	11 24       	eor	r1, r1
 1b0:	8f 93       	push	r24
 1b2:	9f 93       	push	r25
	num_overflows++;
 1b4:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end>
 1b8:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <__data_end+0x1>
 1bc:	01 96       	adiw	r24, 0x01	; 1
 1be:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <__data_end+0x1>
 1c2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__data_end>
}
 1c6:	9f 91       	pop	r25
 1c8:	8f 91       	pop	r24
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <__vector_10>:

ISR(TIMER1_CAPT_vect)
{
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
 1de:	8f 93       	push	r24
 1e0:	9f 93       	push	r25
 1e2:	af 93       	push	r26
 1e4:	bf 93       	push	r27
 1e6:	ef 93       	push	r30
 1e8:	ff 93       	push	r31
	// Check if trigger is set on rising edge
	if (TCCR1B & (1 << ICES1))
 1ea:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1ee:	86 ff       	sbrs	r24, 6
 1f0:	14 c0       	rjmp	.+40     	; 0x21a <__vector_10+0x46>
	{
		rising_edge_time = ICR1;	// Get the time at which rising edge is received
 1f2:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1f6:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1fa:	a0 e0       	ldi	r26, 0x00	; 0
 1fc:	b0 e0       	ldi	r27, 0x00	; 0
 1fe:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <rising_edge_time>
 202:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <rising_edge_time+0x1>
 206:	a0 93 3b 01 	sts	0x013B, r26	; 0x80013b <rising_edge_time+0x2>
 20a:	b0 93 3c 01 	sts	0x013C, r27	; 0x80013c <rising_edge_time+0x3>
		TCCR1B &= ~(1 << ICES1);		// Enable the input capture trigger on falling edge
 20e:	e1 e8       	ldi	r30, 0x81	; 129
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	8f 7b       	andi	r24, 0xBF	; 191
 216:	80 83       	st	Z, r24
 218:	16 c0       	rjmp	.+44     	; 0x246 <__vector_10+0x72>
	}
	else
	{
		falling_edge_time = ICR1;	// Get the time at which falling edge is received
 21a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 21e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 222:	a0 e0       	ldi	r26, 0x00	; 0
 224:	b0 e0       	ldi	r27, 0x00	; 0
 226:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <falling_edge_time>
 22a:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <falling_edge_time+0x1>
 22e:	a0 93 3f 01 	sts	0x013F, r26	; 0x80013f <falling_edge_time+0x2>
 232:	b0 93 40 01 	sts	0x0140, r27	; 0x800140 <falling_edge_time+0x3>
		TCCR1B |= (1 << ICES1);		// Enable the input capture trigger on rising edge
 236:	e1 e8       	ldi	r30, 0x81	; 129
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	80 64       	ori	r24, 0x40	; 64
 23e:	80 83       	st	Z, r24
		edges_detected = 1;
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <edges_detected>
	}
}
 246:	ff 91       	pop	r31
 248:	ef 91       	pop	r30
 24a:	bf 91       	pop	r27
 24c:	af 91       	pop	r26
 24e:	9f 91       	pop	r25
 250:	8f 91       	pop	r24
 252:	0f 90       	pop	r0
 254:	0f be       	out	0x3f, r0	; 63
 256:	0f 90       	pop	r0
 258:	1f 90       	pop	r1
 25a:	18 95       	reti

0000025c <timer0_init>:

// Initialize the timer and interrupts
void timer0_init()
{
	TCNT0 = 0;	// Initialize the timer count value to 0
 25c:	16 bc       	out	0x26, r1	; 38
	
	TCCR0A |= (1 << COM0A0);	// Sets the toggle OC0A on Compare Match mode
 25e:	84 b5       	in	r24, 0x24	; 36
 260:	80 64       	ori	r24, 0x40	; 64
 262:	84 bd       	out	0x24, r24	; 36
	
	TCCR0A |= (1 << WGM01);		// Set the mode of operation of timer to CTC
 264:	84 b5       	in	r24, 0x24	; 36
 266:	82 60       	ori	r24, 0x02	; 2
 268:	84 bd       	out	0x24, r24	; 36
	
	OCR0A = (int)(MIN_BUZZER_CYCLE_COUNT / 2);					// Initialize the output compare value
 26a:	8b e3       	ldi	r24, 0x3B	; 59
 26c:	87 bd       	out	0x27, r24	; 39
	
	TIMSK0 = (1 << OCIE0A);		// Enable output compare A match interrupt enable
 26e:	82 e0       	ldi	r24, 0x02	; 2
 270:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	
	TCCR0B |= (1 << CS00) | (1 << CS01);      // Enable the timer with prescaler(64) specification
 274:	85 b5       	in	r24, 0x25	; 37
 276:	83 60       	ori	r24, 0x03	; 3
 278:	85 bd       	out	0x25, r24	; 37
 27a:	08 95       	ret

0000027c <main>:

	//sei();						// Enable global interrupts
}

int main(void)
{
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	c0 54       	subi	r28, 0x40	; 64
 286:	d1 09       	sbc	r29, r1
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
	uart_init();
 292:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>

	//printf("Initializing system\n");
		
	DDRB = 0x02;		// Set PB1 to be output pin and PB0 as input pin
 296:	82 e0       	ldi	r24, 0x02	; 2
 298:	84 b9       	out	0x04, r24	; 4
	DDRD = 0x40;		// For buzzer
 29a:	90 e4       	ldi	r25, 0x40	; 64
 29c:	9a b9       	out	0x0a, r25	; 10
	
    PORTB = (1 << 1);	// Set output pin to high	
 29e:	85 b9       	out	0x05, r24	; 5
	
	// Initialize the timer
	timer0_init();
 2a0:	0e 94 2e 01 	call	0x25c	; 0x25c <timer0_init>
	timer1_init();
 2a4:	0e 94 89 00 	call	0x112	; 0x112 <timer1_init>
			{
				num_clock_ticks = falling_edge_time - rising_edge_time;
			}
			else
			{
				num_clock_ticks = (NUM_TOTAL_TICKS - rising_edge_time) + (num_overflows * NUM_TOTAL_TICKS) + falling_edge_time;
 2a8:	22 24       	eor	r2, r2
 2aa:	2a 94       	dec	r2
 2ac:	32 2c       	mov	r3, r2
 2ae:	41 2c       	mov	r4, r1
 2b0:	51 2c       	mov	r5, r1
			}
			pulse_width = num_clock_ticks * CLOCK_TIME_PERIOD_US;
			
			// Print the width on terminal
			char result[64];
			snprintf(result, 64, "Pulse width is %ld\n", pulse_width);
 2b2:	0f 2e       	mov	r0, r31
 2b4:	fc e1       	ldi	r31, 0x1C	; 28
 2b6:	8f 2e       	mov	r8, r31
 2b8:	f1 e0       	ldi	r31, 0x01	; 1
 2ba:	9f 2e       	mov	r9, r31
 2bc:	f0 2d       	mov	r31, r0
 2be:	68 94       	set
 2c0:	77 24       	eor	r7, r7
 2c2:	76 f8       	bld	r7, 6
 2c4:	8e 01       	movw	r16, r28
 2c6:	0f 5f       	subi	r16, 0xFF	; 255
 2c8:	1f 4f       	sbci	r17, 0xFF	; 255
 2ca:	58 01       	movw	r10, r16
			int cycle_count = (0.092 * pulse_width) + 102.38;
			
			if (cycle_count > MAX_BUZZER_CYCLE_COUNT)
				cycle_count = MAX_BUZZER_CYCLE_COUNT;
			if (cycle_count < MIN_BUZZER_CYCLE_COUNT)
				cycle_count = MIN_BUZZER_CYCLE_COUNT;
 2cc:	61 2c       	mov	r6, r1
				
			OCR0A = (int)(cycle_count / 2);
			printf("%d \n", OCR0A);
 2ce:	0f 2e       	mov	r0, r31
 2d0:	f0 e3       	ldi	r31, 0x30	; 48
 2d2:	cf 2e       	mov	r12, r31
 2d4:	f1 e0       	ldi	r31, 0x01	; 1
 2d6:	df 2e       	mov	r13, r31
 2d8:	f0 2d       	mov	r31, r0
	timer1_init();
	
	while(1)
	{
		//printf("edges\n");
		if (edges_detected) 
 2da:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <edges_detected>
 2de:	88 23       	and	r24, r24
 2e0:	e1 f3       	breq	.-8      	; 0x2da <main+0x5e>
		{
			long int pulse_width, num_clock_ticks;
			
			// Get the pulse width
			if (num_overflows == 0)
 2e2:	a0 91 36 01 	lds	r26, 0x0136	; 0x800136 <__data_end>
 2e6:	b0 91 37 01 	lds	r27, 0x0137	; 0x800137 <__data_end+0x1>
 2ea:	10 97       	sbiw	r26, 0x00	; 0
 2ec:	b9 f4       	brne	.+46     	; 0x31c <main+0xa0>
			{
				num_clock_ticks = falling_edge_time - rising_edge_time;
 2ee:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <falling_edge_time>
 2f2:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <falling_edge_time+0x1>
 2f6:	a0 91 3f 01 	lds	r26, 0x013F	; 0x80013f <falling_edge_time+0x2>
 2fa:	b0 91 40 01 	lds	r27, 0x0140	; 0x800140 <falling_edge_time+0x3>
 2fe:	00 91 39 01 	lds	r16, 0x0139	; 0x800139 <rising_edge_time>
 302:	10 91 3a 01 	lds	r17, 0x013A	; 0x80013a <rising_edge_time+0x1>
 306:	20 91 3b 01 	lds	r18, 0x013B	; 0x80013b <rising_edge_time+0x2>
 30a:	30 91 3c 01 	lds	r19, 0x013C	; 0x80013c <rising_edge_time+0x3>
 30e:	bc 01       	movw	r22, r24
 310:	cd 01       	movw	r24, r26
 312:	60 1b       	sub	r22, r16
 314:	71 0b       	sbc	r23, r17
 316:	82 0b       	sbc	r24, r18
 318:	93 0b       	sbc	r25, r19
 31a:	28 c0       	rjmp	.+80     	; 0x36c <main+0xf0>
			}
			else
			{
				num_clock_ticks = (NUM_TOTAL_TICKS - rising_edge_time) + (num_overflows * NUM_TOTAL_TICKS) + falling_edge_time;
 31c:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <rising_edge_time>
 320:	50 91 3a 01 	lds	r21, 0x013A	; 0x80013a <rising_edge_time+0x1>
 324:	60 91 3b 01 	lds	r22, 0x013B	; 0x80013b <rising_edge_time+0x2>
 328:	70 91 3c 01 	lds	r23, 0x013C	; 0x80013c <rising_edge_time+0x3>
 32c:	82 01       	movw	r16, r4
 32e:	71 01       	movw	r14, r2
 330:	e4 1a       	sub	r14, r20
 332:	f5 0a       	sbc	r15, r21
 334:	06 0b       	sbc	r16, r22
 336:	17 0b       	sbc	r17, r23
 338:	2f ef       	ldi	r18, 0xFF	; 255
 33a:	3f ef       	ldi	r19, 0xFF	; 255
 33c:	0e 94 ad 03 	call	0x75a	; 0x75a <__usmulhisi3>
 340:	ab 01       	movw	r20, r22
 342:	bc 01       	movw	r22, r24
 344:	4e 0d       	add	r20, r14
 346:	5f 1d       	adc	r21, r15
 348:	60 1f       	adc	r22, r16
 34a:	71 1f       	adc	r23, r17
 34c:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <falling_edge_time>
 350:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <falling_edge_time+0x1>
 354:	a0 91 3f 01 	lds	r26, 0x013F	; 0x80013f <falling_edge_time+0x2>
 358:	b0 91 40 01 	lds	r27, 0x0140	; 0x800140 <falling_edge_time+0x3>
 35c:	8a 01       	movw	r16, r20
 35e:	9b 01       	movw	r18, r22
 360:	08 0f       	add	r16, r24
 362:	19 1f       	adc	r17, r25
 364:	2a 1f       	adc	r18, r26
 366:	3b 1f       	adc	r19, r27
 368:	c9 01       	movw	r24, r18
 36a:	b8 01       	movw	r22, r16
			}
			pulse_width = num_clock_ticks * CLOCK_TIME_PERIOD_US;
 36c:	0e 94 b4 02 	call	0x568	; 0x568 <__floatsisf>
 370:	20 e0       	ldi	r18, 0x00	; 0
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	40 e8       	ldi	r20, 0x80	; 128
 376:	5d e3       	ldi	r21, 0x3D	; 61
 378:	0e 94 40 03 	call	0x680	; 0x680 <__mulsf3>
 37c:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__fixsfsi>
 380:	e6 2e       	mov	r14, r22
 382:	f7 2e       	mov	r15, r23
 384:	08 2f       	mov	r16, r24
 386:	19 2f       	mov	r17, r25
			
			// Print the width on terminal
			char result[64];
			snprintf(result, 64, "Pulse width is %ld\n", pulse_width);
 388:	9f 93       	push	r25
 38a:	8f 93       	push	r24
 38c:	7f 93       	push	r23
 38e:	6f 93       	push	r22
 390:	9f 92       	push	r9
 392:	8f 92       	push	r8
 394:	1f 92       	push	r1
 396:	7f 92       	push	r7
 398:	bf 92       	push	r11
 39a:	af 92       	push	r10
 39c:	0e 94 09 04 	call	0x812	; 0x812 <snprintf>
			puts(result);
 3a0:	c5 01       	movw	r24, r10
 3a2:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <puts>
		
			// Update the OCR0A value depending on pulse width
			int cycle_count = (0.092 * pulse_width) + 102.38;
 3a6:	6e 2d       	mov	r22, r14
 3a8:	7f 2d       	mov	r23, r15
 3aa:	80 2f       	mov	r24, r16
 3ac:	91 2f       	mov	r25, r17
 3ae:	0e 94 b4 02 	call	0x568	; 0x568 <__floatsisf>
 3b2:	2f e7       	ldi	r18, 0x7F	; 127
 3b4:	3a e6       	ldi	r19, 0x6A	; 106
 3b6:	4c eb       	ldi	r20, 0xBC	; 188
 3b8:	5d e3       	ldi	r21, 0x3D	; 61
 3ba:	0e 94 40 03 	call	0x680	; 0x680 <__mulsf3>
 3be:	2f e8       	ldi	r18, 0x8F	; 143
 3c0:	32 ec       	ldi	r19, 0xC2	; 194
 3c2:	4c ec       	ldi	r20, 0xCC	; 204
 3c4:	52 e4       	ldi	r21, 0x42	; 66
 3c6:	0e 94 10 02 	call	0x420	; 0x420 <__addsf3>
 3ca:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__fixsfsi>
 3ce:	0f b6       	in	r0, 0x3f	; 63
 3d0:	f8 94       	cli
 3d2:	de bf       	out	0x3e, r29	; 62
 3d4:	0f be       	out	0x3f, r0	; 63
 3d6:	cd bf       	out	0x3d, r28	; 61
 3d8:	60 3f       	cpi	r22, 0xF0	; 240
 3da:	71 05       	cpc	r23, r1
 3dc:	14 f0       	brlt	.+4      	; 0x3e2 <main+0x166>
 3de:	6f ee       	ldi	r22, 0xEF	; 239
 3e0:	70 e0       	ldi	r23, 0x00	; 0
			
			if (cycle_count > MAX_BUZZER_CYCLE_COUNT)
				cycle_count = MAX_BUZZER_CYCLE_COUNT;
			if (cycle_count < MIN_BUZZER_CYCLE_COUNT)
 3e2:	67 37       	cpi	r22, 0x77	; 119
 3e4:	71 05       	cpc	r23, r1
 3e6:	14 f4       	brge	.+4      	; 0x3ec <main+0x170>
				cycle_count = MIN_BUZZER_CYCLE_COUNT;
 3e8:	67 e7       	ldi	r22, 0x77	; 119
 3ea:	76 2d       	mov	r23, r6
				
			OCR0A = (int)(cycle_count / 2);
 3ec:	cb 01       	movw	r24, r22
 3ee:	99 23       	and	r25, r25
 3f0:	0c f4       	brge	.+2      	; 0x3f4 <main+0x178>
 3f2:	01 96       	adiw	r24, 0x01	; 1
 3f4:	95 95       	asr	r25
 3f6:	87 95       	ror	r24
 3f8:	87 bd       	out	0x27, r24	; 39
			printf("%d \n", OCR0A);
 3fa:	87 b5       	in	r24, 0x27	; 39
 3fc:	1f 92       	push	r1
 3fe:	8f 93       	push	r24
 400:	df 92       	push	r13
 402:	cf 92       	push	r12
 404:	0e 94 c3 03 	call	0x786	; 0x786 <printf>
			
			num_overflows = 0;
 408:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <__data_end+0x1>
 40c:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <__data_end>
			edges_detected = 0;
 410:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <edges_detected>
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	0f 90       	pop	r0
 41c:	5e cf       	rjmp	.-324    	; 0x2da <main+0x5e>

0000041e <__subsf3>:
 41e:	50 58       	subi	r21, 0x80	; 128

00000420 <__addsf3>:
 420:	bb 27       	eor	r27, r27
 422:	aa 27       	eor	r26, r26
 424:	0e 94 27 02 	call	0x44e	; 0x44e <__addsf3x>
 428:	0c 94 06 03 	jmp	0x60c	; 0x60c <__fp_round>
 42c:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_pscA>
 430:	38 f0       	brcs	.+14     	; 0x440 <__addsf3+0x20>
 432:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_pscB>
 436:	20 f0       	brcs	.+8      	; 0x440 <__addsf3+0x20>
 438:	39 f4       	brne	.+14     	; 0x448 <__addsf3+0x28>
 43a:	9f 3f       	cpi	r25, 0xFF	; 255
 43c:	19 f4       	brne	.+6      	; 0x444 <__addsf3+0x24>
 43e:	26 f4       	brtc	.+8      	; 0x448 <__addsf3+0x28>
 440:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_nan>
 444:	0e f4       	brtc	.+2      	; 0x448 <__addsf3+0x28>
 446:	e0 95       	com	r30
 448:	e7 fb       	bst	r30, 7
 44a:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__fp_inf>

0000044e <__addsf3x>:
 44e:	e9 2f       	mov	r30, r25
 450:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_split3>
 454:	58 f3       	brcs	.-42     	; 0x42c <__addsf3+0xc>
 456:	ba 17       	cp	r27, r26
 458:	62 07       	cpc	r22, r18
 45a:	73 07       	cpc	r23, r19
 45c:	84 07       	cpc	r24, r20
 45e:	95 07       	cpc	r25, r21
 460:	20 f0       	brcs	.+8      	; 0x46a <__addsf3x+0x1c>
 462:	79 f4       	brne	.+30     	; 0x482 <__addsf3x+0x34>
 464:	a6 f5       	brtc	.+104    	; 0x4ce <__addsf3x+0x80>
 466:	0c 94 39 03 	jmp	0x672	; 0x672 <__fp_zero>
 46a:	0e f4       	brtc	.+2      	; 0x46e <__addsf3x+0x20>
 46c:	e0 95       	com	r30
 46e:	0b 2e       	mov	r0, r27
 470:	ba 2f       	mov	r27, r26
 472:	a0 2d       	mov	r26, r0
 474:	0b 01       	movw	r0, r22
 476:	b9 01       	movw	r22, r18
 478:	90 01       	movw	r18, r0
 47a:	0c 01       	movw	r0, r24
 47c:	ca 01       	movw	r24, r20
 47e:	a0 01       	movw	r20, r0
 480:	11 24       	eor	r1, r1
 482:	ff 27       	eor	r31, r31
 484:	59 1b       	sub	r21, r25
 486:	99 f0       	breq	.+38     	; 0x4ae <__addsf3x+0x60>
 488:	59 3f       	cpi	r21, 0xF9	; 249
 48a:	50 f4       	brcc	.+20     	; 0x4a0 <__addsf3x+0x52>
 48c:	50 3e       	cpi	r21, 0xE0	; 224
 48e:	68 f1       	brcs	.+90     	; 0x4ea <__addsf3x+0x9c>
 490:	1a 16       	cp	r1, r26
 492:	f0 40       	sbci	r31, 0x00	; 0
 494:	a2 2f       	mov	r26, r18
 496:	23 2f       	mov	r18, r19
 498:	34 2f       	mov	r19, r20
 49a:	44 27       	eor	r20, r20
 49c:	58 5f       	subi	r21, 0xF8	; 248
 49e:	f3 cf       	rjmp	.-26     	; 0x486 <__addsf3x+0x38>
 4a0:	46 95       	lsr	r20
 4a2:	37 95       	ror	r19
 4a4:	27 95       	ror	r18
 4a6:	a7 95       	ror	r26
 4a8:	f0 40       	sbci	r31, 0x00	; 0
 4aa:	53 95       	inc	r21
 4ac:	c9 f7       	brne	.-14     	; 0x4a0 <__addsf3x+0x52>
 4ae:	7e f4       	brtc	.+30     	; 0x4ce <__addsf3x+0x80>
 4b0:	1f 16       	cp	r1, r31
 4b2:	ba 0b       	sbc	r27, r26
 4b4:	62 0b       	sbc	r22, r18
 4b6:	73 0b       	sbc	r23, r19
 4b8:	84 0b       	sbc	r24, r20
 4ba:	ba f0       	brmi	.+46     	; 0x4ea <__addsf3x+0x9c>
 4bc:	91 50       	subi	r25, 0x01	; 1
 4be:	a1 f0       	breq	.+40     	; 0x4e8 <__addsf3x+0x9a>
 4c0:	ff 0f       	add	r31, r31
 4c2:	bb 1f       	adc	r27, r27
 4c4:	66 1f       	adc	r22, r22
 4c6:	77 1f       	adc	r23, r23
 4c8:	88 1f       	adc	r24, r24
 4ca:	c2 f7       	brpl	.-16     	; 0x4bc <__addsf3x+0x6e>
 4cc:	0e c0       	rjmp	.+28     	; 0x4ea <__addsf3x+0x9c>
 4ce:	ba 0f       	add	r27, r26
 4d0:	62 1f       	adc	r22, r18
 4d2:	73 1f       	adc	r23, r19
 4d4:	84 1f       	adc	r24, r20
 4d6:	48 f4       	brcc	.+18     	; 0x4ea <__addsf3x+0x9c>
 4d8:	87 95       	ror	r24
 4da:	77 95       	ror	r23
 4dc:	67 95       	ror	r22
 4de:	b7 95       	ror	r27
 4e0:	f7 95       	ror	r31
 4e2:	9e 3f       	cpi	r25, 0xFE	; 254
 4e4:	08 f0       	brcs	.+2      	; 0x4e8 <__addsf3x+0x9a>
 4e6:	b0 cf       	rjmp	.-160    	; 0x448 <__addsf3+0x28>
 4e8:	93 95       	inc	r25
 4ea:	88 0f       	add	r24, r24
 4ec:	08 f0       	brcs	.+2      	; 0x4f0 <__addsf3x+0xa2>
 4ee:	99 27       	eor	r25, r25
 4f0:	ee 0f       	add	r30, r30
 4f2:	97 95       	ror	r25
 4f4:	87 95       	ror	r24
 4f6:	08 95       	ret

000004f8 <__fixsfsi>:
 4f8:	0e 94 83 02 	call	0x506	; 0x506 <__fixunssfsi>
 4fc:	68 94       	set
 4fe:	b1 11       	cpse	r27, r1
 500:	0c 94 3a 03 	jmp	0x674	; 0x674 <__fp_szero>
 504:	08 95       	ret

00000506 <__fixunssfsi>:
 506:	0e 94 1f 03 	call	0x63e	; 0x63e <__fp_splitA>
 50a:	88 f0       	brcs	.+34     	; 0x52e <__fixunssfsi+0x28>
 50c:	9f 57       	subi	r25, 0x7F	; 127
 50e:	98 f0       	brcs	.+38     	; 0x536 <__fixunssfsi+0x30>
 510:	b9 2f       	mov	r27, r25
 512:	99 27       	eor	r25, r25
 514:	b7 51       	subi	r27, 0x17	; 23
 516:	b0 f0       	brcs	.+44     	; 0x544 <__fixunssfsi+0x3e>
 518:	e1 f0       	breq	.+56     	; 0x552 <__fixunssfsi+0x4c>
 51a:	66 0f       	add	r22, r22
 51c:	77 1f       	adc	r23, r23
 51e:	88 1f       	adc	r24, r24
 520:	99 1f       	adc	r25, r25
 522:	1a f0       	brmi	.+6      	; 0x52a <__fixunssfsi+0x24>
 524:	ba 95       	dec	r27
 526:	c9 f7       	brne	.-14     	; 0x51a <__fixunssfsi+0x14>
 528:	14 c0       	rjmp	.+40     	; 0x552 <__fixunssfsi+0x4c>
 52a:	b1 30       	cpi	r27, 0x01	; 1
 52c:	91 f0       	breq	.+36     	; 0x552 <__fixunssfsi+0x4c>
 52e:	0e 94 39 03 	call	0x672	; 0x672 <__fp_zero>
 532:	b1 e0       	ldi	r27, 0x01	; 1
 534:	08 95       	ret
 536:	0c 94 39 03 	jmp	0x672	; 0x672 <__fp_zero>
 53a:	67 2f       	mov	r22, r23
 53c:	78 2f       	mov	r23, r24
 53e:	88 27       	eor	r24, r24
 540:	b8 5f       	subi	r27, 0xF8	; 248
 542:	39 f0       	breq	.+14     	; 0x552 <__fixunssfsi+0x4c>
 544:	b9 3f       	cpi	r27, 0xF9	; 249
 546:	cc f3       	brlt	.-14     	; 0x53a <__fixunssfsi+0x34>
 548:	86 95       	lsr	r24
 54a:	77 95       	ror	r23
 54c:	67 95       	ror	r22
 54e:	b3 95       	inc	r27
 550:	d9 f7       	brne	.-10     	; 0x548 <__fixunssfsi+0x42>
 552:	3e f4       	brtc	.+14     	; 0x562 <__fixunssfsi+0x5c>
 554:	90 95       	com	r25
 556:	80 95       	com	r24
 558:	70 95       	com	r23
 55a:	61 95       	neg	r22
 55c:	7f 4f       	sbci	r23, 0xFF	; 255
 55e:	8f 4f       	sbci	r24, 0xFF	; 255
 560:	9f 4f       	sbci	r25, 0xFF	; 255
 562:	08 95       	ret

00000564 <__floatunsisf>:
 564:	e8 94       	clt
 566:	09 c0       	rjmp	.+18     	; 0x57a <__floatsisf+0x12>

00000568 <__floatsisf>:
 568:	97 fb       	bst	r25, 7
 56a:	3e f4       	brtc	.+14     	; 0x57a <__floatsisf+0x12>
 56c:	90 95       	com	r25
 56e:	80 95       	com	r24
 570:	70 95       	com	r23
 572:	61 95       	neg	r22
 574:	7f 4f       	sbci	r23, 0xFF	; 255
 576:	8f 4f       	sbci	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	99 23       	and	r25, r25
 57c:	a9 f0       	breq	.+42     	; 0x5a8 <__floatsisf+0x40>
 57e:	f9 2f       	mov	r31, r25
 580:	96 e9       	ldi	r25, 0x96	; 150
 582:	bb 27       	eor	r27, r27
 584:	93 95       	inc	r25
 586:	f6 95       	lsr	r31
 588:	87 95       	ror	r24
 58a:	77 95       	ror	r23
 58c:	67 95       	ror	r22
 58e:	b7 95       	ror	r27
 590:	f1 11       	cpse	r31, r1
 592:	f8 cf       	rjmp	.-16     	; 0x584 <__floatsisf+0x1c>
 594:	fa f4       	brpl	.+62     	; 0x5d4 <__floatsisf+0x6c>
 596:	bb 0f       	add	r27, r27
 598:	11 f4       	brne	.+4      	; 0x59e <__floatsisf+0x36>
 59a:	60 ff       	sbrs	r22, 0
 59c:	1b c0       	rjmp	.+54     	; 0x5d4 <__floatsisf+0x6c>
 59e:	6f 5f       	subi	r22, 0xFF	; 255
 5a0:	7f 4f       	sbci	r23, 0xFF	; 255
 5a2:	8f 4f       	sbci	r24, 0xFF	; 255
 5a4:	9f 4f       	sbci	r25, 0xFF	; 255
 5a6:	16 c0       	rjmp	.+44     	; 0x5d4 <__floatsisf+0x6c>
 5a8:	88 23       	and	r24, r24
 5aa:	11 f0       	breq	.+4      	; 0x5b0 <__floatsisf+0x48>
 5ac:	96 e9       	ldi	r25, 0x96	; 150
 5ae:	11 c0       	rjmp	.+34     	; 0x5d2 <__floatsisf+0x6a>
 5b0:	77 23       	and	r23, r23
 5b2:	21 f0       	breq	.+8      	; 0x5bc <__floatsisf+0x54>
 5b4:	9e e8       	ldi	r25, 0x8E	; 142
 5b6:	87 2f       	mov	r24, r23
 5b8:	76 2f       	mov	r23, r22
 5ba:	05 c0       	rjmp	.+10     	; 0x5c6 <__floatsisf+0x5e>
 5bc:	66 23       	and	r22, r22
 5be:	71 f0       	breq	.+28     	; 0x5dc <__floatsisf+0x74>
 5c0:	96 e8       	ldi	r25, 0x86	; 134
 5c2:	86 2f       	mov	r24, r22
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	2a f0       	brmi	.+10     	; 0x5d4 <__floatsisf+0x6c>
 5ca:	9a 95       	dec	r25
 5cc:	66 0f       	add	r22, r22
 5ce:	77 1f       	adc	r23, r23
 5d0:	88 1f       	adc	r24, r24
 5d2:	da f7       	brpl	.-10     	; 0x5ca <__floatsisf+0x62>
 5d4:	88 0f       	add	r24, r24
 5d6:	96 95       	lsr	r25
 5d8:	87 95       	ror	r24
 5da:	97 f9       	bld	r25, 7
 5dc:	08 95       	ret

000005de <__fp_inf>:
 5de:	97 f9       	bld	r25, 7
 5e0:	9f 67       	ori	r25, 0x7F	; 127
 5e2:	80 e8       	ldi	r24, 0x80	; 128
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	08 95       	ret

000005ea <__fp_nan>:
 5ea:	9f ef       	ldi	r25, 0xFF	; 255
 5ec:	80 ec       	ldi	r24, 0xC0	; 192
 5ee:	08 95       	ret

000005f0 <__fp_pscA>:
 5f0:	00 24       	eor	r0, r0
 5f2:	0a 94       	dec	r0
 5f4:	16 16       	cp	r1, r22
 5f6:	17 06       	cpc	r1, r23
 5f8:	18 06       	cpc	r1, r24
 5fa:	09 06       	cpc	r0, r25
 5fc:	08 95       	ret

000005fe <__fp_pscB>:
 5fe:	00 24       	eor	r0, r0
 600:	0a 94       	dec	r0
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	14 06       	cpc	r1, r20
 608:	05 06       	cpc	r0, r21
 60a:	08 95       	ret

0000060c <__fp_round>:
 60c:	09 2e       	mov	r0, r25
 60e:	03 94       	inc	r0
 610:	00 0c       	add	r0, r0
 612:	11 f4       	brne	.+4      	; 0x618 <__fp_round+0xc>
 614:	88 23       	and	r24, r24
 616:	52 f0       	brmi	.+20     	; 0x62c <__fp_round+0x20>
 618:	bb 0f       	add	r27, r27
 61a:	40 f4       	brcc	.+16     	; 0x62c <__fp_round+0x20>
 61c:	bf 2b       	or	r27, r31
 61e:	11 f4       	brne	.+4      	; 0x624 <__fp_round+0x18>
 620:	60 ff       	sbrs	r22, 0
 622:	04 c0       	rjmp	.+8      	; 0x62c <__fp_round+0x20>
 624:	6f 5f       	subi	r22, 0xFF	; 255
 626:	7f 4f       	sbci	r23, 0xFF	; 255
 628:	8f 4f       	sbci	r24, 0xFF	; 255
 62a:	9f 4f       	sbci	r25, 0xFF	; 255
 62c:	08 95       	ret

0000062e <__fp_split3>:
 62e:	57 fd       	sbrc	r21, 7
 630:	90 58       	subi	r25, 0x80	; 128
 632:	44 0f       	add	r20, r20
 634:	55 1f       	adc	r21, r21
 636:	59 f0       	breq	.+22     	; 0x64e <__fp_splitA+0x10>
 638:	5f 3f       	cpi	r21, 0xFF	; 255
 63a:	71 f0       	breq	.+28     	; 0x658 <__fp_splitA+0x1a>
 63c:	47 95       	ror	r20

0000063e <__fp_splitA>:
 63e:	88 0f       	add	r24, r24
 640:	97 fb       	bst	r25, 7
 642:	99 1f       	adc	r25, r25
 644:	61 f0       	breq	.+24     	; 0x65e <__fp_splitA+0x20>
 646:	9f 3f       	cpi	r25, 0xFF	; 255
 648:	79 f0       	breq	.+30     	; 0x668 <__fp_splitA+0x2a>
 64a:	87 95       	ror	r24
 64c:	08 95       	ret
 64e:	12 16       	cp	r1, r18
 650:	13 06       	cpc	r1, r19
 652:	14 06       	cpc	r1, r20
 654:	55 1f       	adc	r21, r21
 656:	f2 cf       	rjmp	.-28     	; 0x63c <__fp_split3+0xe>
 658:	46 95       	lsr	r20
 65a:	f1 df       	rcall	.-30     	; 0x63e <__fp_splitA>
 65c:	08 c0       	rjmp	.+16     	; 0x66e <__fp_splitA+0x30>
 65e:	16 16       	cp	r1, r22
 660:	17 06       	cpc	r1, r23
 662:	18 06       	cpc	r1, r24
 664:	99 1f       	adc	r25, r25
 666:	f1 cf       	rjmp	.-30     	; 0x64a <__fp_splitA+0xc>
 668:	86 95       	lsr	r24
 66a:	71 05       	cpc	r23, r1
 66c:	61 05       	cpc	r22, r1
 66e:	08 94       	sec
 670:	08 95       	ret

00000672 <__fp_zero>:
 672:	e8 94       	clt

00000674 <__fp_szero>:
 674:	bb 27       	eor	r27, r27
 676:	66 27       	eor	r22, r22
 678:	77 27       	eor	r23, r23
 67a:	cb 01       	movw	r24, r22
 67c:	97 f9       	bld	r25, 7
 67e:	08 95       	ret

00000680 <__mulsf3>:
 680:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__mulsf3x>
 684:	0c 94 06 03 	jmp	0x60c	; 0x60c <__fp_round>
 688:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_pscA>
 68c:	38 f0       	brcs	.+14     	; 0x69c <__mulsf3+0x1c>
 68e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_pscB>
 692:	20 f0       	brcs	.+8      	; 0x69c <__mulsf3+0x1c>
 694:	95 23       	and	r25, r21
 696:	11 f0       	breq	.+4      	; 0x69c <__mulsf3+0x1c>
 698:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__fp_inf>
 69c:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_nan>
 6a0:	11 24       	eor	r1, r1
 6a2:	0c 94 3a 03 	jmp	0x674	; 0x674 <__fp_szero>

000006a6 <__mulsf3x>:
 6a6:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_split3>
 6aa:	70 f3       	brcs	.-36     	; 0x688 <__mulsf3+0x8>

000006ac <__mulsf3_pse>:
 6ac:	95 9f       	mul	r25, r21
 6ae:	c1 f3       	breq	.-16     	; 0x6a0 <__mulsf3+0x20>
 6b0:	95 0f       	add	r25, r21
 6b2:	50 e0       	ldi	r21, 0x00	; 0
 6b4:	55 1f       	adc	r21, r21
 6b6:	62 9f       	mul	r22, r18
 6b8:	f0 01       	movw	r30, r0
 6ba:	72 9f       	mul	r23, r18
 6bc:	bb 27       	eor	r27, r27
 6be:	f0 0d       	add	r31, r0
 6c0:	b1 1d       	adc	r27, r1
 6c2:	63 9f       	mul	r22, r19
 6c4:	aa 27       	eor	r26, r26
 6c6:	f0 0d       	add	r31, r0
 6c8:	b1 1d       	adc	r27, r1
 6ca:	aa 1f       	adc	r26, r26
 6cc:	64 9f       	mul	r22, r20
 6ce:	66 27       	eor	r22, r22
 6d0:	b0 0d       	add	r27, r0
 6d2:	a1 1d       	adc	r26, r1
 6d4:	66 1f       	adc	r22, r22
 6d6:	82 9f       	mul	r24, r18
 6d8:	22 27       	eor	r18, r18
 6da:	b0 0d       	add	r27, r0
 6dc:	a1 1d       	adc	r26, r1
 6de:	62 1f       	adc	r22, r18
 6e0:	73 9f       	mul	r23, r19
 6e2:	b0 0d       	add	r27, r0
 6e4:	a1 1d       	adc	r26, r1
 6e6:	62 1f       	adc	r22, r18
 6e8:	83 9f       	mul	r24, r19
 6ea:	a0 0d       	add	r26, r0
 6ec:	61 1d       	adc	r22, r1
 6ee:	22 1f       	adc	r18, r18
 6f0:	74 9f       	mul	r23, r20
 6f2:	33 27       	eor	r19, r19
 6f4:	a0 0d       	add	r26, r0
 6f6:	61 1d       	adc	r22, r1
 6f8:	23 1f       	adc	r18, r19
 6fa:	84 9f       	mul	r24, r20
 6fc:	60 0d       	add	r22, r0
 6fe:	21 1d       	adc	r18, r1
 700:	82 2f       	mov	r24, r18
 702:	76 2f       	mov	r23, r22
 704:	6a 2f       	mov	r22, r26
 706:	11 24       	eor	r1, r1
 708:	9f 57       	subi	r25, 0x7F	; 127
 70a:	50 40       	sbci	r21, 0x00	; 0
 70c:	9a f0       	brmi	.+38     	; 0x734 <__mulsf3_pse+0x88>
 70e:	f1 f0       	breq	.+60     	; 0x74c <__mulsf3_pse+0xa0>
 710:	88 23       	and	r24, r24
 712:	4a f0       	brmi	.+18     	; 0x726 <__mulsf3_pse+0x7a>
 714:	ee 0f       	add	r30, r30
 716:	ff 1f       	adc	r31, r31
 718:	bb 1f       	adc	r27, r27
 71a:	66 1f       	adc	r22, r22
 71c:	77 1f       	adc	r23, r23
 71e:	88 1f       	adc	r24, r24
 720:	91 50       	subi	r25, 0x01	; 1
 722:	50 40       	sbci	r21, 0x00	; 0
 724:	a9 f7       	brne	.-22     	; 0x710 <__mulsf3_pse+0x64>
 726:	9e 3f       	cpi	r25, 0xFE	; 254
 728:	51 05       	cpc	r21, r1
 72a:	80 f0       	brcs	.+32     	; 0x74c <__mulsf3_pse+0xa0>
 72c:	0c 94 ef 02 	jmp	0x5de	; 0x5de <__fp_inf>
 730:	0c 94 3a 03 	jmp	0x674	; 0x674 <__fp_szero>
 734:	5f 3f       	cpi	r21, 0xFF	; 255
 736:	e4 f3       	brlt	.-8      	; 0x730 <__mulsf3_pse+0x84>
 738:	98 3e       	cpi	r25, 0xE8	; 232
 73a:	d4 f3       	brlt	.-12     	; 0x730 <__mulsf3_pse+0x84>
 73c:	86 95       	lsr	r24
 73e:	77 95       	ror	r23
 740:	67 95       	ror	r22
 742:	b7 95       	ror	r27
 744:	f7 95       	ror	r31
 746:	e7 95       	ror	r30
 748:	9f 5f       	subi	r25, 0xFF	; 255
 74a:	c1 f7       	brne	.-16     	; 0x73c <__mulsf3_pse+0x90>
 74c:	fe 2b       	or	r31, r30
 74e:	88 0f       	add	r24, r24
 750:	91 1d       	adc	r25, r1
 752:	96 95       	lsr	r25
 754:	87 95       	ror	r24
 756:	97 f9       	bld	r25, 7
 758:	08 95       	ret

0000075a <__usmulhisi3>:
 75a:	0e 94 b4 03 	call	0x768	; 0x768 <__umulhisi3>

0000075e <__usmulhisi3_tail>:
 75e:	b7 ff       	sbrs	r27, 7
 760:	08 95       	ret
 762:	82 1b       	sub	r24, r18
 764:	93 0b       	sbc	r25, r19
 766:	08 95       	ret

00000768 <__umulhisi3>:
 768:	a2 9f       	mul	r26, r18
 76a:	b0 01       	movw	r22, r0
 76c:	b3 9f       	mul	r27, r19
 76e:	c0 01       	movw	r24, r0
 770:	a3 9f       	mul	r26, r19
 772:	70 0d       	add	r23, r0
 774:	81 1d       	adc	r24, r1
 776:	11 24       	eor	r1, r1
 778:	91 1d       	adc	r25, r1
 77a:	b2 9f       	mul	r27, r18
 77c:	70 0d       	add	r23, r0
 77e:	81 1d       	adc	r24, r1
 780:	11 24       	eor	r1, r1
 782:	91 1d       	adc	r25, r1
 784:	08 95       	ret

00000786 <printf>:
 786:	a0 e0       	ldi	r26, 0x00	; 0
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	e9 ec       	ldi	r30, 0xC9	; 201
 78c:	f3 e0       	ldi	r31, 0x03	; 3
 78e:	0c 94 da 06 	jmp	0xdb4	; 0xdb4 <__prologue_saves__+0x20>
 792:	ae 01       	movw	r20, r28
 794:	4b 5f       	subi	r20, 0xFB	; 251
 796:	5f 4f       	sbci	r21, 0xFF	; 255
 798:	fa 01       	movw	r30, r20
 79a:	61 91       	ld	r22, Z+
 79c:	71 91       	ld	r23, Z+
 79e:	af 01       	movw	r20, r30
 7a0:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <__iob+0x2>
 7a4:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <__iob+0x3>
 7a8:	0e 94 39 04 	call	0x872	; 0x872 <vfprintf>
 7ac:	e2 e0       	ldi	r30, 0x02	; 2
 7ae:	0c 94 f6 06 	jmp	0xdec	; 0xdec <__epilogue_restores__+0x20>

000007b2 <puts>:
 7b2:	0f 93       	push	r16
 7b4:	1f 93       	push	r17
 7b6:	cf 93       	push	r28
 7b8:	df 93       	push	r29
 7ba:	e0 91 43 01 	lds	r30, 0x0143	; 0x800143 <__iob+0x2>
 7be:	f0 91 44 01 	lds	r31, 0x0144	; 0x800144 <__iob+0x3>
 7c2:	23 81       	ldd	r18, Z+3	; 0x03
 7c4:	21 ff       	sbrs	r18, 1
 7c6:	1b c0       	rjmp	.+54     	; 0x7fe <puts+0x4c>
 7c8:	8c 01       	movw	r16, r24
 7ca:	d0 e0       	ldi	r29, 0x00	; 0
 7cc:	c0 e0       	ldi	r28, 0x00	; 0
 7ce:	f8 01       	movw	r30, r16
 7d0:	81 91       	ld	r24, Z+
 7d2:	8f 01       	movw	r16, r30
 7d4:	60 91 43 01 	lds	r22, 0x0143	; 0x800143 <__iob+0x2>
 7d8:	70 91 44 01 	lds	r23, 0x0144	; 0x800144 <__iob+0x3>
 7dc:	db 01       	movw	r26, r22
 7de:	18 96       	adiw	r26, 0x08	; 8
 7e0:	ed 91       	ld	r30, X+
 7e2:	fc 91       	ld	r31, X
 7e4:	19 97       	sbiw	r26, 0x09	; 9
 7e6:	88 23       	and	r24, r24
 7e8:	31 f0       	breq	.+12     	; 0x7f6 <puts+0x44>
 7ea:	09 95       	icall
 7ec:	89 2b       	or	r24, r25
 7ee:	79 f3       	breq	.-34     	; 0x7ce <puts+0x1c>
 7f0:	df ef       	ldi	r29, 0xFF	; 255
 7f2:	cf ef       	ldi	r28, 0xFF	; 255
 7f4:	ec cf       	rjmp	.-40     	; 0x7ce <puts+0x1c>
 7f6:	8a e0       	ldi	r24, 0x0A	; 10
 7f8:	09 95       	icall
 7fa:	89 2b       	or	r24, r25
 7fc:	19 f0       	breq	.+6      	; 0x804 <puts+0x52>
 7fe:	8f ef       	ldi	r24, 0xFF	; 255
 800:	9f ef       	ldi	r25, 0xFF	; 255
 802:	02 c0       	rjmp	.+4      	; 0x808 <puts+0x56>
 804:	8d 2f       	mov	r24, r29
 806:	9c 2f       	mov	r25, r28
 808:	df 91       	pop	r29
 80a:	cf 91       	pop	r28
 80c:	1f 91       	pop	r17
 80e:	0f 91       	pop	r16
 810:	08 95       	ret

00000812 <snprintf>:
 812:	ae e0       	ldi	r26, 0x0E	; 14
 814:	b0 e0       	ldi	r27, 0x00	; 0
 816:	ef e0       	ldi	r30, 0x0F	; 15
 818:	f4 e0       	ldi	r31, 0x04	; 4
 81a:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <__prologue_saves__+0x1c>
 81e:	0d 89       	ldd	r16, Y+21	; 0x15
 820:	1e 89       	ldd	r17, Y+22	; 0x16
 822:	8f 89       	ldd	r24, Y+23	; 0x17
 824:	98 8d       	ldd	r25, Y+24	; 0x18
 826:	26 e0       	ldi	r18, 0x06	; 6
 828:	2c 83       	std	Y+4, r18	; 0x04
 82a:	1a 83       	std	Y+2, r17	; 0x02
 82c:	09 83       	std	Y+1, r16	; 0x01
 82e:	97 ff       	sbrs	r25, 7
 830:	02 c0       	rjmp	.+4      	; 0x836 <snprintf+0x24>
 832:	80 e0       	ldi	r24, 0x00	; 0
 834:	90 e8       	ldi	r25, 0x80	; 128
 836:	01 97       	sbiw	r24, 0x01	; 1
 838:	9e 83       	std	Y+6, r25	; 0x06
 83a:	8d 83       	std	Y+5, r24	; 0x05
 83c:	ae 01       	movw	r20, r28
 83e:	45 5e       	subi	r20, 0xE5	; 229
 840:	5f 4f       	sbci	r21, 0xFF	; 255
 842:	69 8d       	ldd	r22, Y+25	; 0x19
 844:	7a 8d       	ldd	r23, Y+26	; 0x1a
 846:	ce 01       	movw	r24, r28
 848:	01 96       	adiw	r24, 0x01	; 1
 84a:	0e 94 39 04 	call	0x872	; 0x872 <vfprintf>
 84e:	4d 81       	ldd	r20, Y+5	; 0x05
 850:	5e 81       	ldd	r21, Y+6	; 0x06
 852:	57 fd       	sbrc	r21, 7
 854:	0a c0       	rjmp	.+20     	; 0x86a <snprintf+0x58>
 856:	2f 81       	ldd	r18, Y+7	; 0x07
 858:	38 85       	ldd	r19, Y+8	; 0x08
 85a:	42 17       	cp	r20, r18
 85c:	53 07       	cpc	r21, r19
 85e:	0c f4       	brge	.+2      	; 0x862 <snprintf+0x50>
 860:	9a 01       	movw	r18, r20
 862:	f8 01       	movw	r30, r16
 864:	e2 0f       	add	r30, r18
 866:	f3 1f       	adc	r31, r19
 868:	10 82       	st	Z, r1
 86a:	2e 96       	adiw	r28, 0x0e	; 14
 86c:	e4 e0       	ldi	r30, 0x04	; 4
 86e:	0c 94 f4 06 	jmp	0xde8	; 0xde8 <__epilogue_restores__+0x1c>

00000872 <vfprintf>:
 872:	ab e0       	ldi	r26, 0x0B	; 11
 874:	b0 e0       	ldi	r27, 0x00	; 0
 876:	ef e3       	ldi	r30, 0x3F	; 63
 878:	f4 e0       	ldi	r31, 0x04	; 4
 87a:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__prologue_saves__>
 87e:	6c 01       	movw	r12, r24
 880:	7b 01       	movw	r14, r22
 882:	8a 01       	movw	r16, r20
 884:	fc 01       	movw	r30, r24
 886:	17 82       	std	Z+7, r1	; 0x07
 888:	16 82       	std	Z+6, r1	; 0x06
 88a:	83 81       	ldd	r24, Z+3	; 0x03
 88c:	81 ff       	sbrs	r24, 1
 88e:	cc c1       	rjmp	.+920    	; 0xc28 <__stack+0x329>
 890:	ce 01       	movw	r24, r28
 892:	01 96       	adiw	r24, 0x01	; 1
 894:	3c 01       	movw	r6, r24
 896:	f6 01       	movw	r30, r12
 898:	93 81       	ldd	r25, Z+3	; 0x03
 89a:	f7 01       	movw	r30, r14
 89c:	93 fd       	sbrc	r25, 3
 89e:	85 91       	lpm	r24, Z+
 8a0:	93 ff       	sbrs	r25, 3
 8a2:	81 91       	ld	r24, Z+
 8a4:	7f 01       	movw	r14, r30
 8a6:	88 23       	and	r24, r24
 8a8:	09 f4       	brne	.+2      	; 0x8ac <vfprintf+0x3a>
 8aa:	ba c1       	rjmp	.+884    	; 0xc20 <__stack+0x321>
 8ac:	85 32       	cpi	r24, 0x25	; 37
 8ae:	39 f4       	brne	.+14     	; 0x8be <vfprintf+0x4c>
 8b0:	93 fd       	sbrc	r25, 3
 8b2:	85 91       	lpm	r24, Z+
 8b4:	93 ff       	sbrs	r25, 3
 8b6:	81 91       	ld	r24, Z+
 8b8:	7f 01       	movw	r14, r30
 8ba:	85 32       	cpi	r24, 0x25	; 37
 8bc:	29 f4       	brne	.+10     	; 0x8c8 <vfprintf+0x56>
 8be:	b6 01       	movw	r22, r12
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 8c6:	e7 cf       	rjmp	.-50     	; 0x896 <vfprintf+0x24>
 8c8:	91 2c       	mov	r9, r1
 8ca:	21 2c       	mov	r2, r1
 8cc:	31 2c       	mov	r3, r1
 8ce:	ff e1       	ldi	r31, 0x1F	; 31
 8d0:	f3 15       	cp	r31, r3
 8d2:	d8 f0       	brcs	.+54     	; 0x90a <__stack+0xb>
 8d4:	8b 32       	cpi	r24, 0x2B	; 43
 8d6:	79 f0       	breq	.+30     	; 0x8f6 <vfprintf+0x84>
 8d8:	38 f4       	brcc	.+14     	; 0x8e8 <vfprintf+0x76>
 8da:	80 32       	cpi	r24, 0x20	; 32
 8dc:	79 f0       	breq	.+30     	; 0x8fc <vfprintf+0x8a>
 8de:	83 32       	cpi	r24, 0x23	; 35
 8e0:	a1 f4       	brne	.+40     	; 0x90a <__stack+0xb>
 8e2:	23 2d       	mov	r18, r3
 8e4:	20 61       	ori	r18, 0x10	; 16
 8e6:	1d c0       	rjmp	.+58     	; 0x922 <__stack+0x23>
 8e8:	8d 32       	cpi	r24, 0x2D	; 45
 8ea:	61 f0       	breq	.+24     	; 0x904 <__stack+0x5>
 8ec:	80 33       	cpi	r24, 0x30	; 48
 8ee:	69 f4       	brne	.+26     	; 0x90a <__stack+0xb>
 8f0:	23 2d       	mov	r18, r3
 8f2:	21 60       	ori	r18, 0x01	; 1
 8f4:	16 c0       	rjmp	.+44     	; 0x922 <__stack+0x23>
 8f6:	83 2d       	mov	r24, r3
 8f8:	82 60       	ori	r24, 0x02	; 2
 8fa:	38 2e       	mov	r3, r24
 8fc:	e3 2d       	mov	r30, r3
 8fe:	e4 60       	ori	r30, 0x04	; 4
 900:	3e 2e       	mov	r3, r30
 902:	2a c0       	rjmp	.+84     	; 0x958 <__stack+0x59>
 904:	f3 2d       	mov	r31, r3
 906:	f8 60       	ori	r31, 0x08	; 8
 908:	1d c0       	rjmp	.+58     	; 0x944 <__stack+0x45>
 90a:	37 fc       	sbrc	r3, 7
 90c:	2d c0       	rjmp	.+90     	; 0x968 <__stack+0x69>
 90e:	20 ed       	ldi	r18, 0xD0	; 208
 910:	28 0f       	add	r18, r24
 912:	2a 30       	cpi	r18, 0x0A	; 10
 914:	40 f0       	brcs	.+16     	; 0x926 <__stack+0x27>
 916:	8e 32       	cpi	r24, 0x2E	; 46
 918:	b9 f4       	brne	.+46     	; 0x948 <__stack+0x49>
 91a:	36 fc       	sbrc	r3, 6
 91c:	81 c1       	rjmp	.+770    	; 0xc20 <__stack+0x321>
 91e:	23 2d       	mov	r18, r3
 920:	20 64       	ori	r18, 0x40	; 64
 922:	32 2e       	mov	r3, r18
 924:	19 c0       	rjmp	.+50     	; 0x958 <__stack+0x59>
 926:	36 fe       	sbrs	r3, 6
 928:	06 c0       	rjmp	.+12     	; 0x936 <__stack+0x37>
 92a:	8a e0       	ldi	r24, 0x0A	; 10
 92c:	98 9e       	mul	r9, r24
 92e:	20 0d       	add	r18, r0
 930:	11 24       	eor	r1, r1
 932:	92 2e       	mov	r9, r18
 934:	11 c0       	rjmp	.+34     	; 0x958 <__stack+0x59>
 936:	ea e0       	ldi	r30, 0x0A	; 10
 938:	2e 9e       	mul	r2, r30
 93a:	20 0d       	add	r18, r0
 93c:	11 24       	eor	r1, r1
 93e:	22 2e       	mov	r2, r18
 940:	f3 2d       	mov	r31, r3
 942:	f0 62       	ori	r31, 0x20	; 32
 944:	3f 2e       	mov	r3, r31
 946:	08 c0       	rjmp	.+16     	; 0x958 <__stack+0x59>
 948:	8c 36       	cpi	r24, 0x6C	; 108
 94a:	21 f4       	brne	.+8      	; 0x954 <__stack+0x55>
 94c:	83 2d       	mov	r24, r3
 94e:	80 68       	ori	r24, 0x80	; 128
 950:	38 2e       	mov	r3, r24
 952:	02 c0       	rjmp	.+4      	; 0x958 <__stack+0x59>
 954:	88 36       	cpi	r24, 0x68	; 104
 956:	41 f4       	brne	.+16     	; 0x968 <__stack+0x69>
 958:	f7 01       	movw	r30, r14
 95a:	93 fd       	sbrc	r25, 3
 95c:	85 91       	lpm	r24, Z+
 95e:	93 ff       	sbrs	r25, 3
 960:	81 91       	ld	r24, Z+
 962:	7f 01       	movw	r14, r30
 964:	81 11       	cpse	r24, r1
 966:	b3 cf       	rjmp	.-154    	; 0x8ce <vfprintf+0x5c>
 968:	98 2f       	mov	r25, r24
 96a:	9f 7d       	andi	r25, 0xDF	; 223
 96c:	95 54       	subi	r25, 0x45	; 69
 96e:	93 30       	cpi	r25, 0x03	; 3
 970:	28 f4       	brcc	.+10     	; 0x97c <__stack+0x7d>
 972:	0c 5f       	subi	r16, 0xFC	; 252
 974:	1f 4f       	sbci	r17, 0xFF	; 255
 976:	9f e3       	ldi	r25, 0x3F	; 63
 978:	99 83       	std	Y+1, r25	; 0x01
 97a:	0d c0       	rjmp	.+26     	; 0x996 <__stack+0x97>
 97c:	83 36       	cpi	r24, 0x63	; 99
 97e:	31 f0       	breq	.+12     	; 0x98c <__stack+0x8d>
 980:	83 37       	cpi	r24, 0x73	; 115
 982:	71 f0       	breq	.+28     	; 0x9a0 <__stack+0xa1>
 984:	83 35       	cpi	r24, 0x53	; 83
 986:	09 f0       	breq	.+2      	; 0x98a <__stack+0x8b>
 988:	59 c0       	rjmp	.+178    	; 0xa3c <__stack+0x13d>
 98a:	21 c0       	rjmp	.+66     	; 0x9ce <__stack+0xcf>
 98c:	f8 01       	movw	r30, r16
 98e:	80 81       	ld	r24, Z
 990:	89 83       	std	Y+1, r24	; 0x01
 992:	0e 5f       	subi	r16, 0xFE	; 254
 994:	1f 4f       	sbci	r17, 0xFF	; 255
 996:	88 24       	eor	r8, r8
 998:	83 94       	inc	r8
 99a:	91 2c       	mov	r9, r1
 99c:	53 01       	movw	r10, r6
 99e:	13 c0       	rjmp	.+38     	; 0x9c6 <__stack+0xc7>
 9a0:	28 01       	movw	r4, r16
 9a2:	f2 e0       	ldi	r31, 0x02	; 2
 9a4:	4f 0e       	add	r4, r31
 9a6:	51 1c       	adc	r5, r1
 9a8:	f8 01       	movw	r30, r16
 9aa:	a0 80       	ld	r10, Z
 9ac:	b1 80       	ldd	r11, Z+1	; 0x01
 9ae:	36 fe       	sbrs	r3, 6
 9b0:	03 c0       	rjmp	.+6      	; 0x9b8 <__stack+0xb9>
 9b2:	69 2d       	mov	r22, r9
 9b4:	70 e0       	ldi	r23, 0x00	; 0
 9b6:	02 c0       	rjmp	.+4      	; 0x9bc <__stack+0xbd>
 9b8:	6f ef       	ldi	r22, 0xFF	; 255
 9ba:	7f ef       	ldi	r23, 0xFF	; 255
 9bc:	c5 01       	movw	r24, r10
 9be:	0e 94 25 06 	call	0xc4a	; 0xc4a <strnlen>
 9c2:	4c 01       	movw	r8, r24
 9c4:	82 01       	movw	r16, r4
 9c6:	f3 2d       	mov	r31, r3
 9c8:	ff 77       	andi	r31, 0x7F	; 127
 9ca:	3f 2e       	mov	r3, r31
 9cc:	16 c0       	rjmp	.+44     	; 0x9fa <__stack+0xfb>
 9ce:	28 01       	movw	r4, r16
 9d0:	22 e0       	ldi	r18, 0x02	; 2
 9d2:	42 0e       	add	r4, r18
 9d4:	51 1c       	adc	r5, r1
 9d6:	f8 01       	movw	r30, r16
 9d8:	a0 80       	ld	r10, Z
 9da:	b1 80       	ldd	r11, Z+1	; 0x01
 9dc:	36 fe       	sbrs	r3, 6
 9de:	03 c0       	rjmp	.+6      	; 0x9e6 <__stack+0xe7>
 9e0:	69 2d       	mov	r22, r9
 9e2:	70 e0       	ldi	r23, 0x00	; 0
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0xeb>
 9e6:	6f ef       	ldi	r22, 0xFF	; 255
 9e8:	7f ef       	ldi	r23, 0xFF	; 255
 9ea:	c5 01       	movw	r24, r10
 9ec:	0e 94 1a 06 	call	0xc34	; 0xc34 <strnlen_P>
 9f0:	4c 01       	movw	r8, r24
 9f2:	f3 2d       	mov	r31, r3
 9f4:	f0 68       	ori	r31, 0x80	; 128
 9f6:	3f 2e       	mov	r3, r31
 9f8:	82 01       	movw	r16, r4
 9fa:	33 fc       	sbrc	r3, 3
 9fc:	1b c0       	rjmp	.+54     	; 0xa34 <__stack+0x135>
 9fe:	82 2d       	mov	r24, r2
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	88 16       	cp	r8, r24
 a04:	99 06       	cpc	r9, r25
 a06:	b0 f4       	brcc	.+44     	; 0xa34 <__stack+0x135>
 a08:	b6 01       	movw	r22, r12
 a0a:	80 e2       	ldi	r24, 0x20	; 32
 a0c:	90 e0       	ldi	r25, 0x00	; 0
 a0e:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 a12:	2a 94       	dec	r2
 a14:	f4 cf       	rjmp	.-24     	; 0x9fe <__stack+0xff>
 a16:	f5 01       	movw	r30, r10
 a18:	37 fc       	sbrc	r3, 7
 a1a:	85 91       	lpm	r24, Z+
 a1c:	37 fe       	sbrs	r3, 7
 a1e:	81 91       	ld	r24, Z+
 a20:	5f 01       	movw	r10, r30
 a22:	b6 01       	movw	r22, r12
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 a2a:	21 10       	cpse	r2, r1
 a2c:	2a 94       	dec	r2
 a2e:	21 e0       	ldi	r18, 0x01	; 1
 a30:	82 1a       	sub	r8, r18
 a32:	91 08       	sbc	r9, r1
 a34:	81 14       	cp	r8, r1
 a36:	91 04       	cpc	r9, r1
 a38:	71 f7       	brne	.-36     	; 0xa16 <__stack+0x117>
 a3a:	e8 c0       	rjmp	.+464    	; 0xc0c <__stack+0x30d>
 a3c:	84 36       	cpi	r24, 0x64	; 100
 a3e:	11 f0       	breq	.+4      	; 0xa44 <__stack+0x145>
 a40:	89 36       	cpi	r24, 0x69	; 105
 a42:	41 f5       	brne	.+80     	; 0xa94 <__stack+0x195>
 a44:	f8 01       	movw	r30, r16
 a46:	37 fe       	sbrs	r3, 7
 a48:	07 c0       	rjmp	.+14     	; 0xa58 <__stack+0x159>
 a4a:	60 81       	ld	r22, Z
 a4c:	71 81       	ldd	r23, Z+1	; 0x01
 a4e:	82 81       	ldd	r24, Z+2	; 0x02
 a50:	93 81       	ldd	r25, Z+3	; 0x03
 a52:	0c 5f       	subi	r16, 0xFC	; 252
 a54:	1f 4f       	sbci	r17, 0xFF	; 255
 a56:	08 c0       	rjmp	.+16     	; 0xa68 <__stack+0x169>
 a58:	60 81       	ld	r22, Z
 a5a:	71 81       	ldd	r23, Z+1	; 0x01
 a5c:	07 2e       	mov	r0, r23
 a5e:	00 0c       	add	r0, r0
 a60:	88 0b       	sbc	r24, r24
 a62:	99 0b       	sbc	r25, r25
 a64:	0e 5f       	subi	r16, 0xFE	; 254
 a66:	1f 4f       	sbci	r17, 0xFF	; 255
 a68:	f3 2d       	mov	r31, r3
 a6a:	ff 76       	andi	r31, 0x6F	; 111
 a6c:	3f 2e       	mov	r3, r31
 a6e:	97 ff       	sbrs	r25, 7
 a70:	09 c0       	rjmp	.+18     	; 0xa84 <__stack+0x185>
 a72:	90 95       	com	r25
 a74:	80 95       	com	r24
 a76:	70 95       	com	r23
 a78:	61 95       	neg	r22
 a7a:	7f 4f       	sbci	r23, 0xFF	; 255
 a7c:	8f 4f       	sbci	r24, 0xFF	; 255
 a7e:	9f 4f       	sbci	r25, 0xFF	; 255
 a80:	f0 68       	ori	r31, 0x80	; 128
 a82:	3f 2e       	mov	r3, r31
 a84:	2a e0       	ldi	r18, 0x0A	; 10
 a86:	30 e0       	ldi	r19, 0x00	; 0
 a88:	a3 01       	movw	r20, r6
 a8a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__ultoa_invert>
 a8e:	88 2e       	mov	r8, r24
 a90:	86 18       	sub	r8, r6
 a92:	45 c0       	rjmp	.+138    	; 0xb1e <__stack+0x21f>
 a94:	85 37       	cpi	r24, 0x75	; 117
 a96:	31 f4       	brne	.+12     	; 0xaa4 <__stack+0x1a5>
 a98:	23 2d       	mov	r18, r3
 a9a:	2f 7e       	andi	r18, 0xEF	; 239
 a9c:	b2 2e       	mov	r11, r18
 a9e:	2a e0       	ldi	r18, 0x0A	; 10
 aa0:	30 e0       	ldi	r19, 0x00	; 0
 aa2:	25 c0       	rjmp	.+74     	; 0xaee <__stack+0x1ef>
 aa4:	93 2d       	mov	r25, r3
 aa6:	99 7f       	andi	r25, 0xF9	; 249
 aa8:	b9 2e       	mov	r11, r25
 aaa:	8f 36       	cpi	r24, 0x6F	; 111
 aac:	c1 f0       	breq	.+48     	; 0xade <__stack+0x1df>
 aae:	18 f4       	brcc	.+6      	; 0xab6 <__stack+0x1b7>
 ab0:	88 35       	cpi	r24, 0x58	; 88
 ab2:	79 f0       	breq	.+30     	; 0xad2 <__stack+0x1d3>
 ab4:	b5 c0       	rjmp	.+362    	; 0xc20 <__stack+0x321>
 ab6:	80 37       	cpi	r24, 0x70	; 112
 ab8:	19 f0       	breq	.+6      	; 0xac0 <__stack+0x1c1>
 aba:	88 37       	cpi	r24, 0x78	; 120
 abc:	21 f0       	breq	.+8      	; 0xac6 <__stack+0x1c7>
 abe:	b0 c0       	rjmp	.+352    	; 0xc20 <__stack+0x321>
 ac0:	e9 2f       	mov	r30, r25
 ac2:	e0 61       	ori	r30, 0x10	; 16
 ac4:	be 2e       	mov	r11, r30
 ac6:	b4 fe       	sbrs	r11, 4
 ac8:	0d c0       	rjmp	.+26     	; 0xae4 <__stack+0x1e5>
 aca:	fb 2d       	mov	r31, r11
 acc:	f4 60       	ori	r31, 0x04	; 4
 ace:	bf 2e       	mov	r11, r31
 ad0:	09 c0       	rjmp	.+18     	; 0xae4 <__stack+0x1e5>
 ad2:	34 fe       	sbrs	r3, 4
 ad4:	0a c0       	rjmp	.+20     	; 0xaea <__stack+0x1eb>
 ad6:	29 2f       	mov	r18, r25
 ad8:	26 60       	ori	r18, 0x06	; 6
 ada:	b2 2e       	mov	r11, r18
 adc:	06 c0       	rjmp	.+12     	; 0xaea <__stack+0x1eb>
 ade:	28 e0       	ldi	r18, 0x08	; 8
 ae0:	30 e0       	ldi	r19, 0x00	; 0
 ae2:	05 c0       	rjmp	.+10     	; 0xaee <__stack+0x1ef>
 ae4:	20 e1       	ldi	r18, 0x10	; 16
 ae6:	30 e0       	ldi	r19, 0x00	; 0
 ae8:	02 c0       	rjmp	.+4      	; 0xaee <__stack+0x1ef>
 aea:	20 e1       	ldi	r18, 0x10	; 16
 aec:	32 e0       	ldi	r19, 0x02	; 2
 aee:	f8 01       	movw	r30, r16
 af0:	b7 fe       	sbrs	r11, 7
 af2:	07 c0       	rjmp	.+14     	; 0xb02 <__stack+0x203>
 af4:	60 81       	ld	r22, Z
 af6:	71 81       	ldd	r23, Z+1	; 0x01
 af8:	82 81       	ldd	r24, Z+2	; 0x02
 afa:	93 81       	ldd	r25, Z+3	; 0x03
 afc:	0c 5f       	subi	r16, 0xFC	; 252
 afe:	1f 4f       	sbci	r17, 0xFF	; 255
 b00:	06 c0       	rjmp	.+12     	; 0xb0e <__stack+0x20f>
 b02:	60 81       	ld	r22, Z
 b04:	71 81       	ldd	r23, Z+1	; 0x01
 b06:	80 e0       	ldi	r24, 0x00	; 0
 b08:	90 e0       	ldi	r25, 0x00	; 0
 b0a:	0e 5f       	subi	r16, 0xFE	; 254
 b0c:	1f 4f       	sbci	r17, 0xFF	; 255
 b0e:	a3 01       	movw	r20, r6
 b10:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <__ultoa_invert>
 b14:	88 2e       	mov	r8, r24
 b16:	86 18       	sub	r8, r6
 b18:	fb 2d       	mov	r31, r11
 b1a:	ff 77       	andi	r31, 0x7F	; 127
 b1c:	3f 2e       	mov	r3, r31
 b1e:	36 fe       	sbrs	r3, 6
 b20:	0d c0       	rjmp	.+26     	; 0xb3c <__stack+0x23d>
 b22:	23 2d       	mov	r18, r3
 b24:	2e 7f       	andi	r18, 0xFE	; 254
 b26:	a2 2e       	mov	r10, r18
 b28:	89 14       	cp	r8, r9
 b2a:	58 f4       	brcc	.+22     	; 0xb42 <__stack+0x243>
 b2c:	34 fe       	sbrs	r3, 4
 b2e:	0b c0       	rjmp	.+22     	; 0xb46 <__stack+0x247>
 b30:	32 fc       	sbrc	r3, 2
 b32:	09 c0       	rjmp	.+18     	; 0xb46 <__stack+0x247>
 b34:	83 2d       	mov	r24, r3
 b36:	8e 7e       	andi	r24, 0xEE	; 238
 b38:	a8 2e       	mov	r10, r24
 b3a:	05 c0       	rjmp	.+10     	; 0xb46 <__stack+0x247>
 b3c:	b8 2c       	mov	r11, r8
 b3e:	a3 2c       	mov	r10, r3
 b40:	03 c0       	rjmp	.+6      	; 0xb48 <__stack+0x249>
 b42:	b8 2c       	mov	r11, r8
 b44:	01 c0       	rjmp	.+2      	; 0xb48 <__stack+0x249>
 b46:	b9 2c       	mov	r11, r9
 b48:	a4 fe       	sbrs	r10, 4
 b4a:	0f c0       	rjmp	.+30     	; 0xb6a <__stack+0x26b>
 b4c:	fe 01       	movw	r30, r28
 b4e:	e8 0d       	add	r30, r8
 b50:	f1 1d       	adc	r31, r1
 b52:	80 81       	ld	r24, Z
 b54:	80 33       	cpi	r24, 0x30	; 48
 b56:	21 f4       	brne	.+8      	; 0xb60 <__stack+0x261>
 b58:	9a 2d       	mov	r25, r10
 b5a:	99 7e       	andi	r25, 0xE9	; 233
 b5c:	a9 2e       	mov	r10, r25
 b5e:	09 c0       	rjmp	.+18     	; 0xb72 <__stack+0x273>
 b60:	a2 fe       	sbrs	r10, 2
 b62:	06 c0       	rjmp	.+12     	; 0xb70 <__stack+0x271>
 b64:	b3 94       	inc	r11
 b66:	b3 94       	inc	r11
 b68:	04 c0       	rjmp	.+8      	; 0xb72 <__stack+0x273>
 b6a:	8a 2d       	mov	r24, r10
 b6c:	86 78       	andi	r24, 0x86	; 134
 b6e:	09 f0       	breq	.+2      	; 0xb72 <__stack+0x273>
 b70:	b3 94       	inc	r11
 b72:	a3 fc       	sbrc	r10, 3
 b74:	11 c0       	rjmp	.+34     	; 0xb98 <__stack+0x299>
 b76:	a0 fe       	sbrs	r10, 0
 b78:	06 c0       	rjmp	.+12     	; 0xb86 <__stack+0x287>
 b7a:	b2 14       	cp	r11, r2
 b7c:	88 f4       	brcc	.+34     	; 0xba0 <__stack+0x2a1>
 b7e:	28 0c       	add	r2, r8
 b80:	92 2c       	mov	r9, r2
 b82:	9b 18       	sub	r9, r11
 b84:	0e c0       	rjmp	.+28     	; 0xba2 <__stack+0x2a3>
 b86:	b2 14       	cp	r11, r2
 b88:	60 f4       	brcc	.+24     	; 0xba2 <__stack+0x2a3>
 b8a:	b6 01       	movw	r22, r12
 b8c:	80 e2       	ldi	r24, 0x20	; 32
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 b94:	b3 94       	inc	r11
 b96:	f7 cf       	rjmp	.-18     	; 0xb86 <__stack+0x287>
 b98:	b2 14       	cp	r11, r2
 b9a:	18 f4       	brcc	.+6      	; 0xba2 <__stack+0x2a3>
 b9c:	2b 18       	sub	r2, r11
 b9e:	02 c0       	rjmp	.+4      	; 0xba4 <__stack+0x2a5>
 ba0:	98 2c       	mov	r9, r8
 ba2:	21 2c       	mov	r2, r1
 ba4:	a4 fe       	sbrs	r10, 4
 ba6:	10 c0       	rjmp	.+32     	; 0xbc8 <__stack+0x2c9>
 ba8:	b6 01       	movw	r22, r12
 baa:	80 e3       	ldi	r24, 0x30	; 48
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 bb2:	a2 fe       	sbrs	r10, 2
 bb4:	17 c0       	rjmp	.+46     	; 0xbe4 <__stack+0x2e5>
 bb6:	a1 fc       	sbrc	r10, 1
 bb8:	03 c0       	rjmp	.+6      	; 0xbc0 <__stack+0x2c1>
 bba:	88 e7       	ldi	r24, 0x78	; 120
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	02 c0       	rjmp	.+4      	; 0xbc4 <__stack+0x2c5>
 bc0:	88 e5       	ldi	r24, 0x58	; 88
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	b6 01       	movw	r22, r12
 bc6:	0c c0       	rjmp	.+24     	; 0xbe0 <__stack+0x2e1>
 bc8:	8a 2d       	mov	r24, r10
 bca:	86 78       	andi	r24, 0x86	; 134
 bcc:	59 f0       	breq	.+22     	; 0xbe4 <__stack+0x2e5>
 bce:	a1 fe       	sbrs	r10, 1
 bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <__stack+0x2d7>
 bd2:	8b e2       	ldi	r24, 0x2B	; 43
 bd4:	01 c0       	rjmp	.+2      	; 0xbd8 <__stack+0x2d9>
 bd6:	80 e2       	ldi	r24, 0x20	; 32
 bd8:	a7 fc       	sbrc	r10, 7
 bda:	8d e2       	ldi	r24, 0x2D	; 45
 bdc:	b6 01       	movw	r22, r12
 bde:	90 e0       	ldi	r25, 0x00	; 0
 be0:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 be4:	89 14       	cp	r8, r9
 be6:	38 f4       	brcc	.+14     	; 0xbf6 <__stack+0x2f7>
 be8:	b6 01       	movw	r22, r12
 bea:	80 e3       	ldi	r24, 0x30	; 48
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 bf2:	9a 94       	dec	r9
 bf4:	f7 cf       	rjmp	.-18     	; 0xbe4 <__stack+0x2e5>
 bf6:	8a 94       	dec	r8
 bf8:	f3 01       	movw	r30, r6
 bfa:	e8 0d       	add	r30, r8
 bfc:	f1 1d       	adc	r31, r1
 bfe:	80 81       	ld	r24, Z
 c00:	b6 01       	movw	r22, r12
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 c08:	81 10       	cpse	r8, r1
 c0a:	f5 cf       	rjmp	.-22     	; 0xbf6 <__stack+0x2f7>
 c0c:	22 20       	and	r2, r2
 c0e:	09 f4       	brne	.+2      	; 0xc12 <__stack+0x313>
 c10:	42 ce       	rjmp	.-892    	; 0x896 <vfprintf+0x24>
 c12:	b6 01       	movw	r22, r12
 c14:	80 e2       	ldi	r24, 0x20	; 32
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	0e 94 30 06 	call	0xc60	; 0xc60 <fputc>
 c1c:	2a 94       	dec	r2
 c1e:	f6 cf       	rjmp	.-20     	; 0xc0c <__stack+0x30d>
 c20:	f6 01       	movw	r30, r12
 c22:	86 81       	ldd	r24, Z+6	; 0x06
 c24:	97 81       	ldd	r25, Z+7	; 0x07
 c26:	02 c0       	rjmp	.+4      	; 0xc2c <__stack+0x32d>
 c28:	8f ef       	ldi	r24, 0xFF	; 255
 c2a:	9f ef       	ldi	r25, 0xFF	; 255
 c2c:	2b 96       	adiw	r28, 0x0b	; 11
 c2e:	e2 e1       	ldi	r30, 0x12	; 18
 c30:	0c 94 e6 06 	jmp	0xdcc	; 0xdcc <__epilogue_restores__>

00000c34 <strnlen_P>:
 c34:	fc 01       	movw	r30, r24
 c36:	05 90       	lpm	r0, Z+
 c38:	61 50       	subi	r22, 0x01	; 1
 c3a:	70 40       	sbci	r23, 0x00	; 0
 c3c:	01 10       	cpse	r0, r1
 c3e:	d8 f7       	brcc	.-10     	; 0xc36 <strnlen_P+0x2>
 c40:	80 95       	com	r24
 c42:	90 95       	com	r25
 c44:	8e 0f       	add	r24, r30
 c46:	9f 1f       	adc	r25, r31
 c48:	08 95       	ret

00000c4a <strnlen>:
 c4a:	fc 01       	movw	r30, r24
 c4c:	61 50       	subi	r22, 0x01	; 1
 c4e:	70 40       	sbci	r23, 0x00	; 0
 c50:	01 90       	ld	r0, Z+
 c52:	01 10       	cpse	r0, r1
 c54:	d8 f7       	brcc	.-10     	; 0xc4c <strnlen+0x2>
 c56:	80 95       	com	r24
 c58:	90 95       	com	r25
 c5a:	8e 0f       	add	r24, r30
 c5c:	9f 1f       	adc	r25, r31
 c5e:	08 95       	ret

00000c60 <fputc>:
 c60:	0f 93       	push	r16
 c62:	1f 93       	push	r17
 c64:	cf 93       	push	r28
 c66:	df 93       	push	r29
 c68:	fb 01       	movw	r30, r22
 c6a:	23 81       	ldd	r18, Z+3	; 0x03
 c6c:	21 fd       	sbrc	r18, 1
 c6e:	03 c0       	rjmp	.+6      	; 0xc76 <fputc+0x16>
 c70:	8f ef       	ldi	r24, 0xFF	; 255
 c72:	9f ef       	ldi	r25, 0xFF	; 255
 c74:	2c c0       	rjmp	.+88     	; 0xcce <fputc+0x6e>
 c76:	22 ff       	sbrs	r18, 2
 c78:	16 c0       	rjmp	.+44     	; 0xca6 <fputc+0x46>
 c7a:	46 81       	ldd	r20, Z+6	; 0x06
 c7c:	57 81       	ldd	r21, Z+7	; 0x07
 c7e:	24 81       	ldd	r18, Z+4	; 0x04
 c80:	35 81       	ldd	r19, Z+5	; 0x05
 c82:	42 17       	cp	r20, r18
 c84:	53 07       	cpc	r21, r19
 c86:	44 f4       	brge	.+16     	; 0xc98 <fputc+0x38>
 c88:	a0 81       	ld	r26, Z
 c8a:	b1 81       	ldd	r27, Z+1	; 0x01
 c8c:	9d 01       	movw	r18, r26
 c8e:	2f 5f       	subi	r18, 0xFF	; 255
 c90:	3f 4f       	sbci	r19, 0xFF	; 255
 c92:	31 83       	std	Z+1, r19	; 0x01
 c94:	20 83       	st	Z, r18
 c96:	8c 93       	st	X, r24
 c98:	26 81       	ldd	r18, Z+6	; 0x06
 c9a:	37 81       	ldd	r19, Z+7	; 0x07
 c9c:	2f 5f       	subi	r18, 0xFF	; 255
 c9e:	3f 4f       	sbci	r19, 0xFF	; 255
 ca0:	37 83       	std	Z+7, r19	; 0x07
 ca2:	26 83       	std	Z+6, r18	; 0x06
 ca4:	14 c0       	rjmp	.+40     	; 0xcce <fputc+0x6e>
 ca6:	8b 01       	movw	r16, r22
 ca8:	ec 01       	movw	r28, r24
 caa:	fb 01       	movw	r30, r22
 cac:	00 84       	ldd	r0, Z+8	; 0x08
 cae:	f1 85       	ldd	r31, Z+9	; 0x09
 cb0:	e0 2d       	mov	r30, r0
 cb2:	09 95       	icall
 cb4:	89 2b       	or	r24, r25
 cb6:	e1 f6       	brne	.-72     	; 0xc70 <fputc+0x10>
 cb8:	d8 01       	movw	r26, r16
 cba:	16 96       	adiw	r26, 0x06	; 6
 cbc:	8d 91       	ld	r24, X+
 cbe:	9c 91       	ld	r25, X
 cc0:	17 97       	sbiw	r26, 0x07	; 7
 cc2:	01 96       	adiw	r24, 0x01	; 1
 cc4:	17 96       	adiw	r26, 0x07	; 7
 cc6:	9c 93       	st	X, r25
 cc8:	8e 93       	st	-X, r24
 cca:	16 97       	sbiw	r26, 0x06	; 6
 ccc:	ce 01       	movw	r24, r28
 cce:	df 91       	pop	r29
 cd0:	cf 91       	pop	r28
 cd2:	1f 91       	pop	r17
 cd4:	0f 91       	pop	r16
 cd6:	08 95       	ret

00000cd8 <__ultoa_invert>:
 cd8:	fa 01       	movw	r30, r20
 cda:	aa 27       	eor	r26, r26
 cdc:	28 30       	cpi	r18, 0x08	; 8
 cde:	51 f1       	breq	.+84     	; 0xd34 <__ultoa_invert+0x5c>
 ce0:	20 31       	cpi	r18, 0x10	; 16
 ce2:	81 f1       	breq	.+96     	; 0xd44 <__ultoa_invert+0x6c>
 ce4:	e8 94       	clt
 ce6:	6f 93       	push	r22
 ce8:	6e 7f       	andi	r22, 0xFE	; 254
 cea:	6e 5f       	subi	r22, 0xFE	; 254
 cec:	7f 4f       	sbci	r23, 0xFF	; 255
 cee:	8f 4f       	sbci	r24, 0xFF	; 255
 cf0:	9f 4f       	sbci	r25, 0xFF	; 255
 cf2:	af 4f       	sbci	r26, 0xFF	; 255
 cf4:	b1 e0       	ldi	r27, 0x01	; 1
 cf6:	3e d0       	rcall	.+124    	; 0xd74 <__ultoa_invert+0x9c>
 cf8:	b4 e0       	ldi	r27, 0x04	; 4
 cfa:	3c d0       	rcall	.+120    	; 0xd74 <__ultoa_invert+0x9c>
 cfc:	67 0f       	add	r22, r23
 cfe:	78 1f       	adc	r23, r24
 d00:	89 1f       	adc	r24, r25
 d02:	9a 1f       	adc	r25, r26
 d04:	a1 1d       	adc	r26, r1
 d06:	68 0f       	add	r22, r24
 d08:	79 1f       	adc	r23, r25
 d0a:	8a 1f       	adc	r24, r26
 d0c:	91 1d       	adc	r25, r1
 d0e:	a1 1d       	adc	r26, r1
 d10:	6a 0f       	add	r22, r26
 d12:	71 1d       	adc	r23, r1
 d14:	81 1d       	adc	r24, r1
 d16:	91 1d       	adc	r25, r1
 d18:	a1 1d       	adc	r26, r1
 d1a:	20 d0       	rcall	.+64     	; 0xd5c <__ultoa_invert+0x84>
 d1c:	09 f4       	brne	.+2      	; 0xd20 <__ultoa_invert+0x48>
 d1e:	68 94       	set
 d20:	3f 91       	pop	r19
 d22:	2a e0       	ldi	r18, 0x0A	; 10
 d24:	26 9f       	mul	r18, r22
 d26:	11 24       	eor	r1, r1
 d28:	30 19       	sub	r19, r0
 d2a:	30 5d       	subi	r19, 0xD0	; 208
 d2c:	31 93       	st	Z+, r19
 d2e:	de f6       	brtc	.-74     	; 0xce6 <__ultoa_invert+0xe>
 d30:	cf 01       	movw	r24, r30
 d32:	08 95       	ret
 d34:	46 2f       	mov	r20, r22
 d36:	47 70       	andi	r20, 0x07	; 7
 d38:	40 5d       	subi	r20, 0xD0	; 208
 d3a:	41 93       	st	Z+, r20
 d3c:	b3 e0       	ldi	r27, 0x03	; 3
 d3e:	0f d0       	rcall	.+30     	; 0xd5e <__ultoa_invert+0x86>
 d40:	c9 f7       	brne	.-14     	; 0xd34 <__ultoa_invert+0x5c>
 d42:	f6 cf       	rjmp	.-20     	; 0xd30 <__ultoa_invert+0x58>
 d44:	46 2f       	mov	r20, r22
 d46:	4f 70       	andi	r20, 0x0F	; 15
 d48:	40 5d       	subi	r20, 0xD0	; 208
 d4a:	4a 33       	cpi	r20, 0x3A	; 58
 d4c:	18 f0       	brcs	.+6      	; 0xd54 <__ultoa_invert+0x7c>
 d4e:	49 5d       	subi	r20, 0xD9	; 217
 d50:	31 fd       	sbrc	r19, 1
 d52:	40 52       	subi	r20, 0x20	; 32
 d54:	41 93       	st	Z+, r20
 d56:	02 d0       	rcall	.+4      	; 0xd5c <__ultoa_invert+0x84>
 d58:	a9 f7       	brne	.-22     	; 0xd44 <__ultoa_invert+0x6c>
 d5a:	ea cf       	rjmp	.-44     	; 0xd30 <__ultoa_invert+0x58>
 d5c:	b4 e0       	ldi	r27, 0x04	; 4
 d5e:	a6 95       	lsr	r26
 d60:	97 95       	ror	r25
 d62:	87 95       	ror	r24
 d64:	77 95       	ror	r23
 d66:	67 95       	ror	r22
 d68:	ba 95       	dec	r27
 d6a:	c9 f7       	brne	.-14     	; 0xd5e <__ultoa_invert+0x86>
 d6c:	00 97       	sbiw	r24, 0x00	; 0
 d6e:	61 05       	cpc	r22, r1
 d70:	71 05       	cpc	r23, r1
 d72:	08 95       	ret
 d74:	9b 01       	movw	r18, r22
 d76:	ac 01       	movw	r20, r24
 d78:	0a 2e       	mov	r0, r26
 d7a:	06 94       	lsr	r0
 d7c:	57 95       	ror	r21
 d7e:	47 95       	ror	r20
 d80:	37 95       	ror	r19
 d82:	27 95       	ror	r18
 d84:	ba 95       	dec	r27
 d86:	c9 f7       	brne	.-14     	; 0xd7a <__ultoa_invert+0xa2>
 d88:	62 0f       	add	r22, r18
 d8a:	73 1f       	adc	r23, r19
 d8c:	84 1f       	adc	r24, r20
 d8e:	95 1f       	adc	r25, r21
 d90:	a0 1d       	adc	r26, r0
 d92:	08 95       	ret

00000d94 <__prologue_saves__>:
 d94:	2f 92       	push	r2
 d96:	3f 92       	push	r3
 d98:	4f 92       	push	r4
 d9a:	5f 92       	push	r5
 d9c:	6f 92       	push	r6
 d9e:	7f 92       	push	r7
 da0:	8f 92       	push	r8
 da2:	9f 92       	push	r9
 da4:	af 92       	push	r10
 da6:	bf 92       	push	r11
 da8:	cf 92       	push	r12
 daa:	df 92       	push	r13
 dac:	ef 92       	push	r14
 dae:	ff 92       	push	r15
 db0:	0f 93       	push	r16
 db2:	1f 93       	push	r17
 db4:	cf 93       	push	r28
 db6:	df 93       	push	r29
 db8:	cd b7       	in	r28, 0x3d	; 61
 dba:	de b7       	in	r29, 0x3e	; 62
 dbc:	ca 1b       	sub	r28, r26
 dbe:	db 0b       	sbc	r29, r27
 dc0:	0f b6       	in	r0, 0x3f	; 63
 dc2:	f8 94       	cli
 dc4:	de bf       	out	0x3e, r29	; 62
 dc6:	0f be       	out	0x3f, r0	; 63
 dc8:	cd bf       	out	0x3d, r28	; 61
 dca:	09 94       	ijmp

00000dcc <__epilogue_restores__>:
 dcc:	2a 88       	ldd	r2, Y+18	; 0x12
 dce:	39 88       	ldd	r3, Y+17	; 0x11
 dd0:	48 88       	ldd	r4, Y+16	; 0x10
 dd2:	5f 84       	ldd	r5, Y+15	; 0x0f
 dd4:	6e 84       	ldd	r6, Y+14	; 0x0e
 dd6:	7d 84       	ldd	r7, Y+13	; 0x0d
 dd8:	8c 84       	ldd	r8, Y+12	; 0x0c
 dda:	9b 84       	ldd	r9, Y+11	; 0x0b
 ddc:	aa 84       	ldd	r10, Y+10	; 0x0a
 dde:	b9 84       	ldd	r11, Y+9	; 0x09
 de0:	c8 84       	ldd	r12, Y+8	; 0x08
 de2:	df 80       	ldd	r13, Y+7	; 0x07
 de4:	ee 80       	ldd	r14, Y+6	; 0x06
 de6:	fd 80       	ldd	r15, Y+5	; 0x05
 de8:	0c 81       	ldd	r16, Y+4	; 0x04
 dea:	1b 81       	ldd	r17, Y+3	; 0x03
 dec:	aa 81       	ldd	r26, Y+2	; 0x02
 dee:	b9 81       	ldd	r27, Y+1	; 0x01
 df0:	ce 0f       	add	r28, r30
 df2:	d1 1d       	adc	r29, r1
 df4:	0f b6       	in	r0, 0x3f	; 63
 df6:	f8 94       	cli
 df8:	de bf       	out	0x3e, r29	; 62
 dfa:	0f be       	out	0x3f, r0	; 63
 dfc:	cd bf       	out	0x3d, r28	; 61
 dfe:	ed 01       	movw	r28, r26
 e00:	08 95       	ret

00000e02 <_exit>:
 e02:	f8 94       	cli

00000e04 <__stop_program>:
 e04:	ff cf       	rjmp	.-2      	; 0xe04 <__stop_program>
